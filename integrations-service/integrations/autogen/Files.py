# generated by datamodel-codegen:
#   filename:  openapi-1.0.0.yaml

from __future__ import annotations

from typing import Annotated
from uuid import UUID

from pydantic import AwareDatetime, BaseModel, ConfigDict, Field


class CreateFileRequest(BaseModel):
    """
    Payload for creating a file
    """

    model_config = ConfigDict(
        populate_by_name=True,
    )
    name: Annotated[
        str,
        Field(
            max_length=120,
            pattern="^[\\p{L}\\p{Nl}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]+[\\p{ID_Start}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]*$",
        ),
    ]
    """
    Name of the file
    """
    description: str = ""
    """
    Description of the file
    """
    mime_type: str | None = None
    """
    MIME type of the file
    """
    content: str
    """
    Base64 encoded content of the file
    """


class File(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    id: Annotated[UUID, Field(json_schema_extra={"readOnly": True})]
    created_at: Annotated[AwareDatetime, Field(json_schema_extra={"readOnly": True})]
    """
    When this resource was created as UTC date-time
    """
    name: Annotated[
        str,
        Field(
            max_length=120,
            pattern="^[\\p{L}\\p{Nl}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]+[\\p{ID_Start}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]*$",
        ),
    ]
    """
    Name of the file
    """
    description: str = ""
    """
    Description of the file
    """
    mime_type: str | None = None
    """
    MIME type of the file
    """
    content: str
    """
    Base64 encoded content of the file
    """
    size: Annotated[int, Field(ge=1, json_schema_extra={"readOnly": True})]
    """
    Size of the file in bytes
    """
    hash: Annotated[str, Field(json_schema_extra={"readOnly": True})]
    """
    Hash of the file
    """
