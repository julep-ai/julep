{
  "$defs": {
    "Agent": {
      "properties": {
        "about": {
          "default": "",
          "title": "About",
          "type": "string"
        },
        "canonical_name": {
          "anyOf": [
            {
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Canonical Name"
        },
        "created_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created At",
          "type": "string"
        },
        "default_settings": {
          "anyOf": [
            {
              "$ref": "#/$defs/DefaultChatSettings"
            },
            {
              "type": "null"
            }
          ]
        },
        "id": {
          "format": "uuid",
          "readOnly": true,
          "title": "Id",
          "type": "string"
        },
        "instructions": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "default": [],
          "title": "Instructions"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "model": {
          "default": "",
          "title": "Model",
          "type": "string"
        },
        "name": {
          "maxLength": 255,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated At",
          "type": "string"
        }
      },
      "required": [
        "id",
        "created_at",
        "updated_at",
        "name"
      ],
      "title": "Agent",
      "type": "object"
    },
    "ApiCallDef-Input": {
      "description": "API call definition",
      "properties": {
        "content": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Content"
        },
        "cookies": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Cookies"
        },
        "data": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Data"
        },
        "files": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Files"
        },
        "follow_redirects": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "title": "Follow Redirects"
        },
        "headers": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Headers"
        },
        "json": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Json"
        },
        "method": {
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "HEAD",
            "OPTIONS",
            "CONNECT",
            "TRACE"
          ],
          "title": "Method",
          "type": "string"
        },
        "params": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Params"
        },
        "schema": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Schema"
        },
        "timeout": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "title": "Timeout"
        },
        "url": {
          "format": "uri",
          "minLength": 1,
          "title": "Url",
          "type": "string"
        }
      },
      "required": [
        "method",
        "url"
      ],
      "title": "ApiCallDef",
      "type": "object"
    },
    "ApiCallDef-Output": {
      "description": "API call definition",
      "properties": {
        "content": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Content"
        },
        "cookies": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Cookies"
        },
        "data": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Data"
        },
        "files": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Files"
        },
        "follow_redirects": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "title": "Follow Redirects"
        },
        "headers": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Headers"
        },
        "json": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Json"
        },
        "method": {
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "HEAD",
            "OPTIONS",
            "CONNECT",
            "TRACE"
          ],
          "title": "Method",
          "type": "string"
        },
        "params": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Params"
        },
        "schema": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Schema"
        },
        "timeout": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "title": "Timeout"
        },
        "url": {
          "title": "Url",
          "type": "string"
        }
      },
      "required": [
        "method",
        "url"
      ],
      "title": "ApiCallDef",
      "type": "object"
    },
    "ApiCallDefUpdate": {
      "description": "API call definition",
      "properties": {
        "content": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Content"
        },
        "cookies": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Cookies"
        },
        "data": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Data"
        },
        "files": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Files"
        },
        "follow_redirects": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "title": "Follow Redirects"
        },
        "headers": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Headers"
        },
        "json": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Json"
        },
        "method": {
          "anyOf": [
            {
              "enum": [
                "GET",
                "POST",
                "PUT",
                "DELETE",
                "PATCH",
                "HEAD",
                "OPTIONS",
                "CONNECT",
                "TRACE"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "params": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Params"
        },
        "schema": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Schema"
        },
        "timeout": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "title": "Timeout"
        },
        "url": {
          "anyOf": [
            {
              "format": "uri",
              "minLength": 1,
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Url"
        }
      },
      "title": "ApiCallDefUpdate",
      "type": "object"
    },
    "ArxivIntegrationDef": {
      "description": "Arxiv integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/ArxivSearchArguments"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "provider": {
          "const": "arxiv",
          "default": "arxiv",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "title": "Setup"
        }
      },
      "title": "ArxivIntegrationDef",
      "type": "object"
    },
    "ArxivIntegrationDefUpdate": {
      "description": "Arxiv integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/ArxivSearchArgumentsUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "provider": {
          "const": "arxiv",
          "default": "arxiv",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "title": "Setup"
        }
      },
      "title": "ArxivIntegrationDefUpdate",
      "type": "object"
    },
    "ArxivSearchArguments": {
      "description": "Arguments for Arxiv Search",
      "properties": {
        "download_pdf": {
          "default": false,
          "title": "Download Pdf",
          "type": "boolean"
        },
        "id_list": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id List"
        },
        "max_results": {
          "default": 5,
          "maximum": 300000.0,
          "minimum": 1.0,
          "title": "Max Results",
          "type": "integer"
        },
        "query": {
          "title": "Query",
          "type": "string"
        },
        "sort_by": {
          "default": "relevance",
          "enum": [
            "relevance",
            "lastUpdatedDate",
            "submittedDate"
          ],
          "title": "Sort By",
          "type": "string"
        },
        "sort_order": {
          "default": "descending",
          "enum": [
            "ascending",
            "descending"
          ],
          "title": "Sort Order",
          "type": "string"
        }
      },
      "required": [
        "query"
      ],
      "title": "ArxivSearchArguments",
      "type": "object"
    },
    "ArxivSearchArgumentsUpdate": {
      "description": "Arguments for Arxiv Search",
      "properties": {
        "download_pdf": {
          "default": false,
          "title": "Download Pdf",
          "type": "boolean"
        },
        "id_list": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id List"
        },
        "max_results": {
          "default": 5,
          "maximum": 300000.0,
          "minimum": 1.0,
          "title": "Max Results",
          "type": "integer"
        },
        "query": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Query"
        },
        "sort_by": {
          "default": "relevance",
          "enum": [
            "relevance",
            "lastUpdatedDate",
            "submittedDate"
          ],
          "title": "Sort By",
          "type": "string"
        },
        "sort_order": {
          "default": "descending",
          "enum": [
            "ascending",
            "descending"
          ],
          "title": "Sort Order",
          "type": "string"
        }
      },
      "title": "ArxivSearchArgumentsUpdate",
      "type": "object"
    },
    "BaseTokenLogProb": {
      "properties": {
        "bytes": {
          "anyOf": [
            {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Bytes"
        },
        "logprob": {
          "title": "Logprob",
          "type": "number"
        },
        "token": {
          "title": "Token",
          "type": "string"
        }
      },
      "required": [
        "token",
        "logprob"
      ],
      "title": "BaseTokenLogProb",
      "type": "object"
    },
    "Bash20241022Def": {
      "properties": {
        "name": {
          "default": "bash",
          "title": "Name",
          "type": "string"
        },
        "type": {
          "const": "bash_20241022",
          "default": "bash_20241022",
          "title": "Type",
          "type": "string"
        }
      },
      "title": "Bash20241022Def",
      "type": "object"
    },
    "Bash20241022DefUpdate": {
      "properties": {
        "name": {
          "default": "bash",
          "title": "Name",
          "type": "string"
        },
        "type": {
          "const": "bash_20241022",
          "default": "bash_20241022",
          "title": "Type",
          "type": "string"
        }
      },
      "title": "Bash20241022DefUpdate",
      "type": "object"
    },
    "BraveIntegrationDef": {
      "description": "Brave integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/BraveSearchArguments"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "provider": {
          "const": "brave",
          "default": "brave",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/BraveSearchSetup"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "BraveIntegrationDef",
      "type": "object"
    },
    "BraveIntegrationDefUpdate": {
      "description": "Brave integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/BraveSearchArgumentsUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "provider": {
          "const": "brave",
          "default": "brave",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/BraveSearchSetupUpdate"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "BraveIntegrationDefUpdate",
      "type": "object"
    },
    "BraveSearchArguments": {
      "description": "Arguments for Brave Search",
      "properties": {
        "query": {
          "title": "Query",
          "type": "string"
        }
      },
      "required": [
        "query"
      ],
      "title": "BraveSearchArguments",
      "type": "object"
    },
    "BraveSearchArgumentsUpdate": {
      "description": "Arguments for Brave Search",
      "properties": {
        "query": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Query"
        }
      },
      "title": "BraveSearchArgumentsUpdate",
      "type": "object"
    },
    "BraveSearchSetup": {
      "description": "Integration definition for Brave Search",
      "properties": {
        "api_key": {
          "title": "Api Key",
          "type": "string"
        }
      },
      "required": [
        "api_key"
      ],
      "title": "BraveSearchSetup",
      "type": "object"
    },
    "BraveSearchSetupUpdate": {
      "description": "Integration definition for Brave Search",
      "properties": {
        "api_key": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Api Key"
        }
      },
      "title": "BraveSearchSetupUpdate",
      "type": "object"
    },
    "BrowserbaseCompleteSessionArguments": {
      "properties": {
        "id": {
          "title": "Id",
          "type": "string"
        },
        "status": {
          "const": "REQUEST_RELEASE",
          "default": "REQUEST_RELEASE",
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "title": "BrowserbaseCompleteSessionArguments",
      "type": "object"
    },
    "BrowserbaseCompleteSessionArgumentsUpdate": {
      "properties": {
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id"
        },
        "status": {
          "const": "REQUEST_RELEASE",
          "default": "REQUEST_RELEASE",
          "title": "Status",
          "type": "string"
        }
      },
      "title": "BrowserbaseCompleteSessionArgumentsUpdate",
      "type": "object"
    },
    "BrowserbaseCompleteSessionIntegrationDef": {
      "description": "browserbase complete session integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseCompleteSessionArguments"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "const": "complete_session",
          "default": "complete_session",
          "title": "Method",
          "type": "string"
        },
        "provider": {
          "const": "browserbase",
          "default": "browserbase",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseSetup"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "BrowserbaseCompleteSessionIntegrationDef",
      "type": "object"
    },
    "BrowserbaseCompleteSessionIntegrationDefUpdate": {
      "description": "browserbase complete session integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseCompleteSessionArgumentsUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "const": "complete_session",
          "default": "complete_session",
          "title": "Method",
          "type": "string"
        },
        "provider": {
          "const": "browserbase",
          "default": "browserbase",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseSetupUpdate"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "BrowserbaseCompleteSessionIntegrationDefUpdate",
      "type": "object"
    },
    "BrowserbaseContextArguments": {
      "properties": {
        "projectId": {
          "title": "Projectid",
          "type": "string"
        }
      },
      "required": [
        "projectId"
      ],
      "title": "BrowserbaseContextArguments",
      "type": "object"
    },
    "BrowserbaseContextArgumentsUpdate": {
      "properties": {
        "projectId": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Projectid"
        }
      },
      "title": "BrowserbaseContextArgumentsUpdate",
      "type": "object"
    },
    "BrowserbaseContextIntegrationDef": {
      "description": "browserbase context provider",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseContextArguments"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "const": "create_context",
          "default": "create_context",
          "title": "Method",
          "type": "string"
        },
        "provider": {
          "const": "browserbase",
          "default": "browserbase",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseSetup"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "BrowserbaseContextIntegrationDef",
      "type": "object"
    },
    "BrowserbaseContextIntegrationDefUpdate": {
      "description": "browserbase context provider",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseContextArgumentsUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "const": "create_context",
          "default": "create_context",
          "title": "Method",
          "type": "string"
        },
        "provider": {
          "const": "browserbase",
          "default": "browserbase",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseSetupUpdate"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "BrowserbaseContextIntegrationDefUpdate",
      "type": "object"
    },
    "BrowserbaseCreateSessionArguments": {
      "properties": {
        "browserSettings": {
          "default": {},
          "title": "Browsersettings",
          "type": "object"
        },
        "extensionId": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Extensionid"
        },
        "keepAlive": {
          "default": false,
          "title": "Keepalive",
          "type": "boolean"
        },
        "projectId": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Projectid"
        },
        "proxies": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          ],
          "default": false,
          "title": "Proxies"
        },
        "timeout": {
          "default": 3600,
          "title": "Timeout",
          "type": "integer"
        }
      },
      "title": "BrowserbaseCreateSessionArguments",
      "type": "object"
    },
    "BrowserbaseCreateSessionIntegrationDef": {
      "description": "browserbase create session integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseCreateSessionArguments"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "const": "create_session",
          "default": "create_session",
          "title": "Method",
          "type": "string"
        },
        "provider": {
          "const": "browserbase",
          "default": "browserbase",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseSetup"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "BrowserbaseCreateSessionIntegrationDef",
      "type": "object"
    },
    "BrowserbaseCreateSessionIntegrationDefUpdate": {
      "description": "browserbase create session integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseCreateSessionArguments"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "const": "create_session",
          "default": "create_session",
          "title": "Method",
          "type": "string"
        },
        "provider": {
          "const": "browserbase",
          "default": "browserbase",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseSetupUpdate"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "BrowserbaseCreateSessionIntegrationDefUpdate",
      "type": "object"
    },
    "BrowserbaseExtensionArguments": {
      "properties": {
        "ref": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Ref"
        },
        "repositoryName": {
          "title": "Repositoryname",
          "type": "string"
        }
      },
      "required": [
        "repositoryName"
      ],
      "title": "BrowserbaseExtensionArguments",
      "type": "object"
    },
    "BrowserbaseExtensionArgumentsUpdate": {
      "properties": {
        "ref": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Ref"
        },
        "repositoryName": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Repositoryname"
        }
      },
      "title": "BrowserbaseExtensionArgumentsUpdate",
      "type": "object"
    },
    "BrowserbaseExtensionIntegrationDef": {
      "description": "browserbase extension provider",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseExtensionArguments"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "anyOf": [
            {
              "const": "install_extension_from_github",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "provider": {
          "const": "browserbase",
          "default": "browserbase",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseSetup"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "BrowserbaseExtensionIntegrationDef",
      "type": "object"
    },
    "BrowserbaseExtensionIntegrationDefUpdate": {
      "description": "browserbase extension provider",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseExtensionArgumentsUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "anyOf": [
            {
              "const": "install_extension_from_github",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "provider": {
          "const": "browserbase",
          "default": "browserbase",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseSetupUpdate"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "BrowserbaseExtensionIntegrationDefUpdate",
      "type": "object"
    },
    "BrowserbaseGetSessionArguments": {
      "properties": {
        "id": {
          "title": "Id",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "title": "BrowserbaseGetSessionArguments",
      "type": "object"
    },
    "BrowserbaseGetSessionArgumentsUpdate": {
      "properties": {
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id"
        }
      },
      "title": "BrowserbaseGetSessionArgumentsUpdate",
      "type": "object"
    },
    "BrowserbaseGetSessionIntegrationDef": {
      "description": "browserbase get session integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseGetSessionArguments"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "const": "get_session",
          "default": "get_session",
          "title": "Method",
          "type": "string"
        },
        "provider": {
          "const": "browserbase",
          "default": "browserbase",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseSetup"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "BrowserbaseGetSessionIntegrationDef",
      "type": "object"
    },
    "BrowserbaseGetSessionIntegrationDefUpdate": {
      "description": "browserbase get session integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseGetSessionArgumentsUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "const": "get_session",
          "default": "get_session",
          "title": "Method",
          "type": "string"
        },
        "provider": {
          "const": "browserbase",
          "default": "browserbase",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseSetupUpdate"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "BrowserbaseGetSessionIntegrationDefUpdate",
      "type": "object"
    },
    "BrowserbaseGetSessionLiveUrlsArguments": {
      "properties": {
        "id": {
          "title": "Id",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "title": "BrowserbaseGetSessionLiveUrlsArguments",
      "type": "object"
    },
    "BrowserbaseGetSessionLiveUrlsArgumentsUpdate": {
      "properties": {
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id"
        }
      },
      "title": "BrowserbaseGetSessionLiveUrlsArgumentsUpdate",
      "type": "object"
    },
    "BrowserbaseGetSessionLiveUrlsIntegrationDef": {
      "description": "browserbase get session live urls integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseGetSessionLiveUrlsArguments"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "const": "get_live_urls",
          "default": "get_live_urls",
          "title": "Method",
          "type": "string"
        },
        "provider": {
          "const": "browserbase",
          "default": "browserbase",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseSetup"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "BrowserbaseGetSessionLiveUrlsIntegrationDef",
      "type": "object"
    },
    "BrowserbaseGetSessionLiveUrlsIntegrationDefUpdate": {
      "description": "browserbase get session live urls integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseGetSessionLiveUrlsArgumentsUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "const": "get_live_urls",
          "default": "get_live_urls",
          "title": "Method",
          "type": "string"
        },
        "provider": {
          "const": "browserbase",
          "default": "browserbase",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseSetupUpdate"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "BrowserbaseGetSessionLiveUrlsIntegrationDefUpdate",
      "type": "object"
    },
    "BrowserbaseListSessionsArguments": {
      "properties": {
        "status": {
          "anyOf": [
            {
              "enum": [
                "RUNNING",
                "ERROR",
                "TIMED_OUT",
                "COMPLETED"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Status"
        }
      },
      "title": "BrowserbaseListSessionsArguments",
      "type": "object"
    },
    "BrowserbaseListSessionsIntegrationDef": {
      "description": "browserbase list sessions integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseListSessionsArguments"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "const": "list_sessions",
          "default": "list_sessions",
          "title": "Method",
          "type": "string"
        },
        "provider": {
          "const": "browserbase",
          "default": "browserbase",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseSetup"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "BrowserbaseListSessionsIntegrationDef",
      "type": "object"
    },
    "BrowserbaseListSessionsIntegrationDefUpdate": {
      "description": "browserbase list sessions integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseListSessionsArguments"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "const": "list_sessions",
          "default": "list_sessions",
          "title": "Method",
          "type": "string"
        },
        "provider": {
          "const": "browserbase",
          "default": "browserbase",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrowserbaseSetupUpdate"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "BrowserbaseListSessionsIntegrationDefUpdate",
      "type": "object"
    },
    "BrowserbaseSetup": {
      "description": "The setup parameters for the browserbase integration",
      "properties": {
        "api_key": {
          "title": "Api Key",
          "type": "string"
        },
        "api_url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Api Url"
        },
        "connect_url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Connect Url"
        },
        "project_id": {
          "title": "Project Id",
          "type": "string"
        }
      },
      "required": [
        "api_key",
        "project_id"
      ],
      "title": "BrowserbaseSetup",
      "type": "object"
    },
    "BrowserbaseSetupUpdate": {
      "description": "The setup parameters for the browserbase integration",
      "properties": {
        "api_key": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Api Key"
        },
        "api_url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Api Url"
        },
        "connect_url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Connect Url"
        },
        "project_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Project Id"
        }
      },
      "title": "BrowserbaseSetupUpdate",
      "type": "object"
    },
    "CaseThen-Input": {
      "properties": {
        "case": {
          "anyOf": [
            {
              "const": "_",
              "type": "string"
            },
            {
              "type": "string"
            }
          ],
          "title": "Case"
        },
        "then": {
          "anyOf": [
            {
              "$ref": "#/$defs/EvaluateStep"
            },
            {
              "$ref": "#/$defs/ToolCallStep"
            },
            {
              "$ref": "#/$defs/PromptStep-Input"
            },
            {
              "$ref": "#/$defs/GetStep"
            },
            {
              "$ref": "#/$defs/SetStep"
            },
            {
              "$ref": "#/$defs/LogStep"
            },
            {
              "$ref": "#/$defs/YieldStep"
            },
            {
              "$ref": "#/$defs/ReturnStep"
            },
            {
              "$ref": "#/$defs/SleepStep"
            },
            {
              "$ref": "#/$defs/ErrorWorkflowStep"
            },
            {
              "$ref": "#/$defs/WaitForInputStep"
            }
          ],
          "title": "Then"
        }
      },
      "required": [
        "case",
        "then"
      ],
      "title": "CaseThen",
      "type": "object"
    },
    "CaseThen-Output": {
      "properties": {
        "case": {
          "anyOf": [
            {
              "const": "_",
              "type": "string"
            },
            {
              "type": "string"
            }
          ],
          "title": "Case"
        },
        "then": {
          "anyOf": [
            {
              "$ref": "#/$defs/EvaluateStep"
            },
            {
              "$ref": "#/$defs/ToolCallStep"
            },
            {
              "$ref": "#/$defs/PromptStep-Output"
            },
            {
              "$ref": "#/$defs/GetStep"
            },
            {
              "$ref": "#/$defs/SetStep"
            },
            {
              "$ref": "#/$defs/LogStep"
            },
            {
              "$ref": "#/$defs/YieldStep"
            },
            {
              "$ref": "#/$defs/ReturnStep"
            },
            {
              "$ref": "#/$defs/SleepStep"
            },
            {
              "$ref": "#/$defs/ErrorWorkflowStep"
            },
            {
              "$ref": "#/$defs/WaitForInputStep"
            }
          ],
          "title": "Then"
        }
      },
      "required": [
        "case",
        "then"
      ],
      "title": "CaseThen",
      "type": "object"
    },
    "ChatInput": {
      "properties": {
        "agent": {
          "anyOf": [
            {
              "format": "uuid",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Agent"
        },
        "frequency_penalty": {
          "anyOf": [
            {
              "maximum": 2.0,
              "minimum": -2.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Frequency Penalty"
        },
        "length_penalty": {
          "anyOf": [
            {
              "maximum": 2.0,
              "minimum": 0.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Length Penalty"
        },
        "logit_bias": {
          "anyOf": [
            {
              "additionalProperties": {
                "$ref": "#/$defs/LogitBias"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Logit Bias"
        },
        "max_tokens": {
          "anyOf": [
            {
              "minimum": 1.0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "title": "Max Tokens"
        },
        "messages": {
          "items": {
            "$ref": "#/$defs/Message"
          },
          "minItems": 1,
          "title": "Messages",
          "type": "array"
        },
        "min_p": {
          "anyOf": [
            {
              "maximum": 1.0,
              "minimum": 0.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Min P"
        },
        "model": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[\\p{L}\\p{Nl}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]+[\\p{ID_Start}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Model"
        },
        "presence_penalty": {
          "anyOf": [
            {
              "maximum": 2.0,
              "minimum": -2.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Presence Penalty"
        },
        "recall": {
          "default": true,
          "title": "Recall",
          "type": "boolean"
        },
        "remember": {
          "default": false,
          "readOnly": true,
          "title": "Remember",
          "type": "boolean"
        },
        "repetition_penalty": {
          "anyOf": [
            {
              "maximum": 2.0,
              "minimum": 0.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Repetition Penalty"
        },
        "response_format": {
          "anyOf": [
            {
              "$ref": "#/$defs/SimpleCompletionResponseFormat"
            },
            {
              "$ref": "#/$defs/SchemaCompletionResponseFormat"
            },
            {
              "type": "null"
            }
          ],
          "title": "Response Format"
        },
        "save": {
          "default": true,
          "title": "Save",
          "type": "boolean"
        },
        "seed": {
          "anyOf": [
            {
              "maximum": 1000.0,
              "minimum": -1.0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "title": "Seed"
        },
        "stop": {
          "default": [],
          "items": {
            "type": "string"
          },
          "maxItems": 4,
          "title": "Stop",
          "type": "array"
        },
        "stream": {
          "default": false,
          "title": "Stream",
          "type": "boolean"
        },
        "temperature": {
          "anyOf": [
            {
              "maximum": 5.0,
              "minimum": 0.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Temperature"
        },
        "tool_choice": {
          "anyOf": [
            {
              "enum": [
                "auto",
                "none"
              ],
              "type": "string"
            },
            {
              "$ref": "#/$defs/NamedToolChoice"
            },
            {
              "type": "null"
            }
          ],
          "title": "Tool Choice"
        },
        "tools": {
          "default": [],
          "items": {
            "$ref": "#/$defs/agents_api__autogen__Tools__CreateToolRequest-Input"
          },
          "title": "Tools",
          "type": "array"
        },
        "top_p": {
          "anyOf": [
            {
              "maximum": 1.0,
              "minimum": 0.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Top P"
        }
      },
      "required": [
        "messages"
      ],
      "title": "ChatInput",
      "type": "object"
    },
    "ChatOutputChunk": {
      "description": "Streaming chat completion output",
      "properties": {
        "delta": {
          "$ref": "#/$defs/Delta"
        },
        "finish_reason": {
          "default": "stop",
          "enum": [
            "stop",
            "length",
            "content_filter",
            "tool_calls"
          ],
          "title": "Finish Reason",
          "type": "string"
        },
        "index": {
          "title": "Index",
          "type": "integer"
        },
        "logprobs": {
          "anyOf": [
            {
              "$ref": "#/$defs/LogProbResponse"
            },
            {
              "type": "null"
            }
          ]
        },
        "tool_calls": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ChosenFunctionCall"
                  },
                  {
                    "$ref": "#/$defs/ChosenComputer20241022"
                  },
                  {
                    "$ref": "#/$defs/ChosenTextEditor20241022"
                  },
                  {
                    "$ref": "#/$defs/ChosenBash20241022"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Tool Calls"
        }
      },
      "required": [
        "index",
        "delta"
      ],
      "title": "ChatOutputChunk",
      "type": "object"
    },
    "ChatSettings": {
      "properties": {
        "agent": {
          "anyOf": [
            {
              "format": "uuid",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Agent"
        },
        "frequency_penalty": {
          "anyOf": [
            {
              "maximum": 2.0,
              "minimum": -2.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Frequency Penalty"
        },
        "length_penalty": {
          "anyOf": [
            {
              "maximum": 2.0,
              "minimum": 0.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Length Penalty"
        },
        "logit_bias": {
          "anyOf": [
            {
              "additionalProperties": {
                "$ref": "#/$defs/LogitBias"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Logit Bias"
        },
        "max_tokens": {
          "anyOf": [
            {
              "minimum": 1.0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "title": "Max Tokens"
        },
        "min_p": {
          "anyOf": [
            {
              "maximum": 1.0,
              "minimum": 0.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Min P"
        },
        "model": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[\\p{L}\\p{Nl}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]+[\\p{ID_Start}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Model"
        },
        "presence_penalty": {
          "anyOf": [
            {
              "maximum": 2.0,
              "minimum": -2.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Presence Penalty"
        },
        "repetition_penalty": {
          "anyOf": [
            {
              "maximum": 2.0,
              "minimum": 0.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Repetition Penalty"
        },
        "response_format": {
          "anyOf": [
            {
              "$ref": "#/$defs/SimpleCompletionResponseFormat"
            },
            {
              "$ref": "#/$defs/SchemaCompletionResponseFormat"
            },
            {
              "type": "null"
            }
          ],
          "title": "Response Format"
        },
        "seed": {
          "anyOf": [
            {
              "maximum": 1000.0,
              "minimum": -1.0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "title": "Seed"
        },
        "stop": {
          "default": [],
          "items": {
            "type": "string"
          },
          "maxItems": 4,
          "title": "Stop",
          "type": "array"
        },
        "stream": {
          "default": false,
          "title": "Stream",
          "type": "boolean"
        },
        "temperature": {
          "anyOf": [
            {
              "maximum": 5.0,
              "minimum": 0.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Temperature"
        },
        "top_p": {
          "anyOf": [
            {
              "maximum": 1.0,
              "minimum": 0.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Top P"
        }
      },
      "title": "ChatSettings",
      "type": "object"
    },
    "ChosenBash20241022": {
      "properties": {
        "command": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Command"
        },
        "restart": {
          "default": false,
          "title": "Restart",
          "type": "boolean"
        }
      },
      "title": "ChosenBash20241022",
      "type": "object"
    },
    "ChosenComputer20241022": {
      "properties": {
        "action": {
          "enum": [
            "key",
            "type",
            "cursor_position",
            "mouse_move",
            "left_click",
            "right_click",
            "middle_click",
            "double_click",
            "screenshot"
          ],
          "title": "Action",
          "type": "string"
        },
        "coordinate": {
          "anyOf": [
            {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Coordinate"
        },
        "text": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Text"
        }
      },
      "required": [
        "action"
      ],
      "title": "ChosenComputer20241022",
      "type": "object"
    },
    "ChosenFunctionCall": {
      "properties": {
        "api_call": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "title": "Api Call"
        },
        "bash_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/ChosenBash20241022"
            },
            {
              "type": "null"
            }
          ]
        },
        "computer_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/ChosenComputer20241022"
            },
            {
              "type": "null"
            }
          ]
        },
        "function": {
          "$ref": "#/$defs/FunctionCallOption"
        },
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "readOnly": true,
          "title": "Id"
        },
        "integration": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "title": "Integration"
        },
        "system": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "title": "System"
        },
        "text_editor_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/ChosenTextEditor20241022"
            },
            {
              "type": "null"
            }
          ]
        },
        "type": {
          "const": "function",
          "default": "function",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "function"
      ],
      "title": "ChosenFunctionCall",
      "type": "object"
    },
    "ChosenTextEditor20241022": {
      "properties": {
        "command": {
          "enum": [
            "str_replace",
            "insert",
            "view",
            "undo_edit"
          ],
          "title": "Command",
          "type": "string"
        },
        "file_text": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "File Text"
        },
        "insert_line": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "title": "Insert Line"
        },
        "new_str": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "New Str"
        },
        "old_str": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Old Str"
        },
        "path": {
          "title": "Path",
          "type": "string"
        },
        "view_range": {
          "anyOf": [
            {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "View Range"
        }
      },
      "required": [
        "command",
        "path"
      ],
      "title": "ChosenTextEditor20241022",
      "type": "object"
    },
    "ChunkChatResponse": {
      "properties": {
        "choices": {
          "items": {
            "$ref": "#/$defs/ChatOutputChunk"
          },
          "title": "Choices",
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created At",
          "type": "string"
        },
        "docs": {
          "default": [],
          "items": {
            "$ref": "#/$defs/DocReference"
          },
          "readOnly": true,
          "title": "Docs",
          "type": "array"
        },
        "id": {
          "format": "uuid",
          "readOnly": true,
          "title": "Id",
          "type": "string"
        },
        "jobs": {
          "default": [],
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "readOnly": true,
          "title": "Jobs",
          "type": "array"
        },
        "usage": {
          "anyOf": [
            {
              "$ref": "#/$defs/CompetionUsage"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "created_at",
        "id",
        "choices"
      ],
      "title": "ChunkChatResponse",
      "type": "object"
    },
    "CloudinaryEditArguments": {
      "description": "Arguments for Cloudinary media edit",
      "properties": {
        "public_id": {
          "title": "Public Id",
          "type": "string"
        },
        "return_base64": {
          "default": false,
          "title": "Return Base64",
          "type": "boolean"
        },
        "transformation": {
          "items": {
            "type": "object"
          },
          "title": "Transformation",
          "type": "array"
        }
      },
      "required": [
        "public_id",
        "transformation"
      ],
      "title": "CloudinaryEditArguments",
      "type": "object"
    },
    "CloudinaryEditArgumentsUpdate": {
      "description": "Arguments for Cloudinary media edit",
      "properties": {
        "public_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Public Id"
        },
        "return_base64": {
          "default": false,
          "title": "Return Base64",
          "type": "boolean"
        },
        "transformation": {
          "anyOf": [
            {
              "items": {
                "type": "object"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Transformation"
        }
      },
      "title": "CloudinaryEditArgumentsUpdate",
      "type": "object"
    },
    "CloudinaryEditIntegrationDef": {
      "description": "Cloudinary edit integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/CloudinaryEditArguments"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "const": "media_edit",
          "default": "media_edit",
          "title": "Method",
          "type": "string"
        },
        "provider": {
          "const": "cloudinary",
          "default": "cloudinary",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/CloudinarySetup"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "CloudinaryEditIntegrationDef",
      "type": "object"
    },
    "CloudinaryEditIntegrationDefUpdate": {
      "description": "Cloudinary edit integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/CloudinaryEditArgumentsUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "const": "media_edit",
          "default": "media_edit",
          "title": "Method",
          "type": "string"
        },
        "provider": {
          "const": "cloudinary",
          "default": "cloudinary",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/CloudinarySetupUpdate"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "CloudinaryEditIntegrationDefUpdate",
      "type": "object"
    },
    "CloudinarySetup": {
      "description": "Setup parameters for Cloudinary integration",
      "properties": {
        "cloudinary_api_key": {
          "title": "Cloudinary Api Key",
          "type": "string"
        },
        "cloudinary_api_secret": {
          "title": "Cloudinary Api Secret",
          "type": "string"
        },
        "cloudinary_cloud_name": {
          "title": "Cloudinary Cloud Name",
          "type": "string"
        },
        "params": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Params"
        }
      },
      "required": [
        "cloudinary_api_key",
        "cloudinary_api_secret",
        "cloudinary_cloud_name"
      ],
      "title": "CloudinarySetup",
      "type": "object"
    },
    "CloudinarySetupUpdate": {
      "description": "Setup parameters for Cloudinary integration",
      "properties": {
        "cloudinary_api_key": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Cloudinary Api Key"
        },
        "cloudinary_api_secret": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Cloudinary Api Secret"
        },
        "cloudinary_cloud_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Cloudinary Cloud Name"
        },
        "params": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Params"
        }
      },
      "title": "CloudinarySetupUpdate",
      "type": "object"
    },
    "CloudinaryUploadArguments": {
      "description": "Arguments for Cloudinary media upload",
      "properties": {
        "file": {
          "title": "File",
          "type": "string"
        },
        "public_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Public Id"
        },
        "return_base64": {
          "default": false,
          "title": "Return Base64",
          "type": "boolean"
        },
        "upload_params": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Upload Params"
        }
      },
      "required": [
        "file"
      ],
      "title": "CloudinaryUploadArguments",
      "type": "object"
    },
    "CloudinaryUploadArgumentsUpdate": {
      "description": "Arguments for Cloudinary media upload",
      "properties": {
        "file": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "File"
        },
        "public_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Public Id"
        },
        "return_base64": {
          "default": false,
          "title": "Return Base64",
          "type": "boolean"
        },
        "upload_params": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Upload Params"
        }
      },
      "title": "CloudinaryUploadArgumentsUpdate",
      "type": "object"
    },
    "CloudinaryUploadIntegrationDef": {
      "description": "Cloudinary upload integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/CloudinaryUploadArguments"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "const": "media_upload",
          "default": "media_upload",
          "title": "Method",
          "type": "string"
        },
        "provider": {
          "const": "cloudinary",
          "default": "cloudinary",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/CloudinarySetup"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "CloudinaryUploadIntegrationDef",
      "type": "object"
    },
    "CloudinaryUploadIntegrationDefUpdate": {
      "description": "Cloudinary upload integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/CloudinaryUploadArgumentsUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "const": "media_upload",
          "default": "media_upload",
          "title": "Method",
          "type": "string"
        },
        "provider": {
          "const": "cloudinary",
          "default": "cloudinary",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/CloudinarySetupUpdate"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "CloudinaryUploadIntegrationDefUpdate",
      "type": "object"
    },
    "CompetionUsage": {
      "description": "Usage statistics for the completion request",
      "properties": {
        "completion_tokens": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "readOnly": true,
          "title": "Completion Tokens"
        },
        "prompt_tokens": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "readOnly": true,
          "title": "Prompt Tokens"
        },
        "total_tokens": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "readOnly": true,
          "title": "Total Tokens"
        }
      },
      "title": "CompetionUsage",
      "type": "object"
    },
    "Computer20241022Def": {
      "description": "Anthropic new tools",
      "properties": {
        "display_height_px": {
          "default": 768,
          "minimum": 400.0,
          "title": "Display Height Px",
          "type": "integer"
        },
        "display_number": {
          "default": 1,
          "maximum": 10.0,
          "minimum": 1.0,
          "title": "Display Number",
          "type": "integer"
        },
        "display_width_px": {
          "default": 1024,
          "minimum": 600.0,
          "title": "Display Width Px",
          "type": "integer"
        },
        "name": {
          "default": "computer",
          "title": "Name",
          "type": "string"
        },
        "type": {
          "const": "computer_20241022",
          "default": "computer_20241022",
          "title": "Type",
          "type": "string"
        }
      },
      "title": "Computer20241022Def",
      "type": "object"
    },
    "Computer20241022DefUpdate": {
      "description": "Anthropic new tools",
      "properties": {
        "display_height_px": {
          "default": 768,
          "minimum": 400.0,
          "title": "Display Height Px",
          "type": "integer"
        },
        "display_number": {
          "default": 1,
          "maximum": 10.0,
          "minimum": 1.0,
          "title": "Display Number",
          "type": "integer"
        },
        "display_width_px": {
          "default": 1024,
          "minimum": 600.0,
          "title": "Display Width Px",
          "type": "integer"
        },
        "name": {
          "default": "computer",
          "title": "Name",
          "type": "string"
        },
        "type": {
          "const": "computer_20241022",
          "default": "computer_20241022",
          "title": "Type",
          "type": "string"
        }
      },
      "title": "Computer20241022DefUpdate",
      "type": "object"
    },
    "Content": {
      "properties": {
        "text": {
          "title": "Text",
          "type": "string"
        },
        "type": {
          "const": "text",
          "default": "text",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "title": "Content",
      "type": "object"
    },
    "ContentItem": {
      "properties": {
        "text": {
          "title": "Text",
          "type": "string"
        },
        "type": {
          "const": "text",
          "default": "text",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "title": "ContentItem",
      "type": "object"
    },
    "ContentItemModel": {
      "properties": {
        "source": {
          "$ref": "#/$defs/Source"
        },
        "type": {
          "const": "image",
          "default": "image",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "source"
      ],
      "title": "ContentItemModel",
      "type": "object"
    },
    "ContentItemModel1": {
      "properties": {
        "text": {
          "title": "Text",
          "type": "string"
        },
        "type": {
          "const": "text",
          "default": "text",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "title": "ContentItemModel1",
      "type": "object"
    },
    "ContentItemModel2": {
      "properties": {
        "source": {
          "$ref": "#/$defs/Source"
        },
        "type": {
          "const": "image",
          "default": "image",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "source"
      ],
      "title": "ContentItemModel2",
      "type": "object"
    },
    "ContentItemModel3": {
      "properties": {
        "text": {
          "title": "Text",
          "type": "string"
        },
        "type": {
          "const": "text",
          "default": "text",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "title": "ContentItemModel3",
      "type": "object"
    },
    "ContentItemModel4": {
      "properties": {
        "source": {
          "$ref": "#/$defs/Source"
        },
        "type": {
          "const": "image",
          "default": "image",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "source"
      ],
      "title": "ContentItemModel4",
      "type": "object"
    },
    "ContentModel1-Input": {
      "description": "Anthropic image content part",
      "properties": {
        "content": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ContentItem"
              },
              "type": "array"
            },
            {
              "items": {
                "$ref": "#/$defs/ContentItemModel"
              },
              "type": "array"
            }
          ],
          "title": "Content"
        },
        "tool_use_id": {
          "title": "Tool Use Id",
          "type": "string"
        },
        "type": {
          "const": "tool_result",
          "default": "tool_result",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "tool_use_id",
        "content"
      ],
      "title": "ContentModel1",
      "type": "object"
    },
    "ContentModel4": {
      "description": "Anthropic image content part",
      "properties": {
        "content": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ContentItemModel3"
              },
              "type": "array"
            },
            {
              "items": {
                "$ref": "#/$defs/ContentItemModel4"
              },
              "type": "array"
            }
          ],
          "title": "Content"
        },
        "tool_use_id": {
          "title": "Tool Use Id",
          "type": "string"
        },
        "type": {
          "const": "tool_result",
          "default": "tool_result",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "tool_use_id",
        "content"
      ],
      "title": "ContentModel4",
      "type": "object"
    },
    "ContentModel7": {
      "properties": {
        "image_url": {
          "$ref": "#/$defs/ImageUrl"
        },
        "type": {
          "const": "image_url",
          "default": "image_url",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "image_url"
      ],
      "title": "ContentModel7",
      "type": "object"
    },
    "CreateAgentRequest": {
      "description": "Payload for creating a agent (and associated documents)",
      "properties": {
        "about": {
          "default": "",
          "title": "About",
          "type": "string"
        },
        "canonical_name": {
          "anyOf": [
            {
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Canonical Name"
        },
        "default_settings": {
          "anyOf": [
            {
              "$ref": "#/$defs/DefaultChatSettings"
            },
            {
              "type": "null"
            }
          ]
        },
        "instructions": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "default": [],
          "title": "Instructions"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "model": {
          "default": "",
          "title": "Model",
          "type": "string"
        },
        "name": {
          "maxLength": 255,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "title": "CreateAgentRequest",
      "type": "object"
    },
    "CreateDocRequest": {
      "description": "Payload for creating a doc",
      "properties": {
        "content": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "title": "Content"
        },
        "embed_instruction": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Embed Instruction"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "title": {
          "maxLength": 800,
          "title": "Title",
          "type": "string"
        }
      },
      "required": [
        "title",
        "content"
      ],
      "title": "CreateDocRequest",
      "type": "object"
    },
    "CreateExecutionRequest": {
      "description": "Payload for creating an execution",
      "properties": {
        "error": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Error"
        },
        "input": {
          "title": "Input",
          "type": "object"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "output": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "title": "Output"
        }
      },
      "required": [
        "input"
      ],
      "title": "CreateExecutionRequest",
      "type": "object"
    },
    "CreateFileRequest": {
      "description": "Payload for creating a file",
      "properties": {
        "content": {
          "title": "Content",
          "type": "string"
        },
        "description": {
          "default": "",
          "title": "Description",
          "type": "string"
        },
        "mime_type": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Mime Type"
        },
        "name": {
          "maxLength": 120,
          "pattern": "^[\\p{L}\\p{Nl}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]+[\\p{ID_Start}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]*$",
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "name",
        "content"
      ],
      "title": "CreateFileRequest",
      "type": "object"
    },
    "CreateOrUpdateAgentRequest": {
      "properties": {
        "about": {
          "default": "",
          "title": "About",
          "type": "string"
        },
        "canonical_name": {
          "anyOf": [
            {
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Canonical Name"
        },
        "default_settings": {
          "anyOf": [
            {
              "$ref": "#/$defs/DefaultChatSettings"
            },
            {
              "type": "null"
            }
          ]
        },
        "instructions": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "default": [],
          "title": "Instructions"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "model": {
          "default": "",
          "title": "Model",
          "type": "string"
        },
        "name": {
          "maxLength": 255,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "title": "CreateOrUpdateAgentRequest",
      "type": "object"
    },
    "CreateOrUpdateSessionRequest": {
      "properties": {
        "agent": {
          "anyOf": [
            {
              "format": "uuid",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Agent"
        },
        "agents": {
          "anyOf": [
            {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Agents"
        },
        "auto_run_tools": {
          "default": false,
          "title": "Auto Run Tools",
          "type": "boolean"
        },
        "context_overflow": {
          "anyOf": [
            {
              "enum": [
                "truncate",
                "adaptive"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Context Overflow"
        },
        "forward_tool_calls": {
          "default": false,
          "title": "Forward Tool Calls",
          "type": "boolean"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "recall_options": {
          "anyOf": [
            {
              "$ref": "#/$defs/RecallOptions"
            },
            {
              "type": "null"
            }
          ]
        },
        "render_templates": {
          "default": true,
          "title": "Render Templates",
          "type": "boolean"
        },
        "situation": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Situation"
        },
        "system_template": {
          "default": "{%- if agent.name -%}\nYou are {{agent.name}}.{{\" \"}}\n{%- endif -%}\n\n{%- if agent.about -%}\nAbout you: {{agent.about}}.{{\" \"}}\n{%- endif -%}\n\n{%- if user -%}\nYou are talking to a user\n  {%- if user.name -%}{{\" \"}} and their name is {{user.name}}\n    {%- if user.about -%}. About the user: {{user.about}}.{%- else -%}.{%- endif -%}\n  {%- endif -%}\n{%- endif -%}\n\n{{NEWLINE}}\n\n{%- if session.situation -%}\nSituation: {{session.situation}}\n{%- endif -%}\n\n{{NEWLINE+NEWLINE}}\n\n{%- if agent.instructions -%}\nInstructions:{{NEWLINE}}\n  {%- if agent.instructions is string -%}\n    {{agent.instructions}}{{NEWLINE}}\n  {%- else -%}\n    {%- for instruction in agent.instructions -%}\n      - {{instruction}}{{NEWLINE}}\n    {%- endfor -%}\n  {%- endif -%}\n  {{NEWLINE}}\n{%- endif -%}\n\n{%- if docs -%}\nRelevant documents:{{NEWLINE}}\n  {%- for doc in docs -%}\n    {{doc.title}}{{NEWLINE}}\n    {%- if doc.content is string -%}\n      {{doc.content}}{{NEWLINE}}\n    {%- else -%}\n      {%- for snippet in doc.content -%}\n        {{snippet}}{{NEWLINE}}\n      {%- endfor -%}\n    {%- endif -%}\n    {{\"---\"}}\n  {%- endfor -%}\n{%- endif -%}",
          "title": "System Template",
          "type": "string"
        },
        "token_budget": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "title": "Token Budget"
        },
        "user": {
          "anyOf": [
            {
              "format": "uuid",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "User"
        },
        "users": {
          "anyOf": [
            {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Users"
        }
      },
      "title": "CreateOrUpdateSessionRequest",
      "type": "object"
    },
    "CreateOrUpdateUserRequest": {
      "properties": {
        "about": {
          "default": "",
          "title": "About",
          "type": "string"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "name": {
          "default": "",
          "maxLength": 120,
          "pattern": "^[\\p{L}\\p{Nl}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]+[\\p{ID_Start}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]*$",
          "title": "Name",
          "type": "string"
        }
      },
      "title": "CreateOrUpdateUserRequest",
      "type": "object"
    },
    "CreateSessionRequest": {
      "description": "Payload for creating a session",
      "properties": {
        "agent": {
          "anyOf": [
            {
              "format": "uuid",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Agent"
        },
        "agents": {
          "anyOf": [
            {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Agents"
        },
        "auto_run_tools": {
          "default": false,
          "title": "Auto Run Tools",
          "type": "boolean"
        },
        "context_overflow": {
          "anyOf": [
            {
              "enum": [
                "truncate",
                "adaptive"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Context Overflow"
        },
        "forward_tool_calls": {
          "default": false,
          "title": "Forward Tool Calls",
          "type": "boolean"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "recall_options": {
          "anyOf": [
            {
              "$ref": "#/$defs/RecallOptions"
            },
            {
              "type": "null"
            }
          ]
        },
        "render_templates": {
          "default": true,
          "title": "Render Templates",
          "type": "boolean"
        },
        "situation": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Situation"
        },
        "system_template": {
          "default": "{%- if agent.name -%}\nYou are {{agent.name}}.{{\" \"}}\n{%- endif -%}\n\n{%- if agent.about -%}\nAbout you: {{agent.about}}.{{\" \"}}\n{%- endif -%}\n\n{%- if user -%}\nYou are talking to a user\n  {%- if user.name -%}{{\" \"}} and their name is {{user.name}}\n    {%- if user.about -%}. About the user: {{user.about}}.{%- else -%}.{%- endif -%}\n  {%- endif -%}\n{%- endif -%}\n\n{{NEWLINE}}\n\n{%- if session.situation -%}\nSituation: {{session.situation}}\n{%- endif -%}\n\n{{NEWLINE+NEWLINE}}\n\n{%- if agent.instructions -%}\nInstructions:{{NEWLINE}}\n  {%- if agent.instructions is string -%}\n    {{agent.instructions}}{{NEWLINE}}\n  {%- else -%}\n    {%- for instruction in agent.instructions -%}\n      - {{instruction}}{{NEWLINE}}\n    {%- endfor -%}\n  {%- endif -%}\n  {{NEWLINE}}\n{%- endif -%}\n\n{%- if docs -%}\nRelevant documents:{{NEWLINE}}\n  {%- for doc in docs -%}\n    {{doc.title}}{{NEWLINE}}\n    {%- if doc.content is string -%}\n      {{doc.content}}{{NEWLINE}}\n    {%- else -%}\n      {%- for snippet in doc.content -%}\n        {{snippet}}{{NEWLINE}}\n      {%- endfor -%}\n    {%- endif -%}\n    {{\"---\"}}\n  {%- endfor -%}\n{%- endif -%}",
          "title": "System Template",
          "type": "string"
        },
        "token_budget": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "title": "Token Budget"
        },
        "user": {
          "anyOf": [
            {
              "format": "uuid",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "User"
        },
        "users": {
          "anyOf": [
            {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Users"
        }
      },
      "title": "CreateSessionRequest",
      "type": "object"
    },
    "CreateTaskRequest": {
      "additionalProperties": true,
      "description": "Payload for creating a task",
      "properties": {
        "canonical_name": {
          "anyOf": [
            {
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Canonical Name"
        },
        "description": {
          "default": "",
          "title": "Description",
          "type": "string"
        },
        "inherit_tools": {
          "default": false,
          "title": "Inherit Tools",
          "type": "boolean"
        },
        "input_schema": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Input Schema"
        },
        "main": {
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/EvaluateStep"
              },
              {
                "$ref": "#/$defs/ToolCallStep"
              },
              {
                "$ref": "#/$defs/PromptStep-Input"
              },
              {
                "$ref": "#/$defs/GetStep"
              },
              {
                "$ref": "#/$defs/SetStep"
              },
              {
                "$ref": "#/$defs/LogStep"
              },
              {
                "$ref": "#/$defs/YieldStep"
              },
              {
                "$ref": "#/$defs/ReturnStep"
              },
              {
                "$ref": "#/$defs/SleepStep"
              },
              {
                "$ref": "#/$defs/ErrorWorkflowStep"
              },
              {
                "$ref": "#/$defs/WaitForInputStep"
              },
              {
                "$ref": "#/$defs/IfElseWorkflowStep-Input"
              },
              {
                "$ref": "#/$defs/SwitchStep-Input"
              },
              {
                "$ref": "#/$defs/ForeachStep-Input"
              },
              {
                "$ref": "#/$defs/ParallelStep-Input"
              },
              {
                "$ref": "#/$defs/Main-Input"
              }
            ]
          },
          "minItems": 1,
          "title": "Main",
          "type": "array"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "name": {
          "maxLength": 255,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "tools": {
          "default": [],
          "items": {
            "$ref": "#/$defs/TaskTool-Input"
          },
          "title": "Tools",
          "type": "array"
        }
      },
      "required": [
        "name",
        "main"
      ],
      "title": "CreateTaskRequest",
      "type": "object"
    },
    "CreateToolRequest-Output": {
      "description": "Payload for creating a tool",
      "properties": {
        "api_call": {
          "anyOf": [
            {
              "$ref": "#/$defs/ApiCallDef-Output"
            },
            {
              "type": "null"
            }
          ]
        },
        "bash_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/Bash20241022Def"
            },
            {
              "type": "null"
            }
          ]
        },
        "computer_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/Computer20241022Def"
            },
            {
              "type": "null"
            }
          ]
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Description"
        },
        "function": {
          "anyOf": [
            {
              "$ref": "#/$defs/FunctionDef"
            },
            {
              "type": "null"
            }
          ]
        },
        "integration": {
          "anyOf": [
            {
              "$ref": "#/$defs/DummyIntegrationDef"
            },
            {
              "$ref": "#/$defs/BraveIntegrationDef"
            },
            {
              "$ref": "#/$defs/EmailIntegrationDef"
            },
            {
              "$ref": "#/$defs/SpiderIntegrationDef-Output"
            },
            {
              "$ref": "#/$defs/WikipediaIntegrationDef"
            },
            {
              "$ref": "#/$defs/WeatherIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseContextIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseExtensionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseListSessionsIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseCreateSessionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseGetSessionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseCompleteSessionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseGetSessionLiveUrlsIntegrationDef"
            },
            {
              "$ref": "#/$defs/RemoteBrowserIntegrationDef"
            },
            {
              "$ref": "#/$defs/LlamaParseIntegrationDef"
            },
            {
              "$ref": "#/$defs/FfmpegIntegrationDef"
            },
            {
              "$ref": "#/$defs/CloudinaryUploadIntegrationDef"
            },
            {
              "$ref": "#/$defs/CloudinaryEditIntegrationDef"
            },
            {
              "$ref": "#/$defs/ArxivIntegrationDef"
            },
            {
              "type": "null"
            }
          ],
          "title": "Integration"
        },
        "name": {
          "maxLength": 40,
          "pattern": "^[^\\W0-9]\\w*$",
          "title": "Name",
          "type": "string"
        },
        "system": {
          "anyOf": [
            {
              "$ref": "#/$defs/SystemDef"
            },
            {
              "type": "null"
            }
          ]
        },
        "text_editor_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/TextEditor20241022Def"
            },
            {
              "type": "null"
            }
          ]
        },
        "type": {
          "enum": [
            "function",
            "integration",
            "system",
            "api_call",
            "computer_20241022",
            "text_editor_20241022",
            "bash_20241022"
          ],
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "name",
        "type"
      ],
      "title": "CreateToolRequest",
      "type": "object"
    },
    "CreateUserRequest": {
      "description": "Payload for creating a user (and associated documents)",
      "properties": {
        "about": {
          "default": "",
          "title": "About",
          "type": "string"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "name": {
          "default": "",
          "maxLength": 120,
          "pattern": "^[\\p{L}\\p{Nl}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]+[\\p{ID_Start}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]*$",
          "title": "Name",
          "type": "string"
        }
      },
      "title": "CreateUserRequest",
      "type": "object"
    },
    "DefaultChatSettings": {
      "description": "Default settings for the chat session (also used by the agent)",
      "properties": {
        "frequency_penalty": {
          "anyOf": [
            {
              "maximum": 2.0,
              "minimum": -2.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Frequency Penalty"
        },
        "length_penalty": {
          "anyOf": [
            {
              "maximum": 2.0,
              "minimum": 0.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Length Penalty"
        },
        "min_p": {
          "anyOf": [
            {
              "maximum": 1.0,
              "minimum": 0.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Min P"
        },
        "presence_penalty": {
          "anyOf": [
            {
              "maximum": 2.0,
              "minimum": -2.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Presence Penalty"
        },
        "repetition_penalty": {
          "anyOf": [
            {
              "maximum": 2.0,
              "minimum": 0.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Repetition Penalty"
        },
        "temperature": {
          "anyOf": [
            {
              "maximum": 5.0,
              "minimum": 0.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Temperature"
        },
        "top_p": {
          "anyOf": [
            {
              "maximum": 1.0,
              "minimum": 0.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Top P"
        }
      },
      "title": "DefaultChatSettings",
      "type": "object"
    },
    "Delta": {
      "description": "The message generated by the model",
      "properties": {
        "content": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/agents_api__autogen__Chat__ContentModel1"
                  },
                  {
                    "$ref": "#/$defs/ContentModel7"
                  },
                  {
                    "$ref": "#/$defs/agents_api__autogen__Chat__ContentModel2"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Content"
        },
        "continue": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "title": "Continue"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Name"
        },
        "role": {
          "enum": [
            "user",
            "assistant",
            "system",
            "tool"
          ],
          "title": "Role",
          "type": "string"
        },
        "tool_call_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Tool Call Id"
        },
        "tool_calls": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ChosenFunctionCall"
                  },
                  {
                    "$ref": "#/$defs/ChosenComputer20241022"
                  },
                  {
                    "$ref": "#/$defs/ChosenTextEditor20241022"
                  },
                  {
                    "$ref": "#/$defs/ChosenBash20241022"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "title": "Tool Calls"
        }
      },
      "required": [
        "role"
      ],
      "title": "Delta",
      "type": "object"
    },
    "Doc": {
      "properties": {
        "content": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "title": "Content"
        },
        "created_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created At",
          "type": "string"
        },
        "embedding_dimensions": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "readOnly": true,
          "title": "Embedding Dimensions"
        },
        "embedding_model": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "readOnly": true,
          "title": "Embedding Model"
        },
        "embeddings": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "readOnly": true,
          "title": "Embeddings"
        },
        "id": {
          "format": "uuid",
          "readOnly": true,
          "title": "Id",
          "type": "string"
        },
        "language": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "readOnly": true,
          "title": "Language"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "modality": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "readOnly": true,
          "title": "Modality"
        },
        "title": {
          "maxLength": 800,
          "title": "Title",
          "type": "string"
        }
      },
      "required": [
        "id",
        "created_at",
        "title",
        "content"
      ],
      "title": "Doc",
      "type": "object"
    },
    "DocOwner": {
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Id",
          "type": "string"
        },
        "role": {
          "enum": [
            "user",
            "agent"
          ],
          "title": "Role",
          "type": "string"
        }
      },
      "required": [
        "id",
        "role"
      ],
      "title": "DocOwner",
      "type": "object"
    },
    "DocReference": {
      "properties": {
        "distance": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Distance"
        },
        "id": {
          "format": "uuid",
          "readOnly": true,
          "title": "Id",
          "type": "string"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "owner": {
          "$ref": "#/$defs/DocOwner"
        },
        "snippet": {
          "$ref": "#/$defs/Snippet"
        },
        "title": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Title"
        }
      },
      "required": [
        "owner",
        "id",
        "snippet"
      ],
      "title": "DocReference",
      "type": "object"
    },
    "DocSearchResponse": {
      "properties": {
        "docs": {
          "items": {
            "$ref": "#/$defs/DocReference"
          },
          "title": "Docs",
          "type": "array"
        },
        "time": {
          "exclusiveMinimum": 0.0,
          "title": "Time",
          "type": "number"
        }
      },
      "required": [
        "docs",
        "time"
      ],
      "title": "DocSearchResponse",
      "type": "object"
    },
    "DummyIntegrationDef": {
      "properties": {
        "arguments": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "title": "Arguments"
        },
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "provider": {
          "const": "dummy",
          "default": "dummy",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "title": "Setup"
        }
      },
      "title": "DummyIntegrationDef",
      "type": "object"
    },
    "DummyIntegrationDefUpdate": {
      "properties": {
        "arguments": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "title": "Arguments"
        },
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "provider": {
          "const": "dummy",
          "default": "dummy",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "title": "Setup"
        }
      },
      "title": "DummyIntegrationDefUpdate",
      "type": "object"
    },
    "EmailArguments": {
      "description": "Arguments for Email sending",
      "properties": {
        "body": {
          "title": "Body",
          "type": "string"
        },
        "from": {
          "title": "From",
          "type": "string"
        },
        "subject": {
          "title": "Subject",
          "type": "string"
        },
        "to": {
          "title": "To",
          "type": "string"
        }
      },
      "required": [
        "to",
        "from",
        "subject",
        "body"
      ],
      "title": "EmailArguments",
      "type": "object"
    },
    "EmailArgumentsUpdate": {
      "description": "Arguments for Email sending",
      "properties": {
        "body": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Body"
        },
        "from": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "From"
        },
        "subject": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Subject"
        },
        "to": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "To"
        }
      },
      "title": "EmailArgumentsUpdate",
      "type": "object"
    },
    "EmailIntegrationDef": {
      "description": "Email integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/EmailArguments"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "provider": {
          "const": "email",
          "default": "email",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/EmailSetup"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "EmailIntegrationDef",
      "type": "object"
    },
    "EmailIntegrationDefUpdate": {
      "description": "Email integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/EmailArgumentsUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "provider": {
          "const": "email",
          "default": "email",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/EmailSetupUpdate"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "EmailIntegrationDefUpdate",
      "type": "object"
    },
    "EmailSetup": {
      "description": "Setup parameters for Email integration",
      "properties": {
        "host": {
          "title": "Host",
          "type": "string"
        },
        "password": {
          "title": "Password",
          "type": "string"
        },
        "port": {
          "title": "Port",
          "type": "integer"
        },
        "user": {
          "title": "User",
          "type": "string"
        }
      },
      "required": [
        "host",
        "port",
        "user",
        "password"
      ],
      "title": "EmailSetup",
      "type": "object"
    },
    "EmailSetupUpdate": {
      "description": "Setup parameters for Email integration",
      "properties": {
        "host": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Host"
        },
        "password": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Password"
        },
        "port": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "title": "Port"
        },
        "user": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "User"
        }
      },
      "title": "EmailSetupUpdate",
      "type": "object"
    },
    "EmbedQueryResponse": {
      "properties": {
        "vectors": {
          "items": {
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "title": "Vectors",
          "type": "array"
        }
      },
      "required": [
        "vectors"
      ],
      "title": "EmbedQueryResponse",
      "type": "object"
    },
    "Entry": {
      "properties": {
        "content": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Content"
                  },
                  {
                    "$ref": "#/$defs/agents_api__autogen__Entries__ContentModel3"
                  },
                  {
                    "$ref": "#/$defs/agents_api__autogen__Entries__ContentModel"
                  }
                ]
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/Tool"
            },
            {
              "$ref": "#/$defs/ChosenFunctionCall"
            },
            {
              "$ref": "#/$defs/ChosenComputer20241022"
            },
            {
              "$ref": "#/$defs/ChosenTextEditor20241022"
            },
            {
              "$ref": "#/$defs/ChosenBash20241022"
            },
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/ToolResponse"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/$defs/agents_api__autogen__Entries__ContentModel1"
                        },
                        {
                          "$ref": "#/$defs/agents_api__autogen__Entries__ContentModel3"
                        },
                        {
                          "$ref": "#/$defs/agents_api__autogen__Entries__ContentModel2"
                        }
                      ]
                    },
                    "type": "array"
                  },
                  {
                    "$ref": "#/$defs/Tool"
                  },
                  {
                    "$ref": "#/$defs/ChosenFunctionCall"
                  },
                  {
                    "$ref": "#/$defs/ChosenComputer20241022"
                  },
                  {
                    "$ref": "#/$defs/ChosenTextEditor20241022"
                  },
                  {
                    "$ref": "#/$defs/ChosenBash20241022"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/ToolResponse"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "title": "Content"
        },
        "created_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created At",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "readOnly": true,
          "title": "Id",
          "type": "string"
        },
        "model": {
          "default": "gpt-4o-mini",
          "title": "Model",
          "type": "string"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Name"
        },
        "role": {
          "enum": [
            "user",
            "assistant",
            "system",
            "tool"
          ],
          "title": "Role",
          "type": "string"
        },
        "source": {
          "enum": [
            "api_request",
            "api_response",
            "tool_response",
            "internal",
            "summarizer",
            "meta"
          ],
          "title": "Source",
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "title": "Timestamp",
          "type": "string"
        },
        "token_count": {
          "title": "Token Count",
          "type": "integer"
        },
        "tokenizer": {
          "title": "Tokenizer",
          "type": "string"
        },
        "tool_call_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Tool Call Id"
        },
        "tool_calls": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ChosenFunctionCall"
                  },
                  {
                    "$ref": "#/$defs/ChosenComputer20241022"
                  },
                  {
                    "$ref": "#/$defs/ChosenTextEditor20241022"
                  },
                  {
                    "$ref": "#/$defs/ChosenBash20241022"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Tool Calls"
        }
      },
      "required": [
        "role",
        "content",
        "source",
        "tokenizer",
        "token_count",
        "timestamp",
        "created_at",
        "id"
      ],
      "title": "Entry",
      "type": "object"
    },
    "ErrorWorkflowStep": {
      "properties": {
        "error": {
          "title": "Error",
          "type": "string"
        },
        "kind_": {
          "const": "error",
          "default": "error",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        }
      },
      "required": [
        "error"
      ],
      "title": "ErrorWorkflowStep",
      "type": "object"
    },
    "EvaluateStep": {
      "properties": {
        "evaluate": {
          "additionalProperties": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": "Evaluate",
          "type": "object"
        },
        "kind_": {
          "const": "evaluate",
          "default": "evaluate",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        }
      },
      "required": [
        "evaluate"
      ],
      "title": "EvaluateStep",
      "type": "object"
    },
    "Execution": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created At",
          "type": "string"
        },
        "error": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Error"
        },
        "id": {
          "format": "uuid",
          "readOnly": true,
          "title": "Id",
          "type": "string"
        },
        "input": {
          "title": "Input",
          "type": "object"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "output": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "title": "Output"
        },
        "status": {
          "enum": [
            "queued",
            "starting",
            "running",
            "awaiting_input",
            "succeeded",
            "failed",
            "cancelled"
          ],
          "readOnly": true,
          "title": "Status",
          "type": "string"
        },
        "task_id": {
          "format": "uuid",
          "readOnly": true,
          "title": "Task Id",
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated At",
          "type": "string"
        }
      },
      "required": [
        "task_id",
        "status",
        "input",
        "created_at",
        "updated_at",
        "id"
      ],
      "title": "Execution",
      "type": "object"
    },
    "FfmpegIntegrationDef": {
      "description": "Ffmpeg integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/FfmpegSearchArguments"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "provider": {
          "const": "ffmpeg",
          "default": "ffmpeg",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "title": "Setup"
        }
      },
      "title": "FfmpegIntegrationDef",
      "type": "object"
    },
    "FfmpegIntegrationDefUpdate": {
      "description": "Ffmpeg integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/FfmpegSearchArgumentsUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "provider": {
          "const": "ffmpeg",
          "default": "ffmpeg",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "title": "Setup"
        }
      },
      "title": "FfmpegIntegrationDefUpdate",
      "type": "object"
    },
    "FfmpegSearchArguments": {
      "description": "Arguments for Ffmpeg CMD",
      "properties": {
        "cmd": {
          "title": "Cmd",
          "type": "string"
        },
        "file": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "File"
        }
      },
      "required": [
        "cmd"
      ],
      "title": "FfmpegSearchArguments",
      "type": "object"
    },
    "FfmpegSearchArgumentsUpdate": {
      "description": "Arguments for Ffmpeg CMD",
      "properties": {
        "cmd": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Cmd"
        },
        "file": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "File"
        }
      },
      "title": "FfmpegSearchArgumentsUpdate",
      "type": "object"
    },
    "File": {
      "properties": {
        "content": {
          "title": "Content",
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created At",
          "type": "string"
        },
        "description": {
          "default": "",
          "title": "Description",
          "type": "string"
        },
        "hash": {
          "readOnly": true,
          "title": "Hash",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "readOnly": true,
          "title": "Id",
          "type": "string"
        },
        "mime_type": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Mime Type"
        },
        "name": {
          "maxLength": 120,
          "pattern": "^[\\p{L}\\p{Nl}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]+[\\p{ID_Start}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]*$",
          "title": "Name",
          "type": "string"
        },
        "size": {
          "minimum": 1.0,
          "readOnly": true,
          "title": "Size",
          "type": "integer"
        }
      },
      "required": [
        "id",
        "created_at",
        "name",
        "content",
        "size",
        "hash"
      ],
      "title": "File",
      "type": "object"
    },
    "ForeachDo-Input": {
      "properties": {
        "do": {
          "anyOf": [
            {
              "$ref": "#/$defs/WaitForInputStep"
            },
            {
              "$ref": "#/$defs/EvaluateStep"
            },
            {
              "$ref": "#/$defs/ToolCallStep"
            },
            {
              "$ref": "#/$defs/PromptStep-Input"
            },
            {
              "$ref": "#/$defs/GetStep"
            },
            {
              "$ref": "#/$defs/SetStep"
            },
            {
              "$ref": "#/$defs/LogStep"
            },
            {
              "$ref": "#/$defs/YieldStep"
            }
          ],
          "title": "Do"
        },
        "in": {
          "title": "In",
          "type": "string"
        }
      },
      "required": [
        "in",
        "do"
      ],
      "title": "ForeachDo",
      "type": "object"
    },
    "ForeachDo-Output": {
      "properties": {
        "do": {
          "anyOf": [
            {
              "$ref": "#/$defs/WaitForInputStep"
            },
            {
              "$ref": "#/$defs/EvaluateStep"
            },
            {
              "$ref": "#/$defs/ToolCallStep"
            },
            {
              "$ref": "#/$defs/PromptStep-Output"
            },
            {
              "$ref": "#/$defs/GetStep"
            },
            {
              "$ref": "#/$defs/SetStep"
            },
            {
              "$ref": "#/$defs/LogStep"
            },
            {
              "$ref": "#/$defs/YieldStep"
            }
          ],
          "title": "Do"
        },
        "in": {
          "title": "In",
          "type": "string"
        }
      },
      "required": [
        "in",
        "do"
      ],
      "title": "ForeachDo",
      "type": "object"
    },
    "ForeachStep-Input": {
      "properties": {
        "foreach": {
          "$ref": "#/$defs/ForeachDo-Input"
        },
        "kind_": {
          "const": "foreach",
          "default": "foreach",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        }
      },
      "required": [
        "foreach"
      ],
      "title": "ForeachStep",
      "type": "object"
    },
    "ForeachStep-Output": {
      "properties": {
        "foreach": {
          "$ref": "#/$defs/ForeachDo-Output"
        },
        "kind_": {
          "const": "foreach",
          "default": "foreach",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        }
      },
      "required": [
        "foreach"
      ],
      "title": "ForeachStep",
      "type": "object"
    },
    "FunctionCallOption": {
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Arguments"
        },
        "name": {
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "title": "FunctionCallOption",
      "type": "object"
    },
    "FunctionDef": {
      "description": "Function definition",
      "properties": {
        "description": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "title": "Description"
        },
        "name": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "title": "Name"
        },
        "parameters": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Parameters"
        }
      },
      "title": "FunctionDef",
      "type": "object"
    },
    "GetStep": {
      "properties": {
        "get": {
          "title": "Get",
          "type": "string"
        },
        "kind_": {
          "const": "get",
          "default": "get",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        }
      },
      "required": [
        "get"
      ],
      "title": "GetStep",
      "type": "object"
    },
    "HTTPValidationError": {
      "properties": {
        "detail": {
          "items": {
            "$ref": "#/$defs/ValidationError"
          },
          "title": "Detail",
          "type": "array"
        }
      },
      "title": "HTTPValidationError",
      "type": "object"
    },
    "History": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created At",
          "type": "string"
        },
        "entries": {
          "items": {
            "$ref": "#/$defs/Entry"
          },
          "title": "Entries",
          "type": "array"
        },
        "relations": {
          "items": {
            "$ref": "#/$defs/Relation"
          },
          "title": "Relations",
          "type": "array"
        },
        "session_id": {
          "format": "uuid",
          "readOnly": true,
          "title": "Session Id",
          "type": "string"
        }
      },
      "required": [
        "entries",
        "relations",
        "session_id",
        "created_at"
      ],
      "title": "History",
      "type": "object"
    },
    "HybridDocSearchRequest": {
      "properties": {
        "alpha": {
          "default": 0.75,
          "maximum": 1.0,
          "minimum": 0.0,
          "title": "Alpha",
          "type": "number"
        },
        "confidence": {
          "default": 0,
          "maximum": 1.0,
          "minimum": -1.0,
          "title": "Confidence",
          "type": "number"
        },
        "lang": {
          "const": "en-US",
          "default": "en-US",
          "title": "Lang",
          "type": "string"
        },
        "limit": {
          "default": 10,
          "maximum": 50.0,
          "minimum": 1.0,
          "title": "Limit",
          "type": "integer"
        },
        "metadata_filter": {
          "default": {},
          "title": "Metadata Filter",
          "type": "object"
        },
        "mmr_strength": {
          "default": 0,
          "exclusiveMaximum": 1.0,
          "minimum": 0.0,
          "title": "Mmr Strength",
          "type": "number"
        },
        "text": {
          "title": "Text",
          "type": "string"
        },
        "vector": {
          "items": {
            "type": "number"
          },
          "title": "Vector",
          "type": "array"
        }
      },
      "required": [
        "text",
        "vector"
      ],
      "title": "HybridDocSearchRequest",
      "type": "object"
    },
    "IfElseWorkflowStep-Input": {
      "properties": {
        "else": {
          "anyOf": [
            {
              "$ref": "#/$defs/EvaluateStep"
            },
            {
              "$ref": "#/$defs/ToolCallStep"
            },
            {
              "$ref": "#/$defs/PromptStep-Input"
            },
            {
              "$ref": "#/$defs/GetStep"
            },
            {
              "$ref": "#/$defs/SetStep"
            },
            {
              "$ref": "#/$defs/LogStep"
            },
            {
              "$ref": "#/$defs/YieldStep"
            },
            {
              "$ref": "#/$defs/ReturnStep"
            },
            {
              "$ref": "#/$defs/SleepStep"
            },
            {
              "$ref": "#/$defs/ErrorWorkflowStep"
            },
            {
              "$ref": "#/$defs/WaitForInputStep"
            },
            {
              "type": "null"
            }
          ],
          "title": "Else"
        },
        "if": {
          "title": "If",
          "type": "string"
        },
        "kind_": {
          "const": "if_else",
          "default": "if_else",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        },
        "then": {
          "anyOf": [
            {
              "$ref": "#/$defs/EvaluateStep"
            },
            {
              "$ref": "#/$defs/ToolCallStep"
            },
            {
              "$ref": "#/$defs/PromptStep-Input"
            },
            {
              "$ref": "#/$defs/GetStep"
            },
            {
              "$ref": "#/$defs/SetStep"
            },
            {
              "$ref": "#/$defs/LogStep"
            },
            {
              "$ref": "#/$defs/YieldStep"
            },
            {
              "$ref": "#/$defs/ReturnStep"
            },
            {
              "$ref": "#/$defs/SleepStep"
            },
            {
              "$ref": "#/$defs/ErrorWorkflowStep"
            },
            {
              "$ref": "#/$defs/WaitForInputStep"
            }
          ],
          "title": "Then"
        }
      },
      "required": [
        "if",
        "then"
      ],
      "title": "IfElseWorkflowStep",
      "type": "object"
    },
    "IfElseWorkflowStep-Output": {
      "properties": {
        "else": {
          "anyOf": [
            {
              "$ref": "#/$defs/EvaluateStep"
            },
            {
              "$ref": "#/$defs/ToolCallStep"
            },
            {
              "$ref": "#/$defs/PromptStep-Output"
            },
            {
              "$ref": "#/$defs/GetStep"
            },
            {
              "$ref": "#/$defs/SetStep"
            },
            {
              "$ref": "#/$defs/LogStep"
            },
            {
              "$ref": "#/$defs/YieldStep"
            },
            {
              "$ref": "#/$defs/ReturnStep"
            },
            {
              "$ref": "#/$defs/SleepStep"
            },
            {
              "$ref": "#/$defs/ErrorWorkflowStep"
            },
            {
              "$ref": "#/$defs/WaitForInputStep"
            },
            {
              "type": "null"
            }
          ],
          "title": "Else"
        },
        "if": {
          "title": "If",
          "type": "string"
        },
        "kind_": {
          "const": "if_else",
          "default": "if_else",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        },
        "then": {
          "anyOf": [
            {
              "$ref": "#/$defs/EvaluateStep"
            },
            {
              "$ref": "#/$defs/ToolCallStep"
            },
            {
              "$ref": "#/$defs/PromptStep-Output"
            },
            {
              "$ref": "#/$defs/GetStep"
            },
            {
              "$ref": "#/$defs/SetStep"
            },
            {
              "$ref": "#/$defs/LogStep"
            },
            {
              "$ref": "#/$defs/YieldStep"
            },
            {
              "$ref": "#/$defs/ReturnStep"
            },
            {
              "$ref": "#/$defs/SleepStep"
            },
            {
              "$ref": "#/$defs/ErrorWorkflowStep"
            },
            {
              "$ref": "#/$defs/WaitForInputStep"
            }
          ],
          "title": "Then"
        }
      },
      "required": [
        "if",
        "then"
      ],
      "title": "IfElseWorkflowStep",
      "type": "object"
    },
    "ImageUrl": {
      "description": "The image URL",
      "properties": {
        "detail": {
          "default": "auto",
          "enum": [
            "low",
            "high",
            "auto"
          ],
          "title": "Detail",
          "type": "string"
        },
        "url": {
          "title": "Url",
          "type": "string"
        }
      },
      "required": [
        "url"
      ],
      "title": "ImageUrl",
      "type": "object"
    },
    "JobStatus": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created At",
          "type": "string"
        },
        "has_progress": {
          "default": false,
          "title": "Has Progress",
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "readOnly": true,
          "title": "Id",
          "type": "string"
        },
        "name": {
          "default": "",
          "maxLength": 120,
          "pattern": "^[\\p{L}\\p{Nl}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]+[\\p{ID_Start}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]*$",
          "title": "Name",
          "type": "string"
        },
        "progress": {
          "default": 0,
          "maximum": 100.0,
          "minimum": 0.0,
          "title": "Progress",
          "type": "number"
        },
        "reason": {
          "default": "",
          "title": "Reason",
          "type": "string"
        },
        "state": {
          "default": "pending",
          "enum": [
            "pending",
            "in_progress",
            "retrying",
            "succeeded",
            "aborted",
            "failed",
            "unknown"
          ],
          "title": "State",
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated At",
          "type": "string"
        }
      },
      "required": [
        "id",
        "created_at",
        "updated_at"
      ],
      "title": "JobStatus",
      "type": "object"
    },
    "ListResponse_Agent_": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/$defs/Agent"
          },
          "title": "Items",
          "type": "array"
        }
      },
      "required": [
        "items"
      ],
      "title": "ListResponse[Agent]",
      "type": "object"
    },
    "ListResponse_Doc_": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/$defs/Doc"
          },
          "title": "Items",
          "type": "array"
        }
      },
      "required": [
        "items"
      ],
      "title": "ListResponse[Doc]",
      "type": "object"
    },
    "ListResponse_Execution_": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/$defs/Execution"
          },
          "title": "Items",
          "type": "array"
        }
      },
      "required": [
        "items"
      ],
      "title": "ListResponse[Execution]",
      "type": "object"
    },
    "ListResponse_Session_": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/$defs/Session"
          },
          "title": "Items",
          "type": "array"
        }
      },
      "required": [
        "items"
      ],
      "title": "ListResponse[Session]",
      "type": "object"
    },
    "ListResponse_Task_": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/$defs/Task"
          },
          "title": "Items",
          "type": "array"
        }
      },
      "required": [
        "items"
      ],
      "title": "ListResponse[Task]",
      "type": "object"
    },
    "ListResponse_Tool_": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/$defs/Tool"
          },
          "title": "Items",
          "type": "array"
        }
      },
      "required": [
        "items"
      ],
      "title": "ListResponse[Tool]",
      "type": "object"
    },
    "ListResponse_Transition_": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/$defs/Transition"
          },
          "title": "Items",
          "type": "array"
        }
      },
      "required": [
        "items"
      ],
      "title": "ListResponse[Transition]",
      "type": "object"
    },
    "ListResponse_User_": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/$defs/User"
          },
          "title": "Items",
          "type": "array"
        }
      },
      "required": [
        "items"
      ],
      "title": "ListResponse[User]",
      "type": "object"
    },
    "LlamaParseFetchArguments": {
      "description": "Arguments for LlamaParse integration",
      "properties": {
        "base64": {
          "default": false,
          "title": "Base64",
          "type": "boolean"
        },
        "file": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "title": "File"
        },
        "filename": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Filename"
        },
        "params": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Params"
        }
      },
      "required": [
        "file"
      ],
      "title": "LlamaParseFetchArguments",
      "type": "object"
    },
    "LlamaParseFetchArgumentsUpdate": {
      "description": "Arguments for LlamaParse integration",
      "properties": {
        "base64": {
          "default": false,
          "title": "Base64",
          "type": "boolean"
        },
        "file": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "File"
        },
        "filename": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Filename"
        },
        "params": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Params"
        }
      },
      "title": "LlamaParseFetchArgumentsUpdate",
      "type": "object"
    },
    "LlamaParseIntegrationDef": {
      "description": "LlamaParse integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/LlamaParseFetchArguments"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "provider": {
          "const": "llama_parse",
          "default": "llama_parse",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/LlamaParseSetup"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "LlamaParseIntegrationDef",
      "type": "object"
    },
    "LlamaParseIntegrationDefUpdate": {
      "description": "LlamaParse integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/LlamaParseFetchArgumentsUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "provider": {
          "const": "llama_parse",
          "default": "llama_parse",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/LlamaParseSetupUpdate"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "LlamaParseIntegrationDefUpdate",
      "type": "object"
    },
    "LlamaParseSetup": {
      "description": "Setup parameters for LlamaParse integration",
      "properties": {
        "llamaparse_api_key": {
          "title": "Llamaparse Api Key",
          "type": "string"
        },
        "params": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Params"
        }
      },
      "required": [
        "llamaparse_api_key"
      ],
      "title": "LlamaParseSetup",
      "type": "object"
    },
    "LlamaParseSetupUpdate": {
      "description": "Setup parameters for LlamaParse integration",
      "properties": {
        "llamaparse_api_key": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Llamaparse Api Key"
        },
        "params": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Params"
        }
      },
      "title": "LlamaParseSetupUpdate",
      "type": "object"
    },
    "LogProbResponse": {
      "properties": {
        "content": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/TokenLogProb"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Content"
        }
      },
      "required": [
        "content"
      ],
      "title": "LogProbResponse",
      "type": "object"
    },
    "LogStep": {
      "properties": {
        "kind_": {
          "const": "log",
          "default": "log",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        },
        "log": {
          "title": "Log",
          "type": "string"
        }
      },
      "required": [
        "log"
      ],
      "title": "LogStep",
      "type": "object"
    },
    "LogitBias": {
      "maximum": 100.0,
      "minimum": -100.0,
      "title": "LogitBias",
      "type": "number"
    },
    "Main-Input": {
      "properties": {
        "initial": {
          "default": [],
          "title": "Initial"
        },
        "kind_": {
          "const": "map_reduce",
          "default": "map_reduce",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        },
        "map": {
          "anyOf": [
            {
              "$ref": "#/$defs/EvaluateStep"
            },
            {
              "$ref": "#/$defs/ToolCallStep"
            },
            {
              "$ref": "#/$defs/PromptStep-Input"
            },
            {
              "$ref": "#/$defs/GetStep"
            },
            {
              "$ref": "#/$defs/SetStep"
            },
            {
              "$ref": "#/$defs/LogStep"
            },
            {
              "$ref": "#/$defs/YieldStep"
            }
          ],
          "title": "Map"
        },
        "over": {
          "title": "Over",
          "type": "string"
        },
        "parallelism": {
          "anyOf": [
            {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "title": "Parallelism"
        },
        "reduce": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Reduce"
        }
      },
      "required": [
        "over",
        "map"
      ],
      "title": "Main",
      "type": "object"
    },
    "Main-Output": {
      "properties": {
        "initial": {
          "default": [],
          "title": "Initial"
        },
        "kind_": {
          "const": "map_reduce",
          "default": "map_reduce",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        },
        "map": {
          "anyOf": [
            {
              "$ref": "#/$defs/EvaluateStep"
            },
            {
              "$ref": "#/$defs/ToolCallStep"
            },
            {
              "$ref": "#/$defs/PromptStep-Output"
            },
            {
              "$ref": "#/$defs/GetStep"
            },
            {
              "$ref": "#/$defs/SetStep"
            },
            {
              "$ref": "#/$defs/LogStep"
            },
            {
              "$ref": "#/$defs/YieldStep"
            }
          ],
          "title": "Map"
        },
        "over": {
          "title": "Over",
          "type": "string"
        },
        "parallelism": {
          "anyOf": [
            {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "title": "Parallelism"
        },
        "reduce": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Reduce"
        }
      },
      "required": [
        "over",
        "map"
      ],
      "title": "Main",
      "type": "object"
    },
    "Message": {
      "properties": {
        "content": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Content"
                  },
                  {
                    "$ref": "#/$defs/ContentModel7"
                  },
                  {
                    "$ref": "#/$defs/agents_api__autogen__Chat__ContentModel"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Content"
        },
        "continue": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "title": "Continue"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Name"
        },
        "role": {
          "enum": [
            "user",
            "assistant",
            "system",
            "tool"
          ],
          "title": "Role",
          "type": "string"
        },
        "tool_call_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Tool Call Id"
        },
        "tool_calls": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ChosenFunctionCall"
                  },
                  {
                    "$ref": "#/$defs/ChosenComputer20241022"
                  },
                  {
                    "$ref": "#/$defs/ChosenTextEditor20241022"
                  },
                  {
                    "$ref": "#/$defs/ChosenBash20241022"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "title": "Tool Calls"
        }
      },
      "required": [
        "role"
      ],
      "title": "Message",
      "type": "object"
    },
    "MessageChatResponse": {
      "properties": {
        "choices": {
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/SingleChatOutput"
              },
              {
                "$ref": "#/$defs/MultipleChatOutput"
              }
            ]
          },
          "title": "Choices",
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created At",
          "type": "string"
        },
        "docs": {
          "default": [],
          "items": {
            "$ref": "#/$defs/DocReference"
          },
          "readOnly": true,
          "title": "Docs",
          "type": "array"
        },
        "id": {
          "format": "uuid",
          "readOnly": true,
          "title": "Id",
          "type": "string"
        },
        "jobs": {
          "default": [],
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "readOnly": true,
          "title": "Jobs",
          "type": "array"
        },
        "usage": {
          "anyOf": [
            {
              "$ref": "#/$defs/CompetionUsage"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "created_at",
        "id",
        "choices"
      ],
      "title": "MessageChatResponse",
      "type": "object"
    },
    "MessageModel": {
      "properties": {
        "content": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/agents_api__autogen__Chat__ContentModel3"
                  },
                  {
                    "$ref": "#/$defs/ContentModel7"
                  },
                  {
                    "$ref": "#/$defs/ContentModel4"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Content"
        },
        "created_at": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "readOnly": true,
          "title": "Created At"
        },
        "id": {
          "anyOf": [
            {
              "format": "uuid",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "readOnly": true,
          "title": "Id"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Name"
        },
        "role": {
          "enum": [
            "user",
            "assistant",
            "system",
            "tool"
          ],
          "title": "Role",
          "type": "string"
        },
        "tool_call_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Tool Call Id"
        },
        "tool_calls": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ChosenFunctionCall"
                  },
                  {
                    "$ref": "#/$defs/ChosenComputer20241022"
                  },
                  {
                    "$ref": "#/$defs/ChosenTextEditor20241022"
                  },
                  {
                    "$ref": "#/$defs/ChosenBash20241022"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "title": "Tool Calls"
        }
      },
      "required": [
        "role"
      ],
      "title": "MessageModel",
      "type": "object"
    },
    "MetadataFilter": {
      "additionalProperties": true,
      "properties": {},
      "title": "MetadataFilter",
      "type": "object"
    },
    "MultipleChatOutput": {
      "description": "The output returned by the model. Note that, depending on the model provider, they might return more than one message.",
      "properties": {
        "finish_reason": {
          "default": "stop",
          "enum": [
            "stop",
            "length",
            "content_filter",
            "tool_calls"
          ],
          "title": "Finish Reason",
          "type": "string"
        },
        "index": {
          "title": "Index",
          "type": "integer"
        },
        "logprobs": {
          "anyOf": [
            {
              "$ref": "#/$defs/LogProbResponse"
            },
            {
              "type": "null"
            }
          ]
        },
        "messages": {
          "items": {
            "$ref": "#/$defs/MessageModel"
          },
          "minItems": 1,
          "readOnly": true,
          "title": "Messages",
          "type": "array"
        },
        "tool_calls": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ChosenFunctionCall"
                  },
                  {
                    "$ref": "#/$defs/ChosenComputer20241022"
                  },
                  {
                    "$ref": "#/$defs/ChosenTextEditor20241022"
                  },
                  {
                    "$ref": "#/$defs/ChosenBash20241022"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Tool Calls"
        }
      },
      "required": [
        "index",
        "messages"
      ],
      "title": "MultipleChatOutput",
      "type": "object"
    },
    "MultipleEmbedQueryRequest": {
      "properties": {
        "embed_instruction": {
          "default": "",
          "title": "Embed Instruction",
          "type": "string"
        },
        "text": {
          "items": {
            "type": "string"
          },
          "maxItems": 100,
          "minItems": 1,
          "title": "Text",
          "type": "array"
        }
      },
      "required": [
        "text"
      ],
      "title": "MultipleEmbedQueryRequest",
      "type": "object"
    },
    "NamedToolChoice": {
      "properties": {
        "function": {
          "anyOf": [
            {
              "$ref": "#/$defs/FunctionCallOption"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "NamedToolChoice",
      "type": "object"
    },
    "ParallelStep-Input": {
      "properties": {
        "kind_": {
          "const": "parallel",
          "default": "parallel",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        },
        "parallel": {
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/EvaluateStep"
              },
              {
                "$ref": "#/$defs/ToolCallStep"
              },
              {
                "$ref": "#/$defs/PromptStep-Input"
              },
              {
                "$ref": "#/$defs/GetStep"
              },
              {
                "$ref": "#/$defs/SetStep"
              },
              {
                "$ref": "#/$defs/LogStep"
              },
              {
                "$ref": "#/$defs/YieldStep"
              }
            ]
          },
          "maxItems": 100,
          "title": "Parallel",
          "type": "array"
        }
      },
      "required": [
        "parallel"
      ],
      "title": "ParallelStep",
      "type": "object"
    },
    "ParallelStep-Output": {
      "properties": {
        "kind_": {
          "const": "parallel",
          "default": "parallel",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        },
        "parallel": {
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/EvaluateStep"
              },
              {
                "$ref": "#/$defs/ToolCallStep"
              },
              {
                "$ref": "#/$defs/PromptStep-Output"
              },
              {
                "$ref": "#/$defs/GetStep"
              },
              {
                "$ref": "#/$defs/SetStep"
              },
              {
                "$ref": "#/$defs/LogStep"
              },
              {
                "$ref": "#/$defs/YieldStep"
              }
            ]
          },
          "maxItems": 100,
          "title": "Parallel",
          "type": "array"
        }
      },
      "required": [
        "parallel"
      ],
      "title": "ParallelStep",
      "type": "object"
    },
    "PatchAgentRequest": {
      "description": "Payload for patching a agent",
      "properties": {
        "about": {
          "default": "",
          "title": "About",
          "type": "string"
        },
        "canonical_name": {
          "anyOf": [
            {
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Canonical Name"
        },
        "default_settings": {
          "anyOf": [
            {
              "$ref": "#/$defs/DefaultChatSettings"
            },
            {
              "type": "null"
            }
          ]
        },
        "instructions": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "default": [],
          "title": "Instructions"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "model": {
          "default": "",
          "title": "Model",
          "type": "string"
        },
        "name": {
          "anyOf": [
            {
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Name"
        }
      },
      "title": "PatchAgentRequest",
      "type": "object"
    },
    "PatchSessionRequest": {
      "description": "Payload for patching a session",
      "properties": {
        "auto_run_tools": {
          "default": false,
          "title": "Auto Run Tools",
          "type": "boolean"
        },
        "context_overflow": {
          "anyOf": [
            {
              "enum": [
                "truncate",
                "adaptive"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Context Overflow"
        },
        "forward_tool_calls": {
          "default": false,
          "title": "Forward Tool Calls",
          "type": "boolean"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "recall_options": {
          "anyOf": [
            {
              "$ref": "#/$defs/RecallOptionsUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "render_templates": {
          "default": true,
          "title": "Render Templates",
          "type": "boolean"
        },
        "situation": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Situation"
        },
        "system_template": {
          "default": "{%- if agent.name -%}\nYou are {{agent.name}}.{{\" \"}}\n{%- endif -%}\n\n{%- if agent.about -%}\nAbout you: {{agent.about}}.{{\" \"}}\n{%- endif -%}\n\n{%- if user -%}\nYou are talking to a user\n  {%- if user.name -%}{{\" \"}} and their name is {{user.name}}\n    {%- if user.about -%}. About the user: {{user.about}}.{%- else -%}.{%- endif -%}\n  {%- endif -%}\n{%- endif -%}\n\n{{NEWLINE}}\n\n{%- if session.situation -%}\nSituation: {{session.situation}}\n{%- endif -%}\n\n{{NEWLINE+NEWLINE}}\n\n{%- if agent.instructions -%}\nInstructions:{{NEWLINE}}\n  {%- if agent.instructions is string -%}\n    {{agent.instructions}}{{NEWLINE}}\n  {%- else -%}\n    {%- for instruction in agent.instructions -%}\n      - {{instruction}}{{NEWLINE}}\n    {%- endfor -%}\n  {%- endif -%}\n  {{NEWLINE}}\n{%- endif -%}\n\n{%- if docs -%}\nRelevant documents:{{NEWLINE}}\n  {%- for doc in docs -%}\n    {{doc.title}}{{NEWLINE}}\n    {%- if doc.content is string -%}\n      {{doc.content}}{{NEWLINE}}\n    {%- else -%}\n      {%- for snippet in doc.content -%}\n        {{snippet}}{{NEWLINE}}\n      {%- endfor -%}\n    {%- endif -%}\n    {{\"---\"}}\n  {%- endfor -%}\n{%- endif -%}",
          "title": "System Template",
          "type": "string"
        },
        "token_budget": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "title": "Token Budget"
        }
      },
      "title": "PatchSessionRequest",
      "type": "object"
    },
    "PatchToolRequest": {
      "description": "Payload for patching a tool",
      "properties": {
        "api_call": {
          "anyOf": [
            {
              "$ref": "#/$defs/ApiCallDefUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "bash_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/Bash20241022DefUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "computer_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/Computer20241022DefUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Description"
        },
        "function": {
          "anyOf": [
            {
              "$ref": "#/$defs/FunctionDef"
            },
            {
              "type": "null"
            }
          ]
        },
        "integration": {
          "anyOf": [
            {
              "$ref": "#/$defs/DummyIntegrationDefUpdate"
            },
            {
              "$ref": "#/$defs/BraveIntegrationDefUpdate"
            },
            {
              "$ref": "#/$defs/EmailIntegrationDefUpdate"
            },
            {
              "$ref": "#/$defs/SpiderIntegrationDefUpdate"
            },
            {
              "$ref": "#/$defs/WikipediaIntegrationDefUpdate"
            },
            {
              "$ref": "#/$defs/WeatherIntegrationDefUpdate"
            },
            {
              "$ref": "#/$defs/BrowserbaseContextIntegrationDefUpdate"
            },
            {
              "$ref": "#/$defs/BrowserbaseExtensionIntegrationDefUpdate"
            },
            {
              "$ref": "#/$defs/BrowserbaseListSessionsIntegrationDefUpdate"
            },
            {
              "$ref": "#/$defs/BrowserbaseCreateSessionIntegrationDefUpdate"
            },
            {
              "$ref": "#/$defs/BrowserbaseGetSessionIntegrationDefUpdate"
            },
            {
              "$ref": "#/$defs/BrowserbaseCompleteSessionIntegrationDefUpdate"
            },
            {
              "$ref": "#/$defs/BrowserbaseGetSessionLiveUrlsIntegrationDefUpdate"
            },
            {
              "$ref": "#/$defs/RemoteBrowserIntegrationDefUpdate"
            },
            {
              "$ref": "#/$defs/LlamaParseIntegrationDefUpdate"
            },
            {
              "$ref": "#/$defs/FfmpegIntegrationDefUpdate"
            },
            {
              "$ref": "#/$defs/CloudinaryUploadIntegrationDefUpdate"
            },
            {
              "$ref": "#/$defs/CloudinaryEditIntegrationDefUpdate"
            },
            {
              "$ref": "#/$defs/ArxivIntegrationDefUpdate"
            },
            {
              "type": "null"
            }
          ],
          "title": "Integration"
        },
        "name": {
          "anyOf": [
            {
              "maxLength": 40,
              "pattern": "^[^\\W0-9]\\w*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Name"
        },
        "system": {
          "anyOf": [
            {
              "$ref": "#/$defs/SystemDefUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "text_editor_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/TextEditor20241022DefUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "type": {
          "anyOf": [
            {
              "enum": [
                "function",
                "integration",
                "system",
                "api_call",
                "computer_20241022",
                "text_editor_20241022",
                "bash_20241022"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Type"
        }
      },
      "title": "PatchToolRequest",
      "type": "object"
    },
    "PatchUserRequest": {
      "description": "Payload for patching a user",
      "properties": {
        "about": {
          "default": "",
          "title": "About",
          "type": "string"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "name": {
          "default": "",
          "maxLength": 120,
          "pattern": "^[\\p{L}\\p{Nl}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]+[\\p{ID_Start}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]*$",
          "title": "Name",
          "type": "string"
        }
      },
      "title": "PatchUserRequest",
      "type": "object"
    },
    "PromptItem-Input": {
      "properties": {
        "content": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Content"
                  },
                  {
                    "$ref": "#/$defs/agents_api__autogen__Tasks__ContentModel"
                  },
                  {
                    "$ref": "#/$defs/ContentModel1-Input"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Content"
        },
        "continue": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "title": "Continue"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Name"
        },
        "role": {
          "enum": [
            "user",
            "assistant",
            "system",
            "tool"
          ],
          "title": "Role",
          "type": "string"
        },
        "tool_call_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Tool Call Id"
        },
        "tool_calls": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ChosenFunctionCall"
                  },
                  {
                    "$ref": "#/$defs/ChosenComputer20241022"
                  },
                  {
                    "$ref": "#/$defs/ChosenTextEditor20241022"
                  },
                  {
                    "$ref": "#/$defs/ChosenBash20241022"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "title": "Tool Calls"
        }
      },
      "required": [
        "role",
        "content"
      ],
      "title": "PromptItem",
      "type": "object"
    },
    "PromptItem-Output": {
      "properties": {
        "content": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Content"
                  },
                  {
                    "$ref": "#/$defs/agents_api__autogen__Tasks__ContentModel"
                  },
                  {
                    "$ref": "#/$defs/agents_api__autogen__Tasks__ContentModel1-Output"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Content"
        },
        "continue": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "title": "Continue"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Name"
        },
        "role": {
          "enum": [
            "user",
            "assistant",
            "system",
            "tool"
          ],
          "title": "Role",
          "type": "string"
        },
        "tool_call_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Tool Call Id"
        },
        "tool_calls": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ChosenFunctionCall"
                  },
                  {
                    "$ref": "#/$defs/ChosenComputer20241022"
                  },
                  {
                    "$ref": "#/$defs/ChosenTextEditor20241022"
                  },
                  {
                    "$ref": "#/$defs/ChosenBash20241022"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "title": "Tool Calls"
        }
      },
      "required": [
        "role",
        "content"
      ],
      "title": "PromptItem",
      "type": "object"
    },
    "PromptStep-Input": {
      "properties": {
        "auto_run_tools": {
          "default": true,
          "title": "Auto Run Tools",
          "type": "boolean"
        },
        "disable_cache": {
          "default": false,
          "title": "Disable Cache",
          "type": "boolean"
        },
        "kind_": {
          "const": "prompt",
          "default": "prompt",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        },
        "prompt": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/PromptItem-Input"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "title": "Prompt"
        },
        "settings": {
          "anyOf": [
            {
              "$ref": "#/$defs/ChatSettings"
            },
            {
              "type": "null"
            }
          ]
        },
        "tool_choice": {
          "anyOf": [
            {
              "enum": [
                "auto",
                "none"
              ],
              "type": "string"
            },
            {
              "$ref": "#/$defs/NamedToolChoice"
            },
            {
              "type": "null"
            }
          ],
          "title": "Tool Choice"
        },
        "tools": {
          "anyOf": [
            {
              "const": "all",
              "type": "string"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ToolRef"
                  },
                  {
                    "$ref": "#/$defs/agents_api__autogen__Tools__CreateToolRequest-Input"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "default": "all",
          "title": "Tools"
        },
        "unwrap": {
          "default": false,
          "title": "Unwrap",
          "type": "boolean"
        }
      },
      "required": [
        "prompt"
      ],
      "title": "PromptStep",
      "type": "object"
    },
    "PromptStep-Output": {
      "properties": {
        "auto_run_tools": {
          "default": true,
          "title": "Auto Run Tools",
          "type": "boolean"
        },
        "disable_cache": {
          "default": false,
          "title": "Disable Cache",
          "type": "boolean"
        },
        "kind_": {
          "const": "prompt",
          "default": "prompt",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        },
        "prompt": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/PromptItem-Output"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "title": "Prompt"
        },
        "settings": {
          "anyOf": [
            {
              "$ref": "#/$defs/ChatSettings"
            },
            {
              "type": "null"
            }
          ]
        },
        "tool_choice": {
          "anyOf": [
            {
              "enum": [
                "auto",
                "none"
              ],
              "type": "string"
            },
            {
              "$ref": "#/$defs/NamedToolChoice"
            },
            {
              "type": "null"
            }
          ],
          "title": "Tool Choice"
        },
        "tools": {
          "anyOf": [
            {
              "const": "all",
              "type": "string"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ToolRef"
                  },
                  {
                    "$ref": "#/$defs/CreateToolRequest-Output"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "default": "all",
          "title": "Tools"
        },
        "unwrap": {
          "default": false,
          "title": "Unwrap",
          "type": "boolean"
        }
      },
      "required": [
        "prompt"
      ],
      "title": "PromptStep",
      "type": "object"
    },
    "RecallOptions": {
      "properties": {
        "alpha": {
          "default": 0.7,
          "maximum": 1.0,
          "minimum": 0.0,
          "title": "Alpha",
          "type": "number"
        },
        "confidence": {
          "default": 0.6,
          "maximum": 1.0,
          "minimum": -1.0,
          "title": "Confidence",
          "type": "number"
        },
        "lang": {
          "const": "en-US",
          "default": "en-US",
          "title": "Lang",
          "type": "string"
        },
        "limit": {
          "default": 10,
          "maximum": 50.0,
          "minimum": 1.0,
          "title": "Limit",
          "type": "integer"
        },
        "max_query_length": {
          "default": 1000,
          "title": "Max Query Length",
          "type": "integer"
        },
        "metadata_filter": {
          "default": {},
          "title": "Metadata Filter",
          "type": "object"
        },
        "mmr_strength": {
          "default": 0,
          "exclusiveMaximum": 1.0,
          "minimum": 0.0,
          "title": "Mmr Strength",
          "type": "number"
        },
        "mode": {
          "default": "vector",
          "enum": [
            "hybrid",
            "vector",
            "text"
          ],
          "title": "Mode",
          "type": "string"
        },
        "num_search_messages": {
          "default": 4,
          "title": "Num Search Messages",
          "type": "integer"
        }
      },
      "title": "RecallOptions",
      "type": "object"
    },
    "RecallOptionsUpdate": {
      "properties": {
        "alpha": {
          "default": 0.7,
          "maximum": 1.0,
          "minimum": 0.0,
          "title": "Alpha",
          "type": "number"
        },
        "confidence": {
          "default": 0.6,
          "maximum": 1.0,
          "minimum": -1.0,
          "title": "Confidence",
          "type": "number"
        },
        "lang": {
          "const": "en-US",
          "default": "en-US",
          "title": "Lang",
          "type": "string"
        },
        "limit": {
          "default": 10,
          "maximum": 50.0,
          "minimum": 1.0,
          "title": "Limit",
          "type": "integer"
        },
        "max_query_length": {
          "default": 1000,
          "title": "Max Query Length",
          "type": "integer"
        },
        "metadata_filter": {
          "default": {},
          "title": "Metadata Filter",
          "type": "object"
        },
        "mmr_strength": {
          "default": 0,
          "exclusiveMaximum": 1.0,
          "minimum": 0.0,
          "title": "Mmr Strength",
          "type": "number"
        },
        "mode": {
          "default": "vector",
          "enum": [
            "hybrid",
            "vector",
            "text"
          ],
          "title": "Mode",
          "type": "string"
        },
        "num_search_messages": {
          "default": 4,
          "title": "Num Search Messages",
          "type": "integer"
        }
      },
      "title": "RecallOptionsUpdate",
      "type": "object"
    },
    "Relation": {
      "properties": {
        "head": {
          "format": "uuid",
          "title": "Head",
          "type": "string"
        },
        "relation": {
          "title": "Relation",
          "type": "string"
        },
        "tail": {
          "format": "uuid",
          "title": "Tail",
          "type": "string"
        }
      },
      "required": [
        "head",
        "relation",
        "tail"
      ],
      "title": "Relation",
      "type": "object"
    },
    "RemoteBrowserArguments": {
      "description": "The arguments for the remote browser",
      "properties": {
        "action": {
          "enum": [
            "key",
            "type",
            "mouse_move",
            "left_click",
            "left_click_drag",
            "right_click",
            "middle_click",
            "double_click",
            "screenshot",
            "cursor_position",
            "navigate",
            "refresh"
          ],
          "title": "Action",
          "type": "string"
        },
        "connect_url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Connect Url"
        },
        "coordinate": {
          "anyOf": [
            {
              "items": {},
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Coordinate"
        },
        "text": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Text"
        }
      },
      "required": [
        "action"
      ],
      "title": "RemoteBrowserArguments",
      "type": "object"
    },
    "RemoteBrowserArgumentsUpdate": {
      "description": "The arguments for the remote browser",
      "properties": {
        "action": {
          "anyOf": [
            {
              "enum": [
                "key",
                "type",
                "mouse_move",
                "left_click",
                "left_click_drag",
                "right_click",
                "middle_click",
                "double_click",
                "screenshot",
                "cursor_position",
                "navigate",
                "refresh"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Action"
        },
        "connect_url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Connect Url"
        },
        "coordinate": {
          "anyOf": [
            {
              "items": {},
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Coordinate"
        },
        "text": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Text"
        }
      },
      "title": "RemoteBrowserArgumentsUpdate",
      "type": "object"
    },
    "RemoteBrowserIntegrationDef": {
      "description": "The integration definition for the remote browser",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/RemoteBrowserArguments"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "const": "perform_action",
          "default": "perform_action",
          "title": "Method",
          "type": "string"
        },
        "provider": {
          "const": "remote_browser",
          "default": "remote_browser",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "$ref": "#/$defs/RemoteBrowserSetup"
        }
      },
      "required": [
        "setup"
      ],
      "title": "RemoteBrowserIntegrationDef",
      "type": "object"
    },
    "RemoteBrowserIntegrationDefUpdate": {
      "description": "The integration definition for the remote browser",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/RemoteBrowserArgumentsUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "const": "perform_action",
          "default": "perform_action",
          "title": "Method",
          "type": "string"
        },
        "provider": {
          "const": "remote_browser",
          "default": "remote_browser",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/RemoteBrowserSetup"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "RemoteBrowserIntegrationDefUpdate",
      "type": "object"
    },
    "RemoteBrowserSetup": {
      "description": "The setup parameters for the remote browser",
      "properties": {
        "connect_url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Connect Url"
        },
        "height": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "title": "Height"
        },
        "width": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "title": "Width"
        }
      },
      "title": "RemoteBrowserSetup",
      "type": "object"
    },
    "ResourceDeletedResponse": {
      "properties": {
        "deleted_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Deleted At",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "title": "Id",
          "type": "string"
        },
        "jobs": {
          "default": [],
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "readOnly": true,
          "title": "Jobs",
          "type": "array"
        }
      },
      "required": [
        "id",
        "deleted_at"
      ],
      "title": "ResourceDeletedResponse",
      "type": "object"
    },
    "ResumeExecutionRequest": {
      "properties": {
        "input": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Input"
        },
        "status": {
          "const": "running",
          "default": "running",
          "title": "Status",
          "type": "string"
        }
      },
      "title": "ResumeExecutionRequest",
      "type": "object"
    },
    "ReturnStep": {
      "properties": {
        "kind_": {
          "const": "return",
          "default": "return",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        },
        "return": {
          "additionalProperties": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "items": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": "Return",
          "type": "object"
        }
      },
      "required": [
        "return"
      ],
      "title": "ReturnStep",
      "type": "object"
    },
    "SchemaCompletionResponseFormat": {
      "properties": {
        "json_schema": {
          "title": "Json Schema",
          "type": "object"
        },
        "type": {
          "const": "json_schema",
          "default": "json_schema",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "json_schema"
      ],
      "title": "SchemaCompletionResponseFormat",
      "type": "object"
    },
    "Session": {
      "properties": {
        "auto_run_tools": {
          "default": false,
          "title": "Auto Run Tools",
          "type": "boolean"
        },
        "context_overflow": {
          "anyOf": [
            {
              "enum": [
                "truncate",
                "adaptive"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Context Overflow"
        },
        "created_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created At",
          "type": "string"
        },
        "forward_tool_calls": {
          "default": false,
          "title": "Forward Tool Calls",
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "readOnly": true,
          "title": "Id",
          "type": "string"
        },
        "kind": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Kind"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "recall_options": {
          "anyOf": [
            {
              "$ref": "#/$defs/RecallOptions"
            },
            {
              "type": "null"
            }
          ]
        },
        "render_templates": {
          "default": true,
          "title": "Render Templates",
          "type": "boolean"
        },
        "situation": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Situation"
        },
        "summary": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "readOnly": true,
          "title": "Summary"
        },
        "system_template": {
          "default": "{%- if agent.name -%}\nYou are {{agent.name}}.{{\" \"}}\n{%- endif -%}\n\n{%- if agent.about -%}\nAbout you: {{agent.about}}.{{\" \"}}\n{%- endif -%}\n\n{%- if user -%}\nYou are talking to a user\n  {%- if user.name -%}{{\" \"}} and their name is {{user.name}}\n    {%- if user.about -%}. About the user: {{user.about}}.{%- else -%}.{%- endif -%}\n  {%- endif -%}\n{%- endif -%}\n\n{{NEWLINE}}\n\n{%- if session.situation -%}\nSituation: {{session.situation}}\n{%- endif -%}\n\n{{NEWLINE+NEWLINE}}\n\n{%- if agent.instructions -%}\nInstructions:{{NEWLINE}}\n  {%- if agent.instructions is string -%}\n    {{agent.instructions}}{{NEWLINE}}\n  {%- else -%}\n    {%- for instruction in agent.instructions -%}\n      - {{instruction}}{{NEWLINE}}\n    {%- endfor -%}\n  {%- endif -%}\n  {{NEWLINE}}\n{%- endif -%}\n\n{%- if docs -%}\nRelevant documents:{{NEWLINE}}\n  {%- for doc in docs -%}\n    {{doc.title}}{{NEWLINE}}\n    {%- if doc.content is string -%}\n      {{doc.content}}{{NEWLINE}}\n    {%- else -%}\n      {%- for snippet in doc.content -%}\n        {{snippet}}{{NEWLINE}}\n      {%- endfor -%}\n    {%- endif -%}\n    {{\"---\"}}\n  {%- endfor -%}\n{%- endif -%}",
          "title": "System Template",
          "type": "string"
        },
        "token_budget": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "title": "Token Budget"
        },
        "updated_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated At",
          "type": "string"
        }
      },
      "required": [
        "id",
        "created_at",
        "updated_at"
      ],
      "title": "Session",
      "type": "object"
    },
    "SetStep": {
      "properties": {
        "kind_": {
          "const": "set",
          "default": "set",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        },
        "set": {
          "additionalProperties": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": "Set",
          "type": "object"
        }
      },
      "required": [
        "set"
      ],
      "title": "SetStep",
      "type": "object"
    },
    "SimpleCompletionResponseFormat": {
      "properties": {
        "type": {
          "default": "text",
          "enum": [
            "text",
            "json_object"
          ],
          "title": "Type",
          "type": "string"
        }
      },
      "title": "SimpleCompletionResponseFormat",
      "type": "object"
    },
    "SingleChatOutput": {
      "description": "The output returned by the model. Note that, depending on the model provider, they might return more than one message.",
      "properties": {
        "finish_reason": {
          "default": "stop",
          "enum": [
            "stop",
            "length",
            "content_filter",
            "tool_calls"
          ],
          "title": "Finish Reason",
          "type": "string"
        },
        "index": {
          "title": "Index",
          "type": "integer"
        },
        "logprobs": {
          "anyOf": [
            {
              "$ref": "#/$defs/LogProbResponse"
            },
            {
              "type": "null"
            }
          ]
        },
        "message": {
          "$ref": "#/$defs/MessageModel"
        },
        "tool_calls": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ChosenFunctionCall"
                  },
                  {
                    "$ref": "#/$defs/ChosenComputer20241022"
                  },
                  {
                    "$ref": "#/$defs/ChosenTextEditor20241022"
                  },
                  {
                    "$ref": "#/$defs/ChosenBash20241022"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Tool Calls"
        }
      },
      "required": [
        "index",
        "message"
      ],
      "title": "SingleChatOutput",
      "type": "object"
    },
    "SingleEmbedQueryRequest": {
      "properties": {
        "embed_instruction": {
          "default": "",
          "title": "Embed Instruction",
          "type": "string"
        },
        "text": {
          "title": "Text",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "title": "SingleEmbedQueryRequest",
      "type": "object"
    },
    "SleepFor": {
      "properties": {
        "days": {
          "default": 0,
          "maximum": 30.0,
          "minimum": 0.0,
          "title": "Days",
          "type": "integer"
        },
        "hours": {
          "default": 0,
          "maximum": 24.0,
          "minimum": 0.0,
          "title": "Hours",
          "type": "integer"
        },
        "minutes": {
          "default": 0,
          "maximum": 60.0,
          "minimum": 0.0,
          "title": "Minutes",
          "type": "integer"
        },
        "seconds": {
          "default": 0,
          "maximum": 60.0,
          "minimum": 0.0,
          "title": "Seconds",
          "type": "integer"
        }
      },
      "title": "SleepFor",
      "type": "object"
    },
    "SleepStep": {
      "properties": {
        "kind_": {
          "const": "sleep",
          "default": "sleep",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        },
        "sleep": {
          "$ref": "#/$defs/SleepFor"
        }
      },
      "required": [
        "sleep"
      ],
      "title": "SleepStep",
      "type": "object"
    },
    "Snippet": {
      "properties": {
        "content": {
          "title": "Content",
          "type": "string"
        },
        "embedding": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Embedding"
        },
        "index": {
          "title": "Index",
          "type": "integer"
        }
      },
      "required": [
        "index",
        "content"
      ],
      "title": "Snippet",
      "type": "object"
    },
    "Source": {
      "properties": {
        "data": {
          "title": "Data",
          "type": "string"
        },
        "media_type": {
          "title": "Media Type",
          "type": "string"
        },
        "type": {
          "const": "base64",
          "default": "base64",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "media_type",
        "data"
      ],
      "title": "Source",
      "type": "object"
    },
    "SpiderFetchArguments-Input": {
      "description": "Arguments for Spider integration",
      "properties": {
        "content_type": {
          "default": "application/json",
          "enum": [
            "application/json",
            "text/csv",
            "application/xml",
            "application/jsonl"
          ],
          "title": "Content Type",
          "type": "string"
        },
        "params": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Params"
        },
        "url": {
          "format": "uri",
          "minLength": 1,
          "title": "Url",
          "type": "string"
        }
      },
      "required": [
        "url"
      ],
      "title": "SpiderFetchArguments",
      "type": "object"
    },
    "SpiderFetchArguments-Output": {
      "description": "Arguments for Spider integration",
      "properties": {
        "content_type": {
          "default": "application/json",
          "enum": [
            "application/json",
            "text/csv",
            "application/xml",
            "application/jsonl"
          ],
          "title": "Content Type",
          "type": "string"
        },
        "params": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Params"
        },
        "url": {
          "title": "Url",
          "type": "string"
        }
      },
      "required": [
        "url"
      ],
      "title": "SpiderFetchArguments",
      "type": "object"
    },
    "SpiderFetchArgumentsUpdate": {
      "description": "Arguments for Spider integration",
      "properties": {
        "content_type": {
          "default": "application/json",
          "enum": [
            "application/json",
            "text/csv",
            "application/xml",
            "application/jsonl"
          ],
          "title": "Content Type",
          "type": "string"
        },
        "params": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Params"
        },
        "url": {
          "anyOf": [
            {
              "format": "uri",
              "minLength": 1,
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Url"
        }
      },
      "title": "SpiderFetchArgumentsUpdate",
      "type": "object"
    },
    "SpiderIntegrationDef-Input": {
      "description": "Spider integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/SpiderFetchArguments-Input"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "anyOf": [
            {
              "enum": [
                "crawl",
                "links",
                "screenshot",
                "search"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "provider": {
          "const": "spider",
          "default": "spider",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/SpiderSetup"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "SpiderIntegrationDef",
      "type": "object"
    },
    "SpiderIntegrationDef-Output": {
      "description": "Spider integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/SpiderFetchArguments-Output"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "anyOf": [
            {
              "enum": [
                "crawl",
                "links",
                "screenshot",
                "search"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "provider": {
          "const": "spider",
          "default": "spider",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/SpiderSetup"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "SpiderIntegrationDef",
      "type": "object"
    },
    "SpiderIntegrationDefUpdate": {
      "description": "Spider integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/SpiderFetchArgumentsUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "anyOf": [
            {
              "enum": [
                "crawl",
                "links",
                "screenshot",
                "search"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "provider": {
          "const": "spider",
          "default": "spider",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/SpiderSetupUpdate"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "SpiderIntegrationDefUpdate",
      "type": "object"
    },
    "SpiderSetup": {
      "description": "Setup parameters for Spider integration",
      "properties": {
        "spider_api_key": {
          "title": "Spider Api Key",
          "type": "string"
        }
      },
      "required": [
        "spider_api_key"
      ],
      "title": "SpiderSetup",
      "type": "object"
    },
    "SpiderSetupUpdate": {
      "description": "Setup parameters for Spider integration",
      "properties": {
        "spider_api_key": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Spider Api Key"
        }
      },
      "title": "SpiderSetupUpdate",
      "type": "object"
    },
    "StopExecutionRequest": {
      "properties": {
        "reason": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Reason"
        },
        "status": {
          "const": "cancelled",
          "default": "cancelled",
          "title": "Status",
          "type": "string"
        }
      },
      "title": "StopExecutionRequest",
      "type": "object"
    },
    "SwitchStep-Input": {
      "properties": {
        "kind_": {
          "const": "switch",
          "default": "switch",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        },
        "switch": {
          "items": {
            "$ref": "#/$defs/CaseThen-Input"
          },
          "minItems": 1,
          "title": "Switch",
          "type": "array"
        }
      },
      "required": [
        "switch"
      ],
      "title": "SwitchStep",
      "type": "object"
    },
    "SwitchStep-Output": {
      "properties": {
        "kind_": {
          "const": "switch",
          "default": "switch",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        },
        "switch": {
          "items": {
            "$ref": "#/$defs/CaseThen-Output"
          },
          "minItems": 1,
          "title": "Switch",
          "type": "array"
        }
      },
      "required": [
        "switch"
      ],
      "title": "SwitchStep",
      "type": "object"
    },
    "SystemDef": {
      "description": "System definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Arguments"
        },
        "operation": {
          "enum": [
            "create",
            "update",
            "patch",
            "create_or_update",
            "embed",
            "change_status",
            "search",
            "chat",
            "history",
            "delete",
            "get",
            "list"
          ],
          "title": "Operation",
          "type": "string"
        },
        "resource": {
          "enum": [
            "agent",
            "user",
            "task",
            "execution",
            "doc",
            "session",
            "job"
          ],
          "title": "Resource",
          "type": "string"
        },
        "resource_id": {
          "anyOf": [
            {
              "format": "uuid",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Resource Id"
        },
        "subresource": {
          "anyOf": [
            {
              "enum": [
                "tool",
                "doc",
                "execution",
                "transition"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Subresource"
        }
      },
      "required": [
        "resource",
        "operation"
      ],
      "title": "SystemDef",
      "type": "object"
    },
    "SystemDefUpdate": {
      "description": "System definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Arguments"
        },
        "operation": {
          "anyOf": [
            {
              "enum": [
                "create",
                "update",
                "patch",
                "create_or_update",
                "embed",
                "change_status",
                "search",
                "chat",
                "history",
                "delete",
                "get",
                "list"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Operation"
        },
        "resource": {
          "anyOf": [
            {
              "enum": [
                "agent",
                "user",
                "task",
                "execution",
                "doc",
                "session",
                "job"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Resource"
        },
        "resource_id": {
          "anyOf": [
            {
              "format": "uuid",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Resource Id"
        },
        "subresource": {
          "anyOf": [
            {
              "enum": [
                "tool",
                "doc",
                "execution",
                "transition"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Subresource"
        }
      },
      "title": "SystemDefUpdate",
      "type": "object"
    },
    "Task": {
      "additionalProperties": true,
      "properties": {
        "canonical_name": {
          "anyOf": [
            {
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Canonical Name"
        },
        "created_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created At",
          "type": "string"
        },
        "description": {
          "default": "",
          "title": "Description",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "readOnly": true,
          "title": "Id",
          "type": "string"
        },
        "inherit_tools": {
          "default": false,
          "title": "Inherit Tools",
          "type": "boolean"
        },
        "input_schema": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Input Schema"
        },
        "main": {
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/EvaluateStep"
              },
              {
                "$ref": "#/$defs/ToolCallStep"
              },
              {
                "$ref": "#/$defs/PromptStep-Output"
              },
              {
                "$ref": "#/$defs/GetStep"
              },
              {
                "$ref": "#/$defs/SetStep"
              },
              {
                "$ref": "#/$defs/LogStep"
              },
              {
                "$ref": "#/$defs/YieldStep"
              },
              {
                "$ref": "#/$defs/ReturnStep"
              },
              {
                "$ref": "#/$defs/SleepStep"
              },
              {
                "$ref": "#/$defs/ErrorWorkflowStep"
              },
              {
                "$ref": "#/$defs/WaitForInputStep"
              },
              {
                "$ref": "#/$defs/IfElseWorkflowStep-Output"
              },
              {
                "$ref": "#/$defs/SwitchStep-Output"
              },
              {
                "$ref": "#/$defs/ForeachStep-Output"
              },
              {
                "$ref": "#/$defs/ParallelStep-Output"
              },
              {
                "$ref": "#/$defs/Main-Output"
              }
            ]
          },
          "minItems": 1,
          "title": "Main",
          "type": "array"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "name": {
          "maxLength": 255,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "tools": {
          "default": [],
          "items": {
            "$ref": "#/$defs/TaskTool-Output"
          },
          "title": "Tools",
          "type": "array"
        },
        "updated_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated At",
          "type": "string"
        }
      },
      "required": [
        "name",
        "main",
        "id",
        "created_at",
        "updated_at"
      ],
      "title": "Task",
      "type": "object"
    },
    "TaskTool-Input": {
      "properties": {
        "api_call": {
          "anyOf": [
            {
              "$ref": "#/$defs/ApiCallDef-Input"
            },
            {
              "type": "null"
            }
          ]
        },
        "bash_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/Bash20241022Def"
            },
            {
              "type": "null"
            }
          ]
        },
        "computer_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/Computer20241022Def"
            },
            {
              "type": "null"
            }
          ]
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Description"
        },
        "function": {
          "anyOf": [
            {
              "$ref": "#/$defs/FunctionDef"
            },
            {
              "type": "null"
            }
          ]
        },
        "inherited": {
          "default": false,
          "readOnly": true,
          "title": "Inherited",
          "type": "boolean"
        },
        "integration": {
          "anyOf": [
            {
              "$ref": "#/$defs/DummyIntegrationDef"
            },
            {
              "$ref": "#/$defs/BraveIntegrationDef"
            },
            {
              "$ref": "#/$defs/EmailIntegrationDef"
            },
            {
              "$ref": "#/$defs/SpiderIntegrationDef-Input"
            },
            {
              "$ref": "#/$defs/WikipediaIntegrationDef"
            },
            {
              "$ref": "#/$defs/WeatherIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseContextIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseExtensionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseListSessionsIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseCreateSessionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseGetSessionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseCompleteSessionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseGetSessionLiveUrlsIntegrationDef"
            },
            {
              "$ref": "#/$defs/RemoteBrowserIntegrationDef"
            },
            {
              "$ref": "#/$defs/LlamaParseIntegrationDef"
            },
            {
              "$ref": "#/$defs/FfmpegIntegrationDef"
            },
            {
              "$ref": "#/$defs/CloudinaryUploadIntegrationDef"
            },
            {
              "$ref": "#/$defs/CloudinaryEditIntegrationDef"
            },
            {
              "$ref": "#/$defs/ArxivIntegrationDef"
            },
            {
              "type": "null"
            }
          ],
          "title": "Integration"
        },
        "name": {
          "maxLength": 40,
          "pattern": "^[^\\W0-9]\\w*$",
          "title": "Name",
          "type": "string"
        },
        "system": {
          "anyOf": [
            {
              "$ref": "#/$defs/SystemDef"
            },
            {
              "type": "null"
            }
          ]
        },
        "text_editor_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/TextEditor20241022Def"
            },
            {
              "type": "null"
            }
          ]
        },
        "type": {
          "enum": [
            "function",
            "integration",
            "system",
            "api_call",
            "computer_20241022",
            "text_editor_20241022",
            "bash_20241022"
          ],
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "name",
        "type"
      ],
      "title": "TaskTool",
      "type": "object"
    },
    "TaskTool-Output": {
      "properties": {
        "api_call": {
          "anyOf": [
            {
              "$ref": "#/$defs/ApiCallDef-Output"
            },
            {
              "type": "null"
            }
          ]
        },
        "bash_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/Bash20241022Def"
            },
            {
              "type": "null"
            }
          ]
        },
        "computer_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/Computer20241022Def"
            },
            {
              "type": "null"
            }
          ]
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Description"
        },
        "function": {
          "anyOf": [
            {
              "$ref": "#/$defs/FunctionDef"
            },
            {
              "type": "null"
            }
          ]
        },
        "inherited": {
          "default": false,
          "readOnly": true,
          "title": "Inherited",
          "type": "boolean"
        },
        "integration": {
          "anyOf": [
            {
              "$ref": "#/$defs/DummyIntegrationDef"
            },
            {
              "$ref": "#/$defs/BraveIntegrationDef"
            },
            {
              "$ref": "#/$defs/EmailIntegrationDef"
            },
            {
              "$ref": "#/$defs/SpiderIntegrationDef-Output"
            },
            {
              "$ref": "#/$defs/WikipediaIntegrationDef"
            },
            {
              "$ref": "#/$defs/WeatherIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseContextIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseExtensionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseListSessionsIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseCreateSessionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseGetSessionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseCompleteSessionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseGetSessionLiveUrlsIntegrationDef"
            },
            {
              "$ref": "#/$defs/RemoteBrowserIntegrationDef"
            },
            {
              "$ref": "#/$defs/LlamaParseIntegrationDef"
            },
            {
              "$ref": "#/$defs/FfmpegIntegrationDef"
            },
            {
              "$ref": "#/$defs/CloudinaryUploadIntegrationDef"
            },
            {
              "$ref": "#/$defs/CloudinaryEditIntegrationDef"
            },
            {
              "$ref": "#/$defs/ArxivIntegrationDef"
            },
            {
              "type": "null"
            }
          ],
          "title": "Integration"
        },
        "name": {
          "maxLength": 40,
          "pattern": "^[^\\W0-9]\\w*$",
          "title": "Name",
          "type": "string"
        },
        "system": {
          "anyOf": [
            {
              "$ref": "#/$defs/SystemDef"
            },
            {
              "type": "null"
            }
          ]
        },
        "text_editor_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/TextEditor20241022Def"
            },
            {
              "type": "null"
            }
          ]
        },
        "type": {
          "enum": [
            "function",
            "integration",
            "system",
            "api_call",
            "computer_20241022",
            "text_editor_20241022",
            "bash_20241022"
          ],
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "name",
        "type"
      ],
      "title": "TaskTool",
      "type": "object"
    },
    "TextEditor20241022Def": {
      "properties": {
        "name": {
          "default": "str_replace_editor",
          "title": "Name",
          "type": "string"
        },
        "type": {
          "const": "text_editor_20241022",
          "default": "text_editor_20241022",
          "title": "Type",
          "type": "string"
        }
      },
      "title": "TextEditor20241022Def",
      "type": "object"
    },
    "TextEditor20241022DefUpdate": {
      "properties": {
        "name": {
          "default": "str_replace_editor",
          "title": "Name",
          "type": "string"
        },
        "type": {
          "const": "text_editor_20241022",
          "default": "text_editor_20241022",
          "title": "Type",
          "type": "string"
        }
      },
      "title": "TextEditor20241022DefUpdate",
      "type": "object"
    },
    "TextOnlyDocSearchRequest": {
      "properties": {
        "lang": {
          "const": "en-US",
          "default": "en-US",
          "title": "Lang",
          "type": "string"
        },
        "limit": {
          "default": 10,
          "maximum": 50.0,
          "minimum": 1.0,
          "title": "Limit",
          "type": "integer"
        },
        "metadata_filter": {
          "default": {},
          "title": "Metadata Filter",
          "type": "object"
        },
        "mmr_strength": {
          "default": 0,
          "exclusiveMaximum": 1.0,
          "minimum": 0.0,
          "title": "Mmr Strength",
          "type": "number"
        },
        "text": {
          "title": "Text",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "title": "TextOnlyDocSearchRequest",
      "type": "object"
    },
    "TokenLogProb": {
      "properties": {
        "bytes": {
          "anyOf": [
            {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Bytes"
        },
        "logprob": {
          "title": "Logprob",
          "type": "number"
        },
        "token": {
          "title": "Token",
          "type": "string"
        },
        "top_logprobs": {
          "items": {
            "$ref": "#/$defs/BaseTokenLogProb"
          },
          "minItems": 1,
          "readOnly": true,
          "title": "Top Logprobs",
          "type": "array"
        }
      },
      "required": [
        "token",
        "logprob",
        "top_logprobs"
      ],
      "title": "TokenLogProb",
      "type": "object"
    },
    "Tool": {
      "properties": {
        "api_call": {
          "anyOf": [
            {
              "$ref": "#/$defs/ApiCallDef-Output"
            },
            {
              "type": "null"
            }
          ]
        },
        "bash_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/Bash20241022Def"
            },
            {
              "type": "null"
            }
          ]
        },
        "computer_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/Computer20241022Def"
            },
            {
              "type": "null"
            }
          ]
        },
        "created_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created At",
          "type": "string"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Description"
        },
        "function": {
          "anyOf": [
            {
              "$ref": "#/$defs/FunctionDef"
            },
            {
              "type": "null"
            }
          ]
        },
        "id": {
          "format": "uuid",
          "readOnly": true,
          "title": "Id",
          "type": "string"
        },
        "integration": {
          "anyOf": [
            {
              "$ref": "#/$defs/DummyIntegrationDef"
            },
            {
              "$ref": "#/$defs/BraveIntegrationDef"
            },
            {
              "$ref": "#/$defs/EmailIntegrationDef"
            },
            {
              "$ref": "#/$defs/SpiderIntegrationDef-Output"
            },
            {
              "$ref": "#/$defs/WikipediaIntegrationDef"
            },
            {
              "$ref": "#/$defs/WeatherIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseContextIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseExtensionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseListSessionsIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseCreateSessionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseGetSessionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseCompleteSessionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseGetSessionLiveUrlsIntegrationDef"
            },
            {
              "$ref": "#/$defs/RemoteBrowserIntegrationDef"
            },
            {
              "$ref": "#/$defs/LlamaParseIntegrationDef"
            },
            {
              "$ref": "#/$defs/FfmpegIntegrationDef"
            },
            {
              "$ref": "#/$defs/CloudinaryUploadIntegrationDef"
            },
            {
              "$ref": "#/$defs/CloudinaryEditIntegrationDef"
            },
            {
              "$ref": "#/$defs/ArxivIntegrationDef"
            },
            {
              "type": "null"
            }
          ],
          "title": "Integration"
        },
        "name": {
          "maxLength": 40,
          "pattern": "^[^\\W0-9]\\w*$",
          "title": "Name",
          "type": "string"
        },
        "system": {
          "anyOf": [
            {
              "$ref": "#/$defs/SystemDef"
            },
            {
              "type": "null"
            }
          ]
        },
        "text_editor_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/TextEditor20241022Def"
            },
            {
              "type": "null"
            }
          ]
        },
        "type": {
          "enum": [
            "function",
            "integration",
            "system",
            "api_call",
            "computer_20241022",
            "text_editor_20241022",
            "bash_20241022"
          ],
          "title": "Type",
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated At",
          "type": "string"
        }
      },
      "required": [
        "name",
        "type",
        "created_at",
        "updated_at",
        "id"
      ],
      "title": "Tool",
      "type": "object"
    },
    "ToolCallStep": {
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "additionalProperties": {
                "anyOf": [
                  {
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "type": "object"
                        },
                        {
                          "items": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "type": "object"
                  },
                  {
                    "items": {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          },
                          {
                            "items": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          {
                            "type": "string"
                          }
                        ]
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "object"
            },
            {
              "items": {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          },
                          {
                            "items": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          {
                            "type": "string"
                          }
                        ]
                      },
                      "type": "object"
                    },
                    {
                      "items": {
                        "additionalProperties": {
                          "anyOf": [
                            {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "type": "object"
                            },
                            {
                              "items": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            {
                              "type": "string"
                            }
                          ]
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "type": "object"
              },
              "type": "array"
            },
            {
              "const": "_",
              "type": "string"
            }
          ],
          "default": "_",
          "title": "Arguments"
        },
        "kind_": {
          "const": "tool_call",
          "default": "tool_call",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        },
        "tool": {
          "maxLength": 40,
          "pattern": "^[^\\W0-9]\\w*$",
          "title": "Tool",
          "type": "string"
        }
      },
      "required": [
        "tool"
      ],
      "title": "ToolCallStep",
      "type": "object"
    },
    "ToolRef": {
      "description": "Reference to a tool",
      "properties": {
        "ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/ToolRefById"
            },
            {
              "$ref": "#/$defs/ToolRefByName"
            }
          ],
          "title": "Ref"
        }
      },
      "required": [
        "ref"
      ],
      "title": "ToolRef",
      "type": "object"
    },
    "ToolRefById": {
      "description": "Reference to a tool by id",
      "properties": {
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id"
        }
      },
      "title": "ToolRefById",
      "type": "object"
    },
    "ToolRefByName": {
      "description": "Reference to a tool by name",
      "properties": {
        "name": {
          "anyOf": [
            {
              "maxLength": 40,
              "pattern": "^[^\\W0-9]\\w*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Name"
        }
      },
      "title": "ToolRefByName",
      "type": "object"
    },
    "ToolResponse": {
      "properties": {
        "id": {
          "title": "Id",
          "type": "string"
        },
        "output": {
          "title": "Output",
          "type": "object"
        }
      },
      "required": [
        "id",
        "output"
      ],
      "title": "ToolResponse",
      "type": "object"
    },
    "Transition": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created At",
          "type": "string"
        },
        "current": {
          "$ref": "#/$defs/TransitionTarget",
          "readOnly": true
        },
        "execution_id": {
          "format": "uuid",
          "readOnly": true,
          "title": "Execution Id",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "readOnly": true,
          "title": "Id",
          "type": "string"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "next": {
          "anyOf": [
            {
              "$ref": "#/$defs/TransitionTarget"
            },
            {
              "type": "null"
            }
          ],
          "readOnly": true
        },
        "output": {
          "readOnly": true,
          "title": "Output"
        },
        "step_label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "readOnly": true,
          "title": "Step Label"
        },
        "type": {
          "enum": [
            "init",
            "init_branch",
            "finish",
            "finish_branch",
            "wait",
            "resume",
            "error",
            "step",
            "cancelled"
          ],
          "readOnly": true,
          "title": "Type",
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated At",
          "type": "string"
        }
      },
      "required": [
        "type",
        "output",
        "created_at",
        "updated_at",
        "execution_id",
        "current",
        "next",
        "id"
      ],
      "title": "Transition",
      "type": "object"
    },
    "TransitionTarget": {
      "properties": {
        "step": {
          "title": "Step",
          "type": "integer"
        },
        "workflow": {
          "maxLength": 120,
          "pattern": "^[\\p{L}\\p{Nl}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]+[\\p{ID_Start}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]*$",
          "title": "Workflow",
          "type": "string"
        }
      },
      "required": [
        "workflow",
        "step"
      ],
      "title": "TransitionTarget",
      "type": "object"
    },
    "UpdateAgentRequest": {
      "description": "Payload for updating a agent",
      "properties": {
        "about": {
          "default": "",
          "title": "About",
          "type": "string"
        },
        "canonical_name": {
          "anyOf": [
            {
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Canonical Name"
        },
        "default_settings": {
          "anyOf": [
            {
              "$ref": "#/$defs/DefaultChatSettings"
            },
            {
              "type": "null"
            }
          ]
        },
        "instructions": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "default": [],
          "title": "Instructions"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "model": {
          "default": "",
          "title": "Model",
          "type": "string"
        },
        "name": {
          "maxLength": 255,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "title": "UpdateAgentRequest",
      "type": "object"
    },
    "UpdateSessionRequest": {
      "description": "Payload for updating a session",
      "properties": {
        "auto_run_tools": {
          "default": false,
          "title": "Auto Run Tools",
          "type": "boolean"
        },
        "context_overflow": {
          "anyOf": [
            {
              "enum": [
                "truncate",
                "adaptive"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Context Overflow"
        },
        "forward_tool_calls": {
          "default": false,
          "title": "Forward Tool Calls",
          "type": "boolean"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "recall_options": {
          "anyOf": [
            {
              "$ref": "#/$defs/RecallOptions"
            },
            {
              "type": "null"
            }
          ]
        },
        "render_templates": {
          "default": true,
          "title": "Render Templates",
          "type": "boolean"
        },
        "situation": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Situation"
        },
        "system_template": {
          "default": "{%- if agent.name -%}\nYou are {{agent.name}}.{{\" \"}}\n{%- endif -%}\n\n{%- if agent.about -%}\nAbout you: {{agent.about}}.{{\" \"}}\n{%- endif -%}\n\n{%- if user -%}\nYou are talking to a user\n  {%- if user.name -%}{{\" \"}} and their name is {{user.name}}\n    {%- if user.about -%}. About the user: {{user.about}}.{%- else -%}.{%- endif -%}\n  {%- endif -%}\n{%- endif -%}\n\n{{NEWLINE}}\n\n{%- if session.situation -%}\nSituation: {{session.situation}}\n{%- endif -%}\n\n{{NEWLINE+NEWLINE}}\n\n{%- if agent.instructions -%}\nInstructions:{{NEWLINE}}\n  {%- if agent.instructions is string -%}\n    {{agent.instructions}}{{NEWLINE}}\n  {%- else -%}\n    {%- for instruction in agent.instructions -%}\n      - {{instruction}}{{NEWLINE}}\n    {%- endfor -%}\n  {%- endif -%}\n  {{NEWLINE}}\n{%- endif -%}\n\n{%- if docs -%}\nRelevant documents:{{NEWLINE}}\n  {%- for doc in docs -%}\n    {{doc.title}}{{NEWLINE}}\n    {%- if doc.content is string -%}\n      {{doc.content}}{{NEWLINE}}\n    {%- else -%}\n      {%- for snippet in doc.content -%}\n        {{snippet}}{{NEWLINE}}\n      {%- endfor -%}\n    {%- endif -%}\n    {{\"---\"}}\n  {%- endfor -%}\n{%- endif -%}",
          "title": "System Template",
          "type": "string"
        },
        "token_budget": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "title": "Token Budget"
        }
      },
      "title": "UpdateSessionRequest",
      "type": "object"
    },
    "UpdateToolRequest": {
      "description": "Payload for updating a tool",
      "properties": {
        "api_call": {
          "anyOf": [
            {
              "$ref": "#/$defs/ApiCallDef-Input"
            },
            {
              "type": "null"
            }
          ]
        },
        "bash_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/Bash20241022Def"
            },
            {
              "type": "null"
            }
          ]
        },
        "computer_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/Computer20241022Def"
            },
            {
              "type": "null"
            }
          ]
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Description"
        },
        "function": {
          "anyOf": [
            {
              "$ref": "#/$defs/FunctionDef"
            },
            {
              "type": "null"
            }
          ]
        },
        "integration": {
          "anyOf": [
            {
              "$ref": "#/$defs/DummyIntegrationDef"
            },
            {
              "$ref": "#/$defs/BraveIntegrationDef"
            },
            {
              "$ref": "#/$defs/EmailIntegrationDef"
            },
            {
              "$ref": "#/$defs/SpiderIntegrationDef-Input"
            },
            {
              "$ref": "#/$defs/WikipediaIntegrationDef"
            },
            {
              "$ref": "#/$defs/WeatherIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseContextIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseExtensionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseListSessionsIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseCreateSessionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseGetSessionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseCompleteSessionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseGetSessionLiveUrlsIntegrationDef"
            },
            {
              "$ref": "#/$defs/RemoteBrowserIntegrationDef"
            },
            {
              "$ref": "#/$defs/LlamaParseIntegrationDef"
            },
            {
              "$ref": "#/$defs/FfmpegIntegrationDef"
            },
            {
              "$ref": "#/$defs/CloudinaryUploadIntegrationDef"
            },
            {
              "$ref": "#/$defs/CloudinaryEditIntegrationDef"
            },
            {
              "$ref": "#/$defs/ArxivIntegrationDef"
            },
            {
              "type": "null"
            }
          ],
          "title": "Integration"
        },
        "name": {
          "maxLength": 40,
          "pattern": "^[^\\W0-9]\\w*$",
          "title": "Name",
          "type": "string"
        },
        "system": {
          "anyOf": [
            {
              "$ref": "#/$defs/SystemDef"
            },
            {
              "type": "null"
            }
          ]
        },
        "text_editor_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/TextEditor20241022Def"
            },
            {
              "type": "null"
            }
          ]
        },
        "type": {
          "enum": [
            "function",
            "integration",
            "system",
            "api_call",
            "computer_20241022",
            "text_editor_20241022",
            "bash_20241022"
          ],
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "name",
        "type"
      ],
      "title": "UpdateToolRequest",
      "type": "object"
    },
    "UpdateUserRequest": {
      "description": "Payload for updating a user",
      "properties": {
        "about": {
          "default": "",
          "title": "About",
          "type": "string"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "name": {
          "default": "",
          "maxLength": 120,
          "pattern": "^[\\p{L}\\p{Nl}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]+[\\p{ID_Start}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]*$",
          "title": "Name",
          "type": "string"
        }
      },
      "title": "UpdateUserRequest",
      "type": "object"
    },
    "User": {
      "properties": {
        "about": {
          "default": "",
          "title": "About",
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created At",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "readOnly": true,
          "title": "Id",
          "type": "string"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Metadata"
        },
        "name": {
          "default": "",
          "maxLength": 120,
          "pattern": "^[\\p{L}\\p{Nl}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]+[\\p{ID_Start}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]*$",
          "title": "Name",
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated At",
          "type": "string"
        }
      },
      "required": [
        "id",
        "created_at",
        "updated_at"
      ],
      "title": "User",
      "type": "object"
    },
    "ValidationError": {
      "properties": {
        "loc": {
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              }
            ]
          },
          "title": "Location",
          "type": "array"
        },
        "msg": {
          "title": "Message",
          "type": "string"
        },
        "type": {
          "title": "Error Type",
          "type": "string"
        }
      },
      "required": [
        "loc",
        "msg",
        "type"
      ],
      "title": "ValidationError",
      "type": "object"
    },
    "VectorDocSearchRequest": {
      "properties": {
        "confidence": {
          "default": 0,
          "maximum": 1.0,
          "minimum": -1.0,
          "title": "Confidence",
          "type": "number"
        },
        "lang": {
          "const": "en-US",
          "default": "en-US",
          "title": "Lang",
          "type": "string"
        },
        "limit": {
          "default": 10,
          "maximum": 50.0,
          "minimum": 1.0,
          "title": "Limit",
          "type": "integer"
        },
        "metadata_filter": {
          "default": {},
          "title": "Metadata Filter",
          "type": "object"
        },
        "mmr_strength": {
          "default": 0,
          "exclusiveMaximum": 1.0,
          "minimum": 0.0,
          "title": "Mmr Strength",
          "type": "number"
        },
        "vector": {
          "items": {
            "type": "number"
          },
          "title": "Vector",
          "type": "array"
        }
      },
      "required": [
        "vector"
      ],
      "title": "VectorDocSearchRequest",
      "type": "object"
    },
    "WaitForInputInfo": {
      "properties": {
        "info": {
          "additionalProperties": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "items": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": "Info",
          "type": "object"
        }
      },
      "required": [
        "info"
      ],
      "title": "WaitForInputInfo",
      "type": "object"
    },
    "WaitForInputStep": {
      "properties": {
        "kind_": {
          "const": "wait_for_input",
          "default": "wait_for_input",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        },
        "wait_for_input": {
          "$ref": "#/$defs/WaitForInputInfo"
        }
      },
      "required": [
        "wait_for_input"
      ],
      "title": "WaitForInputStep",
      "type": "object"
    },
    "WeatherGetArguments": {
      "description": "Arguments for Weather",
      "properties": {
        "location": {
          "title": "Location",
          "type": "string"
        }
      },
      "required": [
        "location"
      ],
      "title": "WeatherGetArguments",
      "type": "object"
    },
    "WeatherGetArgumentsUpdate": {
      "description": "Arguments for Weather",
      "properties": {
        "location": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Location"
        }
      },
      "title": "WeatherGetArgumentsUpdate",
      "type": "object"
    },
    "WeatherIntegrationDef": {
      "description": "Weather integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/WeatherGetArguments"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "provider": {
          "const": "weather",
          "default": "weather",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/WeatherSetup"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "WeatherIntegrationDef",
      "type": "object"
    },
    "WeatherIntegrationDefUpdate": {
      "description": "Weather integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/WeatherGetArgumentsUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "provider": {
          "const": "weather",
          "default": "weather",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {
              "$ref": "#/$defs/WeatherSetupUpdate"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "WeatherIntegrationDefUpdate",
      "type": "object"
    },
    "WeatherSetup": {
      "description": "Integration definition for Weather",
      "properties": {
        "openweathermap_api_key": {
          "title": "Openweathermap Api Key",
          "type": "string"
        }
      },
      "required": [
        "openweathermap_api_key"
      ],
      "title": "WeatherSetup",
      "type": "object"
    },
    "WeatherSetupUpdate": {
      "description": "Integration definition for Weather",
      "properties": {
        "openweathermap_api_key": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Openweathermap Api Key"
        }
      },
      "title": "WeatherSetupUpdate",
      "type": "object"
    },
    "WikipediaIntegrationDef": {
      "description": "Wikipedia integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/WikipediaSearchArguments"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "provider": {
          "const": "wikipedia",
          "default": "wikipedia",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "title": "Setup"
        }
      },
      "title": "WikipediaIntegrationDef",
      "type": "object"
    },
    "WikipediaIntegrationDefUpdate": {
      "description": "Wikipedia integration definition",
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "$ref": "#/$defs/WikipediaSearchArgumentsUpdate"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Method"
        },
        "provider": {
          "const": "wikipedia",
          "default": "wikipedia",
          "title": "Provider",
          "type": "string"
        },
        "setup": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "title": "Setup"
        }
      },
      "title": "WikipediaIntegrationDefUpdate",
      "type": "object"
    },
    "WikipediaSearchArguments": {
      "description": "Arguments for Wikipedia Search",
      "properties": {
        "load_max_docs": {
          "default": 2,
          "maximum": 10.0,
          "minimum": 1.0,
          "title": "Load Max Docs",
          "type": "integer"
        },
        "query": {
          "title": "Query",
          "type": "string"
        }
      },
      "required": [
        "query"
      ],
      "title": "WikipediaSearchArguments",
      "type": "object"
    },
    "WikipediaSearchArgumentsUpdate": {
      "description": "Arguments for Wikipedia Search",
      "properties": {
        "load_max_docs": {
          "default": 2,
          "maximum": 10.0,
          "minimum": 1.0,
          "title": "Load Max Docs",
          "type": "integer"
        },
        "query": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Query"
        }
      },
      "title": "WikipediaSearchArgumentsUpdate",
      "type": "object"
    },
    "YieldStep": {
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "additionalProperties": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  },
                  {
                    "items": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "object"
            },
            {
              "const": "_",
              "type": "string"
            }
          ],
          "default": "_",
          "title": "Arguments"
        },
        "kind_": {
          "const": "yield",
          "default": "yield",
          "readOnly": true,
          "title": "Kind",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "maxLength": 120,
              "pattern": "^[^0-9]|^[0-9]+[^0-9].*$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Label"
        },
        "workflow": {
          "title": "Workflow",
          "type": "string"
        }
      },
      "required": [
        "workflow"
      ],
      "title": "YieldStep",
      "type": "object"
    },
    "agents_api__autogen__Chat__ContentModel": {
      "description": "Anthropic image content part",
      "properties": {
        "content": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ContentItem"
              },
              "type": "array"
            },
            {
              "items": {
                "$ref": "#/$defs/ContentItemModel"
              },
              "type": "array"
            }
          ],
          "title": "Content"
        },
        "tool_use_id": {
          "title": "Tool Use Id",
          "type": "string"
        },
        "type": {
          "const": "tool_result",
          "default": "tool_result",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "tool_use_id",
        "content"
      ],
      "title": "ContentModel",
      "type": "object"
    },
    "agents_api__autogen__Chat__ContentModel1": {
      "properties": {
        "text": {
          "title": "Text",
          "type": "string"
        },
        "type": {
          "const": "text",
          "default": "text",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "title": "ContentModel1",
      "type": "object"
    },
    "agents_api__autogen__Chat__ContentModel2": {
      "description": "Anthropic image content part",
      "properties": {
        "content": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ContentItemModel1"
              },
              "type": "array"
            },
            {
              "items": {
                "$ref": "#/$defs/ContentItemModel2"
              },
              "type": "array"
            }
          ],
          "title": "Content"
        },
        "tool_use_id": {
          "title": "Tool Use Id",
          "type": "string"
        },
        "type": {
          "const": "tool_result",
          "default": "tool_result",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "tool_use_id",
        "content"
      ],
      "title": "ContentModel2",
      "type": "object"
    },
    "agents_api__autogen__Chat__ContentModel3": {
      "properties": {
        "text": {
          "title": "Text",
          "type": "string"
        },
        "type": {
          "const": "text",
          "default": "text",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "title": "ContentModel3",
      "type": "object"
    },
    "agents_api__autogen__Entries__ContentModel": {
      "description": "Anthropic image content part",
      "properties": {
        "content": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ContentItem"
              },
              "type": "array"
            },
            {
              "items": {
                "$ref": "#/$defs/ContentItemModel"
              },
              "type": "array"
            }
          ],
          "title": "Content"
        },
        "tool_use_id": {
          "title": "Tool Use Id",
          "type": "string"
        },
        "type": {
          "const": "tool_result",
          "default": "tool_result",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "tool_use_id",
        "content"
      ],
      "title": "ContentModel",
      "type": "object"
    },
    "agents_api__autogen__Entries__ContentModel1": {
      "properties": {
        "text": {
          "title": "Text",
          "type": "string"
        },
        "type": {
          "const": "text",
          "default": "text",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "title": "ContentModel1",
      "type": "object"
    },
    "agents_api__autogen__Entries__ContentModel2": {
      "description": "Anthropic image content part",
      "properties": {
        "content": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ContentItemModel1"
              },
              "type": "array"
            },
            {
              "items": {
                "$ref": "#/$defs/ContentItemModel2"
              },
              "type": "array"
            }
          ],
          "title": "Content"
        },
        "tool_use_id": {
          "title": "Tool Use Id",
          "type": "string"
        },
        "type": {
          "const": "tool_result",
          "default": "tool_result",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "tool_use_id",
        "content"
      ],
      "title": "ContentModel2",
      "type": "object"
    },
    "agents_api__autogen__Entries__ContentModel3": {
      "properties": {
        "image_url": {
          "$ref": "#/$defs/ImageUrl"
        },
        "type": {
          "const": "image_url",
          "default": "image_url",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "image_url"
      ],
      "title": "ContentModel3",
      "type": "object"
    },
    "agents_api__autogen__Tasks__ContentModel": {
      "properties": {
        "image_url": {
          "$ref": "#/$defs/ImageUrl"
        },
        "type": {
          "const": "image_url",
          "default": "image_url",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "image_url"
      ],
      "title": "ContentModel",
      "type": "object"
    },
    "agents_api__autogen__Tasks__ContentModel1-Output": {
      "description": "Anthropic image content part",
      "properties": {
        "content": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ContentItem"
              },
              "type": "array"
            },
            {
              "items": {
                "$ref": "#/$defs/ContentItemModel"
              },
              "type": "array"
            }
          ],
          "title": "Content"
        },
        "tool_use_id": {
          "title": "Tool Use Id",
          "type": "string"
        },
        "type": {
          "const": "tool_result",
          "default": "tool_result",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "tool_use_id",
        "content"
      ],
      "title": "ContentModel1",
      "type": "object"
    },
    "agents_api__autogen__Tools__CreateToolRequest-Input": {
      "description": "Payload for creating a tool",
      "properties": {
        "api_call": {
          "anyOf": [
            {
              "$ref": "#/$defs/ApiCallDef-Input"
            },
            {
              "type": "null"
            }
          ]
        },
        "bash_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/Bash20241022Def"
            },
            {
              "type": "null"
            }
          ]
        },
        "computer_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/Computer20241022Def"
            },
            {
              "type": "null"
            }
          ]
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Description"
        },
        "function": {
          "anyOf": [
            {
              "$ref": "#/$defs/FunctionDef"
            },
            {
              "type": "null"
            }
          ]
        },
        "integration": {
          "anyOf": [
            {
              "$ref": "#/$defs/DummyIntegrationDef"
            },
            {
              "$ref": "#/$defs/BraveIntegrationDef"
            },
            {
              "$ref": "#/$defs/EmailIntegrationDef"
            },
            {
              "$ref": "#/$defs/SpiderIntegrationDef-Input"
            },
            {
              "$ref": "#/$defs/WikipediaIntegrationDef"
            },
            {
              "$ref": "#/$defs/WeatherIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseContextIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseExtensionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseListSessionsIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseCreateSessionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseGetSessionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseCompleteSessionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseGetSessionLiveUrlsIntegrationDef"
            },
            {
              "$ref": "#/$defs/RemoteBrowserIntegrationDef"
            },
            {
              "$ref": "#/$defs/LlamaParseIntegrationDef"
            },
            {
              "$ref": "#/$defs/FfmpegIntegrationDef"
            },
            {
              "$ref": "#/$defs/CloudinaryUploadIntegrationDef"
            },
            {
              "$ref": "#/$defs/CloudinaryEditIntegrationDef"
            },
            {
              "$ref": "#/$defs/ArxivIntegrationDef"
            },
            {
              "type": "null"
            }
          ],
          "title": "Integration"
        },
        "name": {
          "maxLength": 40,
          "pattern": "^[^\\W0-9]\\w*$",
          "title": "Name",
          "type": "string"
        },
        "system": {
          "anyOf": [
            {
              "$ref": "#/$defs/SystemDef"
            },
            {
              "type": "null"
            }
          ]
        },
        "text_editor_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/TextEditor20241022Def"
            },
            {
              "type": "null"
            }
          ]
        },
        "type": {
          "enum": [
            "function",
            "integration",
            "system",
            "api_call",
            "computer_20241022",
            "text_editor_20241022",
            "bash_20241022"
          ],
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "name",
        "type"
      ],
      "title": "CreateToolRequest",
      "type": "object"
    },
    "agents_api__autogen__openapi_model__CreateToolRequest": {
      "properties": {
        "api_call": {
          "anyOf": [
            {
              "$ref": "#/$defs/ApiCallDef-Input"
            },
            {
              "type": "null"
            }
          ]
        },
        "bash_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/Bash20241022Def"
            },
            {
              "type": "null"
            }
          ]
        },
        "computer_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/Computer20241022Def"
            },
            {
              "type": "null"
            }
          ]
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Description"
        },
        "function": {
          "anyOf": [
            {
              "$ref": "#/$defs/FunctionDef"
            },
            {
              "type": "null"
            }
          ]
        },
        "integration": {
          "anyOf": [
            {
              "$ref": "#/$defs/DummyIntegrationDef"
            },
            {
              "$ref": "#/$defs/BraveIntegrationDef"
            },
            {
              "$ref": "#/$defs/EmailIntegrationDef"
            },
            {
              "$ref": "#/$defs/SpiderIntegrationDef-Input"
            },
            {
              "$ref": "#/$defs/WikipediaIntegrationDef"
            },
            {
              "$ref": "#/$defs/WeatherIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseContextIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseExtensionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseListSessionsIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseCreateSessionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseGetSessionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseCompleteSessionIntegrationDef"
            },
            {
              "$ref": "#/$defs/BrowserbaseGetSessionLiveUrlsIntegrationDef"
            },
            {
              "$ref": "#/$defs/RemoteBrowserIntegrationDef"
            },
            {
              "$ref": "#/$defs/LlamaParseIntegrationDef"
            },
            {
              "$ref": "#/$defs/FfmpegIntegrationDef"
            },
            {
              "$ref": "#/$defs/CloudinaryUploadIntegrationDef"
            },
            {
              "$ref": "#/$defs/CloudinaryEditIntegrationDef"
            },
            {
              "$ref": "#/$defs/ArxivIntegrationDef"
            },
            {
              "type": "null"
            }
          ],
          "title": "Integration"
        },
        "name": {
          "maxLength": 40,
          "pattern": "^[^\\W0-9]\\w*$",
          "title": "Name",
          "type": "string"
        },
        "system": {
          "anyOf": [
            {
              "$ref": "#/$defs/SystemDef"
            },
            {
              "type": "null"
            }
          ]
        },
        "text_editor_20241022": {
          "anyOf": [
            {
              "$ref": "#/$defs/TextEditor20241022Def"
            },
            {
              "type": "null"
            }
          ]
        },
        "type": {
          "enum": [
            "function",
            "integration",
            "system",
            "api_call",
            "computer_20241022",
            "text_editor_20241022",
            "bash_20241022"
          ],
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "name",
        "type"
      ],
      "title": "CreateToolRequest",
      "type": "object"
    }
  },
  "description": "Payload for creating a agent (and associated documents)",
  "properties": {
    "about": {
      "default": "",
      "title": "About",
      "type": "string"
    },
    "canonical_name": {
      "anyOf": [
        {
          "maxLength": 255,
          "minLength": 1,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "title": "Canonical Name"
    },
    "default_settings": {
      "anyOf": [
        {
          "$ref": "#/$defs/DefaultChatSettings"
        },
        {
          "type": "null"
        }
      ]
    },
    "instructions": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      ],
      "default": [],
      "title": "Instructions"
    },
    "metadata": {
      "anyOf": [
        {
          "type": "object"
        },
        {
          "type": "null"
        }
      ],
      "title": "Metadata"
    },
    "model": {
      "default": "",
      "title": "Model",
      "type": "string"
    },
    "name": {
      "maxLength": 255,
      "minLength": 1,
      "title": "Name",
      "type": "string"
    }
  },
  "required": [
    "name"
  ],
  "title": "CreateAgentRequest",
  "type": "object"
}
