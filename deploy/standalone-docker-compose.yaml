x--shared-environment: &shared-environment
  AGENTS_API_KEY: ${AGENTS_API_KEY}
  AGENTS_API_KEY_HEADER_NAME: "Authorization"
  AGENTS_API_URL: ${AGENTS_API_URL:-http://agents-api:8080}
  EMBEDDING_MODEL_ID: ${EMBEDDING_MODEL_ID:-openai/text-embedding-3-large}
  TRUNCATE_EMBED_TEXT: ${TRUNCATE_EMBED_TEXT:-True}
  ENABLE_RESPONSES: "True"
  PG_DSN: ${PG_DSN:-postgres://postgres:postgres@memory-store:5432/postgres}
  MEMORY_STORE_PASSWORD: ${MEMORY_STORE_PASSWORD:-postgres}
  INTEGRATION_SERVICE_URL: ${INTEGRATION_SERVICE_URL:-http://integrations:8000}
  INTEGRATIONS_SERVICE_PORT: ${INTEGRATIONS_SERVICE_PORT:-8000}
  BROWSERBASE_API_KEY: ${BROWSERBASE_API_KEY}
  BROWSERBASE_PROJECT_ID: ${BROWSERBASE_PROJECT_ID}
  OPENWEATHER_API_KEY: ${OPENWEATHER_API_KEY}
  SPIDER_API_KEY: ${SPIDER_API_KEY}
  BRAVE_API_KEY: ${BRAVE_API_KEY}
  LLAMA_API_KEY: ${LLAMA_API_KEY}
  CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
  CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
  CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
  MAILGUN_PASSWORD: ${MAILGUN_PASSWORD}
  UNSTRUCTURED_API_KEY: ${UNSTRUCTURED_API_KEY}
  SKIP_CHECK_DEVELOPER_HEADERS: "True"
  ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
  GEMINI_API_KEY: ${GEMINI_API_KEY}
  OPENAI_API_KEY: ${OPENAI_API_KEY}
  OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
  GROQ_API_KEY: ${GROQ_API_KEY}
  VOYAGE_API_KEY: ${VOYAGE_API_KEY}
  CEREBRAS_API_KEY: ${CEREBRAS_API_KEY}
  CLOUDFLARE_API_KEY: ${CLOUDFLARE_API_KEY}
  CLOUDFLARE_ACCOUNT_ID: ${CLOUDFLARE_ACCOUNT_ID}
  NVIDIA_NIM_API_KEY: ${NVIDIA_NIM_API_KEY}
  GITHUB_API_KEY: ${GITHUB_API_KEY}
  GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}

# include:
#   - ../agents-api/docker-compose-api.yml

services:
  agents-api:
    image: julepai/agents-api:${TAG:-latest-responses}
    environment:
      <<: *shared-environment

    ports:
      - "8080:8080"

  integrations: 
    image: julepai/integrations:${TAG:-latest-responses}
    environment:
      <<: *shared-environment
    ports:
      - "${INTEGRATIONS_SERVICE_PORT:-8000}:${INTEGRATIONS_SERVICE_PORT:-8000}" # map host to container port

  memory-store:
    image: timescale/timescaledb-ha:pg17
    environment:
      <<: *shared-environment

    ports:
      - "5432:5432"

    volumes:
      - memory_store_data:/home/postgres/pgdata/data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  vectorizer-worker:
    image: timescale/pgai-vectorizer-worker:latest
    environment:
      - PGAI_VECTORIZER_WORKER_DB_URL=postgres://postgres:${MEMORY_STORE_PASSWORD:-postgres}@memory-store:5432/postgres
      - OPENAI_API_KEY=${OPENAI_API_KEY:?OPENAI_API_KEY is required}
    command: [ "--poll-interval", "5s" ]
    depends_on:
      memory-store:
        condition: service_healthy

  migration:
    image: julepai/memory-store-migrations:latest
    command: [ "-path", "/migrations", "-database", "postgres://postgres:${MEMORY_STORE_PASSWORD:-postgres}@memory-store:5432/postgres?sslmode=disable" , "up"]
    restart: "no"
    depends_on:
      memory-store:
        condition: service_healthy

volumes:
  memory_store_data: