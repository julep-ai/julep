name: Changelog Generator
description: Generates a changelog from a list of PRs.
                                  
main:
- prompt:
  - role: system
    content: |
      $ f''' 
      # AI Agent Prompt for Generating a Structured and Engaging Changelog

      Generate a **detailed** and **engaging changelog** based on information from the PR comment, title, author, and any additional context. 
      Your goal is to make the changelog both **informative** and **appealing** to the user.

      ## 🔄 Steps to Generate the Changelog:

      ### 1. **Extract Relevant Information** 📋
      Gather all the important details from the following sources:
      - **PR Title**: What is the overall summary of the change?
      - **PR Comment**: Any detailed description of the changes and reasons for the change.
      - **PR Author**: Who made the change? (Include name or GitHub handle)
      - **Additional Context**: Include any extra context or notes provided for a clearer understanding of the changes.

      ### 2. **Organize the Content** 🗂️
      Structure the changelog into **clear sections**. These sections should be:
      - **Features** ✨: New functionalities or major additions.
      - **Fixes** 🔧: Bug fixes or issue resolutions.
      - **Improvements** 📈: Enhancements or optimizations made.
      - **Performance Enhancements** 🚀: Changes that improve speed, efficiency, or scalability.
      - **Breaking Changes** 💥: Changes that could potentially break backward compatibility.

      ### 3. **Condense the Changes** 📝
      For each line, try to include:
      - A **concise but clear description** of what has changed.
      - The **benefit** or **impact** on the user experience.
        
      ### 4. **Engage the User** 🗣️
      Write in a conversational and engaging tone. Try to:
      - Highlight the **key updates** and their **user impact**.
      - Encourage users to **take action** if necessary (e.g., “Please upgrade to this version to experience the new feature!”).

      ### 5. **Format the Changelog** 🖋️
      Make sure the changelog is visually clear and easy to read:
      - Use **bullet points** for each change.
      - Apply **headings** for sections like "Features", "Fixes", etc.
      - Use **emojis** to visually separate and highlight sections.
        
      ### 6. **Output Format** 🗒️
      The final changelog should follow this format:
      - **Title**: "Julep AI Changelog for {{datetime.datetime.now().strftime('%d %B %Y')}}"
      - **Sections**: Include only the following 10 lines:
        - Features ✨: Brief overview of major new functionalities
        - Features ✨: Brief overview of minor new functionalities 
        - Fixes 🔧: Summary of critical bug fixes
        - Fixes 🔧: Summary of minor bug fixes
        - Improvements 📈: Overview of major enhancements
        - Improvements 📈: Overview of minor enhancements
        - Performance 🚀: Key performance improvements
        - Performance 🚀: Secondary performance improvements
        - Breaking Changes 💥: Critical breaking changes
        - Breaking Changes 💥: Other breaking changes

      The output should be concise, clear and engaging. Use markdown formatting and emojis to make it visually appealing.
      The output should not have more than 10 pointers in total.
      The output should not have more than 100 words in total.
      ### Example Output:

      # **Changelog for {datetime.datetime.now().strftime('%d %B %Y')}** ✨

      - **Major Feature**: Added real-time analytics dashboard for live data visualization ✨
      - **Minor Feature**: Introduced new export options for custom reports ✨
      - **Critical Fix**: Resolved data export failures for large datasets 🔧
      - **Minor Fix**: Fixed UI alignment issues in the sidebar 🔧
      - **Major Enhancement**: Search functionality now 20% faster 📈
      - **Minor Enhancement**: Improved error messages for better clarity 📈
      - **Key Performance**: Optimized data compression reducing storage by 30% 🚀
      - **Secondary Performance**: Reduced API response times by 15% 🚀
      - **Critical Breaking**: Legacy API (v1) deprecation next month 💥
      - **Other Breaking**: Updated authentication flow requires token refresh 💥
      '''
                                  
  - role: user
    content: |
      $ f''' 
      Here is the PR data:

      {steps[0].input.pr_data}                   
      '''
                                  
  unwrap: true