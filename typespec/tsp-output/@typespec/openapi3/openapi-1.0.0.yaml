openapi: 3.0.0
info:
  title: Julep API
  termsOfService: https://julep.ai/terms
  contact:
    name: Julep AI
    url: https://julep.ai
    email: developers@julep.ai
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  description: Julep is a backend for creating stateful AI apps with background tasks and long-term memory easily.
  version: 1.0.0
externalDocs:
  url: https://docs.julep.ai
  description: Julep API documentation
tags: []
paths:
  /agents:
    get:
      operationId: AgentsRoute_list
      description: List Agents (paginated)
      parameters:
        - $ref: '#/components/parameters/Common.PaginationOptions.limit'
        - $ref: '#/components/parameters/Common.PaginationOptions.offset'
        - $ref: '#/components/parameters/Common.PaginationOptions.sort_by'
        - $ref: '#/components/parameters/Common.PaginationOptions.direction'
        - $ref: '#/components/parameters/Common.PaginationOptions.metadata_filter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Agents.Agent'
                required:
                  - items
    post:
      operationId: AgentsRoute_create
      description: Create a new Agent
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agents.Agent'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agents.CreateAgentRequest'
  /agents/{id}:
    post:
      operationId: AgentsRoute_createOrUpdate
      description: Create or update an Agent
      parameters:
        - $ref: '#/components/parameters/Agents.CreateOrUpdateAgentRequest.id'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agents.Agent'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agents.UpdateAgentRequest'
    put:
      operationId: AgentsRoute_update
      description: Update an existing Agent by id (overwrites existing values; use PATCH for merging instead)
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agents.Agent'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agents.UpdateAgentRequest'
    patch:
      operationId: AgentsRoute_patch
      description: Update an existing Agent by id (merges with existing values)
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agents.Agent'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agents.PatchAgentRequest'
    delete:
      operationId: AgentsRoute_delete
      description: Delete Agent by id
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common.ResourceDeletedResponse'
    get:
      operationId: AgentsRoute_get
      description: Get an Agent by id
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agents.Agent'
  /agents/{id}/docs:
    get:
      operationId: AgentDocsRoute_list
      description: List Docs owned by an Agent
      parameters:
        - name: id
          in: path
          required: true
          description: ID of parent
          schema:
            $ref: '#/components/schemas/Common.uuid'
        - $ref: '#/components/parameters/Common.PaginationOptions.limit'
        - $ref: '#/components/parameters/Common.PaginationOptions.offset'
        - $ref: '#/components/parameters/Common.PaginationOptions.sort_by'
        - $ref: '#/components/parameters/Common.PaginationOptions.direction'
        - $ref: '#/components/parameters/Common.PaginationOptions.metadata_filter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Docs.Doc'
                required:
                  - items
    post:
      operationId: AgentDocsRoute_create
      description: Create a Doc for this Agent
      parameters:
        - name: id
          in: path
          required: true
          description: ID of parent resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Docs.Doc'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Docs.CreateDocRequest'
    delete:
      operationId: AgentDocsRoute_deleteBulk
      description: Bulk delete Docs owned by an Agent
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the parent
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Common.ResourceDeletedResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Docs.BulkDeleteDocsRequest'
  /agents/{id}/docs/{child_id}:
    delete:
      operationId: AgentDocsRoute_delete
      description: Delete a Doc for this Agent
      parameters:
        - name: id
          in: path
          required: true
          description: ID of parent resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
        - name: child_id
          in: path
          required: true
          description: ID of the resource to be deleted
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common.ResourceDeletedResponse'
  /agents/{id}/search:
    post:
      operationId: AgentsDocsSearchRoute_search
      description: Search Docs owned by an Agent
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the parent
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Docs.DocSearchResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  anyOf:
                    - $ref: '#/components/schemas/Docs.VectorDocSearchRequest'
                    - $ref: '#/components/schemas/Docs.TextOnlyDocSearchRequest'
                    - $ref: '#/components/schemas/Docs.HybridDocSearchRequest'
              required:
                - body
  /agents/{id}/tasks:
    get:
      operationId: TasksRoute_list
      description: List tasks (paginated)
      parameters:
        - name: id
          in: path
          required: true
          description: ID of parent
          schema:
            $ref: '#/components/schemas/Common.uuid'
        - $ref: '#/components/parameters/Common.PaginationOptions.limit'
        - $ref: '#/components/parameters/Common.PaginationOptions.offset'
        - $ref: '#/components/parameters/Common.PaginationOptions.sort_by'
        - $ref: '#/components/parameters/Common.PaginationOptions.direction'
        - $ref: '#/components/parameters/Common.PaginationOptions.metadata_filter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tasks.Task'
                required:
                  - items
    post:
      operationId: TasksRoute_create
      description: Create a new task
      parameters:
        - name: id
          in: path
          required: true
          description: ID of parent resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks.Task'
      requestBody:
        required: true
        content:
          application/yaml:
            schema:
              $ref: '#/components/schemas/Tasks.CreateTaskRequest'
          text/x-yaml:
            schema:
              $ref: '#/components/schemas/Tasks.CreateTaskRequest'
          text/yaml:
            schema:
              $ref: '#/components/schemas/Tasks.CreateTaskRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Tasks.CreateTaskRequest'
  /agents/{id}/tasks/{child_id}:
    put:
      operationId: TasksRoute_update
      description: Update an existing task (overwrite existing values)
      parameters:
        - name: id
          in: path
          required: true
          description: ID of parent resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
        - name: child_id
          in: path
          required: true
          description: ID of the resource to be updated
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks.Task'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tasks.UpdateTaskRequest'
    patch:
      operationId: TasksRoute_patch
      description: Update an existing task (merges with existing values)
      parameters:
        - name: id
          in: path
          required: true
          description: ID of parent resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
        - name: child_id
          in: path
          required: true
          description: ID of the resource to be patched
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks.Task'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tasks.PatchTaskRequest'
    delete:
      operationId: TasksRoute_delete
      description: Delete a task by its id
      parameters:
        - name: id
          in: path
          required: true
          description: ID of parent resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
        - name: child_id
          in: path
          required: true
          description: ID of the resource to be deleted
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common.ResourceDeletedResponse'
  /agents/{id}/tools:
    get:
      operationId: AgentToolsRoute_list
      description: List tools of the given agent
      parameters:
        - name: id
          in: path
          required: true
          description: ID of parent
          schema:
            $ref: '#/components/schemas/Common.uuid'
        - $ref: '#/components/parameters/Common.PaginationOptions.limit'
        - $ref: '#/components/parameters/Common.PaginationOptions.offset'
        - $ref: '#/components/parameters/Common.PaginationOptions.sort_by'
        - $ref: '#/components/parameters/Common.PaginationOptions.direction'
        - $ref: '#/components/parameters/Common.PaginationOptions.metadata_filter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tools.Tool'
                required:
                  - items
    post:
      operationId: AgentToolsRoute_create
      description: Create a new resource owned by the given parent
      parameters:
        - name: id
          in: path
          required: true
          description: ID of parent resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            text/plain:
              schema:
                type: string
                enum:
                  - Create a new tool for this agent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agents.CreateAgentRequest'
  /agents/{id}/tools/{child_id}:
    put:
      operationId: AgentToolsRoute_update
      description: Update a resource owned by the given parent using its id
      parameters:
        - name: id
          in: path
          required: true
          description: ID of parent resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
        - name: child_id
          in: path
          required: true
          description: ID of the resource to be updated
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            text/plain:
              schema:
                type: string
                enum:
                  - Update an existing tool (overwrite existing values)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tools.UpdateToolRequest'
    patch:
      operationId: AgentToolsRoute_patch
      description: Patch a resource owned by the given parent using its id
      parameters:
        - name: id
          in: path
          required: true
          description: ID of parent resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
        - name: child_id
          in: path
          required: true
          description: ID of the resource to be patched
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            text/plain:
              schema:
                type: string
                enum:
                  - Update an existing tool (merges with existing values)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tools.PatchToolRequest'
    delete:
      operationId: AgentToolsRoute_delete
      description: Delete an existing tool by id
      parameters:
        - name: id
          in: path
          required: true
          description: ID of parent resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
        - name: child_id
          in: path
          required: true
          description: ID of the resource to be deleted
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common.ResourceDeletedResponse'
  /agents/{parent_id}/tasks/{id}:
    post:
      operationId: TasksCreateOrUpdateRoute_createOrUpdate
      description: Create or update a task
      parameters:
        - name: parent_id
          in: path
          required: true
          description: ID of the agent
          schema:
            $ref: '#/components/schemas/Common.uuid'
        - $ref: '#/components/parameters/Tasks.CreateOrUpdateTaskRequest.id'
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks.Task'
      requestBody:
        required: true
        content:
          application/yaml:
            schema:
              $ref: '#/components/schemas/Tasks.CreateTaskRequest'
          text/x-yaml:
            schema:
              $ref: '#/components/schemas/Tasks.CreateTaskRequest'
          text/yaml:
            schema:
              $ref: '#/components/schemas/Tasks.CreateTaskRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Tasks.CreateTaskRequest'
  /docs/{id}:
    get:
      operationId: IndividualDocsRoute_get
      description: Get Doc by id
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Docs.Doc'
  /embed:
    post:
      operationId: EmbedRoute_embed
      description: Embed a query for search
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Docs.EmbedQueryResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  anyOf:
                    - $ref: '#/components/schemas/Docs.SingleEmbedQueryRequest'
                    - $ref: '#/components/schemas/Docs.MultipleEmbedQueryRequest'
              required:
                - body
  /executions:
    post:
      operationId: ExecutionsRoute_resumeWithTaskToken
      description: Resume an execution with a task token
      parameters:
        - name: task_token
          in: query
          required: true
          description: A Task Token is a unique identifier for a specific Task Execution.
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Executions.Execution'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Executions.TaskTokenResumeExecutionRequest'
        description: Request to resume an execution with a task token
      security:
        - {}
  /executions/{id}:
    get:
      operationId: ExecutionsRoute_get
      description: Get an Execution by id
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Executions.Execution'
    put:
      operationId: ExecutionsRoute_update
      description: Update an existing Execution
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Executions.Execution'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Executions.UpdateExecutionRequest'
  /executions/{id}/transitions:
    get:
      operationId: ExecutionTransitionsRoute_list
      description: List the Transitions of an Execution by id
      parameters:
        - name: id
          in: path
          required: true
          description: ID of parent
          schema:
            $ref: '#/components/schemas/Common.uuid'
        - $ref: '#/components/parameters/Common.PaginationOptions.limit'
        - $ref: '#/components/parameters/Common.PaginationOptions.offset'
        - $ref: '#/components/parameters/Common.PaginationOptions.sort_by'
        - $ref: '#/components/parameters/Common.PaginationOptions.direction'
        - $ref: '#/components/parameters/Common.PaginationOptions.metadata_filter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        transitions:
                          type: array
                          items:
                            $ref: '#/components/schemas/Executions.Transition'
                      required:
                        - transitions
                required:
                  - items
  /executions/{id}/transitions.stream:
    get:
      operationId: ExecutionTransitionsStreamRoute_stream
      description: Stream events emitted by the given execution
      parameters:
        - name: id
          in: path
          required: true
          description: ID of parent
          schema:
            $ref: '#/components/schemas/Common.uuid'
        - name: next_token
          in: query
          required: true
          description: Next page token
          schema:
            type: string
            nullable: true
            default: null
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            text/event-stream:
              schema:
                type: string
  /files:
    post:
      operationId: FilesRoute_create
      description: Create a new File
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Files.File'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Files.CreateFileRequest'
  /files/{id}:
    get:
      operationId: FilesRoute_get
      description: Get a File by its id
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Files.File'
  /jobs/{id}:
    get:
      operationId: JobRoute_get
      description: Get the status of an existing Job by its id
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Jobs.JobStatus'
  /responses:
    post:
      operationId: ResponsesRoute_createResponse
      description: Creates a model response. Provide text or image inputs to generate text or JSON outputs.
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Responses.Response'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Responses.CreateResponse'
  /responses/{id}:
    get:
      operationId: ResponsesRoute_getResponse
      description: Get a response by id
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the response
          schema:
            type: string
        - name: include
          in: query
          required: false
          description: Specify additional output data to include in the model response
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Responses.Includable'
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Responses.Response'
  /sessions:
    get:
      operationId: SessionsRoute_list
      description: List sessions (paginated)
      parameters:
        - $ref: '#/components/parameters/Common.PaginationOptions.limit'
        - $ref: '#/components/parameters/Common.PaginationOptions.offset'
        - $ref: '#/components/parameters/Common.PaginationOptions.sort_by'
        - $ref: '#/components/parameters/Common.PaginationOptions.direction'
        - $ref: '#/components/parameters/Common.PaginationOptions.metadata_filter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Sessions.Session'
                required:
                  - items
    post:
      operationId: SessionsRoute_create
      description: Create a new session
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sessions.Session'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sessions.CreateSessionRequest'
  /sessions/{id}:
    post:
      operationId: SessionsRoute_createOrUpdate
      description: Create or update a session
      parameters:
        - $ref: '#/components/parameters/Sessions.CreateOrUpdateSessionRequest.id'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sessions.Session'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sessions.CreateSessionRequest'
    put:
      operationId: SessionsRoute_update
      description: Update an existing session by its id (overwrites all existing values)
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sessions.Session'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sessions.UpdateSessionRequest'
    patch:
      operationId: SessionsRoute_patch
      description: Update an existing session by its id (merges with existing values)
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sessions.Session'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sessions.PatchSessionRequest'
    delete:
      operationId: SessionsRoute_delete
      description: Delete a session by its id
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common.ResourceDeletedResponse'
    get:
      operationId: SessionsRoute_get
      description: Get a session by id
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sessions.Session'
  /sessions/{id}/chat:
    post:
      operationId: ChatRoute_generate
      description: Generate a response from the model
      parameters:
        - name: id
          in: path
          required: true
          description: The session ID
          schema:
            $ref: '#/components/schemas/Common.uuid'
        - name: x-custom-api-key
          in: header
          required: false
          description: Custom API key
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/Chat.ChunkChatResponse'
                  - $ref: '#/components/schemas/Chat.MessageChatResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chat.ChatInput'
        description: Request to generate a response from the model
  /sessions/{id}/history:
    delete:
      operationId: HistoryRoute_delete
      description: Clear the history of a Session (resets the Session)
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common.ResourceDeletedResponse'
    get:
      operationId: HistoryRoute_history
      description: Get history of a Session
      parameters:
        - name: id
          in: path
          required: true
          description: ID of parent
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entries.History'
  /sessions/{id}/render:
    post:
      operationId: RenderRoute_render
      description: Render system prompt for the session
      parameters:
        - name: id
          in: path
          required: true
          description: The session ID
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat.RenderResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chat.ChatInput'
        description: Request to render the system prompt for the session
  /tasks/{id}:
    get:
      operationId: TasksGetRoute_get
      description: Get a task by id
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks.Task'
  /tasks/{id}/executions:
    post:
      operationId: TaskExecutionsRoute_create
      description: Create an execution for the given task
      parameters:
        - name: id
          in: path
          required: true
          description: ID of parent resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Executions.Execution'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Executions.CreateExecutionRequest'
    get:
      operationId: TaskExecutionsRoute_list
      description: List executions of the given task
      parameters:
        - name: id
          in: path
          required: true
          description: ID of parent
          schema:
            $ref: '#/components/schemas/Common.uuid'
        - $ref: '#/components/parameters/Common.PaginationOptions.limit'
        - $ref: '#/components/parameters/Common.PaginationOptions.offset'
        - $ref: '#/components/parameters/Common.PaginationOptions.sort_by'
        - $ref: '#/components/parameters/Common.PaginationOptions.direction'
        - $ref: '#/components/parameters/Common.PaginationOptions.metadata_filter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Executions.Execution'
                required:
                  - items
  /users:
    get:
      operationId: UsersRoute_list
      description: List users (paginated)
      parameters:
        - $ref: '#/components/parameters/Common.PaginationOptions.limit'
        - $ref: '#/components/parameters/Common.PaginationOptions.offset'
        - $ref: '#/components/parameters/Common.PaginationOptions.sort_by'
        - $ref: '#/components/parameters/Common.PaginationOptions.direction'
        - $ref: '#/components/parameters/Common.PaginationOptions.metadata_filter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Users.User'
                required:
                  - items
    post:
      operationId: UsersRoute_create
      description: Create a new user
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users.User'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users.CreateUserRequest'
  /users/{id}:
    post:
      operationId: UsersRoute_createOrUpdate
      description: Create or update a user
      parameters:
        - $ref: '#/components/parameters/Users.CreateOrUpdateUserRequest'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users.User'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users.CreateUserRequest'
    put:
      operationId: UsersRoute_update
      description: Update an existing user by id (overwrite existing values)
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users.User'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users.UpdateUserRequest'
    patch:
      operationId: UsersRoute_patch
      description: Update an existing user by id (merge with existing values)
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users.User'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users.PatchUserRequest'
    delete:
      operationId: UsersRoute_delete
      description: Delete a user by id
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common.ResourceDeletedResponse'
    get:
      operationId: UsersRoute_get
      description: Get a user by id
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users.User'
  /users/{id}/docs:
    get:
      operationId: UserDocsRoute_list
      description: List Docs owned by a User
      parameters:
        - name: id
          in: path
          required: true
          description: ID of parent
          schema:
            $ref: '#/components/schemas/Common.uuid'
        - $ref: '#/components/parameters/Common.PaginationOptions.limit'
        - $ref: '#/components/parameters/Common.PaginationOptions.offset'
        - $ref: '#/components/parameters/Common.PaginationOptions.sort_by'
        - $ref: '#/components/parameters/Common.PaginationOptions.direction'
        - $ref: '#/components/parameters/Common.PaginationOptions.metadata_filter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Docs.Doc'
                required:
                  - items
    post:
      operationId: UserDocsRoute_create
      description: Create a Doc for this User
      parameters:
        - name: id
          in: path
          required: true
          description: ID of parent resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Docs.Doc'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Docs.CreateDocRequest'
    delete:
      operationId: UserDocsRoute_deleteBulk
      description: Bulk delete Docs owned by a User
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the parent
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Common.ResourceDeletedResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Docs.BulkDeleteDocsRequest'
  /users/{id}/docs/{child_id}:
    delete:
      operationId: UserDocsRoute_delete
      description: Delete a Doc for this User
      parameters:
        - name: id
          in: path
          required: true
          description: ID of parent resource
          schema:
            $ref: '#/components/schemas/Common.uuid'
        - name: child_id
          in: path
          required: true
          description: ID of the resource to be deleted
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common.ResourceDeletedResponse'
  /users/{id}/search:
    post:
      operationId: UserDocsSearchRoute_search
      description: Search Docs owned by a User
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the parent
          schema:
            $ref: '#/components/schemas/Common.uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Docs.DocSearchResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  anyOf:
                    - $ref: '#/components/schemas/Docs.VectorDocSearchRequest'
                    - $ref: '#/components/schemas/Docs.TextOnlyDocSearchRequest'
                    - $ref: '#/components/schemas/Docs.HybridDocSearchRequest'
              required:
                - body
security:
  - ApiKeyAuth: []
  - ApiKeyAuth_: []
components:
  parameters:
    Agents.CreateOrUpdateAgentRequest.id:
      name: id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/Common.uuid'
    Common.PaginationOptions.direction:
      name: direction
      in: query
      required: true
      description: Sort direction
      schema:
        type: string
        enum:
          - asc
          - desc
        default: asc
      explode: false
    Common.PaginationOptions.limit:
      name: limit
      in: query
      required: true
      description: Limit the number of items returned
      schema:
        $ref: '#/components/schemas/Common.limit'
        default: 100
      explode: false
    Common.PaginationOptions.metadata_filter:
      name: metadata_filter
      in: query
      required: true
      description: Object to filter results by metadata
      schema:
        type: object
        additionalProperties: {}
        default: {}
      explode: false
    Common.PaginationOptions.offset:
      name: offset
      in: query
      required: true
      description: Offset the items returned
      schema:
        $ref: '#/components/schemas/Common.offset'
        default: 0
      explode: false
    Common.PaginationOptions.sort_by:
      name: sort_by
      in: query
      required: true
      description: Sort by a field
      schema:
        type: string
        enum:
          - created_at
          - updated_at
        default: created_at
      explode: false
    Sessions.CreateOrUpdateSessionRequest.id:
      name: id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/Common.uuid'
    Tasks.CreateOrUpdateTaskRequest.id:
      name: id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/Common.uuid'
    Users.CreateOrUpdateUserRequest:
      name: id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/Common.uuid'
  schemas:
    Agents.Agent:
      type: object
      required:
        - id
        - created_at
        - updated_at
        - name
        - about
        - model
        - instructions
        - default_system_template
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          readOnly: true
        metadata:
          type: object
          additionalProperties: {}
        created_at:
          type: string
          format: date-time
          description: When this resource was created as UTC date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: When this resource was updated as UTC date-time
          readOnly: true
        name:
          allOf:
            - $ref: '#/components/schemas/Common.displayName'
          description: Name of the agent
        canonical_name:
          allOf:
            - $ref: '#/components/schemas/Common.canonicalName'
          description: Canonical name of the agent
        about:
          type: string
          description: About the agent
          default: ''
        model:
          type: string
          description: Model name to use (gpt-4-turbo, gemini-nano etc)
          default: ''
        instructions:
          anyOf:
            - type: string
            - type: array
              items:
                type: string
          description: Instructions for the agent
          default: []
        default_settings:
          type: object
          additionalProperties: {}
          description: Default settings for all sessions created by this agent
        default_system_template:
          type: string
          description: Default system template for all sessions created by this agent
          default: |-
            {%- if agent.name -%}
            You are {{agent.name}}.{{" "}}
            {%- endif -%}

            {%- if agent.about -%}
            About you: {{agent.about}}.{{" "}}
            {%- endif -%}

            {%- if user -%}
            You are talking to a user
              {%- if user.name -%}{{" "}} and their name is {{user.name}}
                {%- if user.about -%}. About the user: {{user.about}}.{%- else -%}.{%- endif -%}
              {%- endif -%}
            {%- endif -%}

            {{NEWLINE}}

            {%- if session.situation -%}
            Situation: {{session.situation}}
            {%- endif -%}

            {{NEWLINE+NEWLINE}}

            {%- if agent.instructions -%}
            Instructions:{{NEWLINE}}
              {%- if agent.instructions is string -%}
                {{agent.instructions}}{{NEWLINE}}
              {%- else -%}
                {%- for instruction in agent.instructions -%}
                  - {{instruction}}{{NEWLINE}}
                {%- endfor -%}
              {%- endif -%}
              {{NEWLINE}}
            {%- endif -%}

            {%- if docs -%}
            Relevant documents:{{NEWLINE}}
              {%- for doc in docs -%}
                {{doc.title}}{{NEWLINE}}
                {%- if doc.content is string -%}
                  {{doc.content}}{{NEWLINE}}
                {%- else -%}
                  {%- for snippet in doc.content -%}
                    {{snippet}}{{NEWLINE}}
                  {%- endfor -%}
                {%- endif -%}
                {{"---"}}
              {%- endfor -%}
            {%- endif -%}
    Agents.CreateAgentRequest:
      type: object
      required:
        - name
        - about
        - model
        - instructions
        - default_system_template
      properties:
        metadata:
          type: object
          additionalProperties: {}
        name:
          allOf:
            - $ref: '#/components/schemas/Common.displayName'
          description: Name of the agent
        canonical_name:
          allOf:
            - $ref: '#/components/schemas/Common.canonicalName'
          description: Canonical name of the agent
        about:
          type: string
          description: About the agent
          default: ''
        model:
          type: string
          description: Model name to use (gpt-4-turbo, gemini-nano etc)
          default: ''
        instructions:
          anyOf:
            - type: string
            - type: array
              items:
                type: string
          description: Instructions for the agent
          default: []
        default_settings:
          type: object
          additionalProperties: {}
          description: Default settings for all sessions created by this agent
        default_system_template:
          type: string
          description: Default system template for all sessions created by this agent
          default: |-
            {%- if agent.name -%}
            You are {{agent.name}}.{{" "}}
            {%- endif -%}

            {%- if agent.about -%}
            About you: {{agent.about}}.{{" "}}
            {%- endif -%}

            {%- if user -%}
            You are talking to a user
              {%- if user.name -%}{{" "}} and their name is {{user.name}}
                {%- if user.about -%}. About the user: {{user.about}}.{%- else -%}.{%- endif -%}
              {%- endif -%}
            {%- endif -%}

            {{NEWLINE}}

            {%- if session.situation -%}
            Situation: {{session.situation}}
            {%- endif -%}

            {{NEWLINE+NEWLINE}}

            {%- if agent.instructions -%}
            Instructions:{{NEWLINE}}
              {%- if agent.instructions is string -%}
                {{agent.instructions}}{{NEWLINE}}
              {%- else -%}
                {%- for instruction in agent.instructions -%}
                  - {{instruction}}{{NEWLINE}}
                {%- endfor -%}
              {%- endif -%}
              {{NEWLINE}}
            {%- endif -%}

            {%- if docs -%}
            Relevant documents:{{NEWLINE}}
              {%- for doc in docs -%}
                {{doc.title}}{{NEWLINE}}
                {%- if doc.content is string -%}
                  {{doc.content}}{{NEWLINE}}
                {%- else -%}
                  {%- for snippet in doc.content -%}
                    {{snippet}}{{NEWLINE}}
                  {%- endfor -%}
                {%- endif -%}
                {{"---"}}
              {%- endfor -%}
            {%- endif -%}
      description: Payload for creating a agent (and associated documents)
    Agents.CreateOrUpdateAgentRequest:
      type: object
      required:
        - id
        - name
        - about
        - model
        - instructions
        - default_system_template
      properties:
        id:
          $ref: '#/components/schemas/Common.uuid'
        metadata:
          type: object
          additionalProperties: {}
        name:
          allOf:
            - $ref: '#/components/schemas/Common.displayName'
          description: Name of the agent
        canonical_name:
          allOf:
            - $ref: '#/components/schemas/Common.canonicalName'
          description: Canonical name of the agent
        about:
          type: string
          description: About the agent
          default: ''
        model:
          type: string
          description: Model name to use (gpt-4-turbo, gemini-nano etc)
          default: ''
        instructions:
          anyOf:
            - type: string
            - type: array
              items:
                type: string
          description: Instructions for the agent
          default: []
        default_settings:
          type: object
          additionalProperties: {}
          description: Default settings for all sessions created by this agent
        default_system_template:
          type: string
          description: Default system template for all sessions created by this agent
          default: |-
            {%- if agent.name -%}
            You are {{agent.name}}.{{" "}}
            {%- endif -%}

            {%- if agent.about -%}
            About you: {{agent.about}}.{{" "}}
            {%- endif -%}

            {%- if user -%}
            You are talking to a user
              {%- if user.name -%}{{" "}} and their name is {{user.name}}
                {%- if user.about -%}. About the user: {{user.about}}.{%- else -%}.{%- endif -%}
              {%- endif -%}
            {%- endif -%}

            {{NEWLINE}}

            {%- if session.situation -%}
            Situation: {{session.situation}}
            {%- endif -%}

            {{NEWLINE+NEWLINE}}

            {%- if agent.instructions -%}
            Instructions:{{NEWLINE}}
              {%- if agent.instructions is string -%}
                {{agent.instructions}}{{NEWLINE}}
              {%- else -%}
                {%- for instruction in agent.instructions -%}
                  - {{instruction}}{{NEWLINE}}
                {%- endfor -%}
              {%- endif -%}
              {{NEWLINE}}
            {%- endif -%}

            {%- if docs -%}
            Relevant documents:{{NEWLINE}}
              {%- for doc in docs -%}
                {{doc.title}}{{NEWLINE}}
                {%- if doc.content is string -%}
                  {{doc.content}}{{NEWLINE}}
                {%- else -%}
                  {%- for snippet in doc.content -%}
                    {{snippet}}{{NEWLINE}}
                  {%- endfor -%}
                {%- endif -%}
                {{"---"}}
              {%- endfor -%}
            {%- endif -%}
      allOf:
        - $ref: '#/components/schemas/Agents.CreateAgentRequest'
    Agents.PatchAgentRequest:
      type: object
      properties:
        metadata:
          type: object
          additionalProperties: {}
        name:
          allOf:
            - $ref: '#/components/schemas/Common.displayName'
          description: Name of the agent
        canonical_name:
          allOf:
            - $ref: '#/components/schemas/Common.canonicalName'
          description: Canonical name of the agent
        about:
          type: string
          description: About the agent
          default: ''
        model:
          type: string
          description: Model name to use (gpt-4-turbo, gemini-nano etc)
          default: ''
        instructions:
          anyOf:
            - type: string
            - type: array
              items:
                type: string
          description: Instructions for the agent
          default: []
        default_settings:
          type: object
          additionalProperties: {}
          description: Default settings for all sessions created by this agent
        default_system_template:
          type: string
          description: Default system template for all sessions created by this agent
          default: |-
            {%- if agent.name -%}
            You are {{agent.name}}.{{" "}}
            {%- endif -%}

            {%- if agent.about -%}
            About you: {{agent.about}}.{{" "}}
            {%- endif -%}

            {%- if user -%}
            You are talking to a user
              {%- if user.name -%}{{" "}} and their name is {{user.name}}
                {%- if user.about -%}. About the user: {{user.about}}.{%- else -%}.{%- endif -%}
              {%- endif -%}
            {%- endif -%}

            {{NEWLINE}}

            {%- if session.situation -%}
            Situation: {{session.situation}}
            {%- endif -%}

            {{NEWLINE+NEWLINE}}

            {%- if agent.instructions -%}
            Instructions:{{NEWLINE}}
              {%- if agent.instructions is string -%}
                {{agent.instructions}}{{NEWLINE}}
              {%- else -%}
                {%- for instruction in agent.instructions -%}
                  - {{instruction}}{{NEWLINE}}
                {%- endfor -%}
              {%- endif -%}
              {{NEWLINE}}
            {%- endif -%}

            {%- if docs -%}
            Relevant documents:{{NEWLINE}}
              {%- for doc in docs -%}
                {{doc.title}}{{NEWLINE}}
                {%- if doc.content is string -%}
                  {{doc.content}}{{NEWLINE}}
                {%- else -%}
                  {%- for snippet in doc.content -%}
                    {{snippet}}{{NEWLINE}}
                  {%- endfor -%}
                {%- endif -%}
                {{"---"}}
              {%- endfor -%}
            {%- endif -%}
      description: Payload for patching a agent
    Agents.UpdateAgentRequest:
      type: object
      required:
        - name
        - about
        - model
        - instructions
        - default_system_template
      properties:
        metadata:
          type: object
          additionalProperties: {}
        name:
          allOf:
            - $ref: '#/components/schemas/Common.displayName'
          description: Name of the agent
        canonical_name:
          allOf:
            - $ref: '#/components/schemas/Common.canonicalName'
          description: Canonical name of the agent
        about:
          type: string
          description: About the agent
          default: ''
        model:
          type: string
          description: Model name to use (gpt-4-turbo, gemini-nano etc)
          default: ''
        instructions:
          anyOf:
            - type: string
            - type: array
              items:
                type: string
          description: Instructions for the agent
          default: []
        default_settings:
          type: object
          additionalProperties: {}
          description: Default settings for all sessions created by this agent
        default_system_template:
          type: string
          description: Default system template for all sessions created by this agent
          default: |-
            {%- if agent.name -%}
            You are {{agent.name}}.{{" "}}
            {%- endif -%}

            {%- if agent.about -%}
            About you: {{agent.about}}.{{" "}}
            {%- endif -%}

            {%- if user -%}
            You are talking to a user
              {%- if user.name -%}{{" "}} and their name is {{user.name}}
                {%- if user.about -%}. About the user: {{user.about}}.{%- else -%}.{%- endif -%}
              {%- endif -%}
            {%- endif -%}

            {{NEWLINE}}

            {%- if session.situation -%}
            Situation: {{session.situation}}
            {%- endif -%}

            {{NEWLINE+NEWLINE}}

            {%- if agent.instructions -%}
            Instructions:{{NEWLINE}}
              {%- if agent.instructions is string -%}
                {{agent.instructions}}{{NEWLINE}}
              {%- else -%}
                {%- for instruction in agent.instructions -%}
                  - {{instruction}}{{NEWLINE}}
                {%- endfor -%}
              {%- endif -%}
              {{NEWLINE}}
            {%- endif -%}

            {%- if docs -%}
            Relevant documents:{{NEWLINE}}
              {%- for doc in docs -%}
                {{doc.title}}{{NEWLINE}}
                {%- if doc.content is string -%}
                  {{doc.content}}{{NEWLINE}}
                {%- else -%}
                  {%- for snippet in doc.content -%}
                    {{snippet}}{{NEWLINE}}
                  {%- endfor -%}
                {%- endif -%}
                {{"---"}}
              {%- endfor -%}
            {%- endif -%}
      description: Payload for updating a agent
    Chat.BaseChatOutput:
      type: object
      required:
        - index
        - finish_reason
      properties:
        index:
          type: integer
          format: uint32
        finish_reason:
          allOf:
            - $ref: '#/components/schemas/Chat.FinishReason'
          description: The reason the model stopped generating tokens
          default: stop
        logprobs:
          allOf:
            - $ref: '#/components/schemas/Chat.LogProbResponse'
          description: The log probabilities of tokens
        tool_calls:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Tools.ChosenFunctionCall'
              - $ref: '#/components/schemas/Tools.ChosenSystemCall'
              - $ref: '#/components/schemas/Tools.ChosenComputer20241022'
              - $ref: '#/components/schemas/Tools.ChosenTextEditor20241022'
              - $ref: '#/components/schemas/Tools.ChosenBash20241022'
          description: The tool calls generated by the model
    Chat.BaseChatResponse:
      type: object
      required:
        - jobs
        - docs
        - created_at
        - id
      properties:
        usage:
          allOf:
            - $ref: '#/components/schemas/Chat.CompletionUsage'
          description: Usage statistics for the completion request
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/Common.uuid'
          description: Background job IDs that may have been spawned from this interaction.
          default: []
          readOnly: true
        docs:
          type: array
          items:
            $ref: '#/components/schemas/Docs.DocReference'
          description: Documents referenced for this request (for citation purposes).
          default: []
          readOnly: true
        created_at:
          type: string
          format: date-time
          description: When this resource was created as UTC date-time
          readOnly: true
        id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          readOnly: true
    Chat.BaseTokenLogProb:
      type: object
      required:
        - token
        - logprob
      properties:
        token:
          type: string
        logprob:
          type: number
          format: float
          description: The log probability of the token
        bytes:
          type: array
          items:
            type: integer
            format: uint16
    Chat.ChatInput:
      type: object
      required:
        - remember
        - recall
        - save
        - stream
        - stop
      properties:
        remember:
          type: boolean
          description: 'DISABLED: Whether this interaction should form new memories or not (will be enabled in a future release)'
          default: false
          readOnly: true
        recall:
          type: boolean
          description: Whether previous memories and docs should be recalled or not
          default: true
        save:
          type: boolean
          description: Whether this interaction should be stored in the session history or not
          default: true
        model:
          allOf:
            - $ref: '#/components/schemas/Common.identifierSafeUnicode'
          description: Identifier of the model to be used
        stream:
          type: boolean
          description: Indicates if the server should stream the response as it's generated
          default: false
        stop:
          type: array
          items:
            type: string
          maxItems: 4
          description: Up to 4 sequences where the API will stop generating further tokens.
          default: []
        seed:
          type: integer
          format: int16
          minimum: -1
          maximum: 1000
          description: If specified, the system will make a best effort to sample deterministically for that particular seed value
        max_tokens:
          type: integer
          format: uint32
          minimum: 1
          description: The maximum number of tokens to generate in the chat completion
        logit_bias:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Common.logit_bias'
          description: Modify the likelihood of specified tokens appearing in the completion
        response_format:
          anyOf:
            - $ref: '#/components/schemas/Chat.SimpleCompletionResponseFormat'
            - $ref: '#/components/schemas/Chat.SchemaCompletionResponseFormat'
          description: Response format (set to `json_object` to restrict output to JSON)
        agent:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: Agent ID of the agent to use for this interaction. (Only applicable for multi-agent sessions)
        repetition_penalty:
          type: number
          format: float
          minimum: 0
          maximum: 2
          description: Number between 0 and 2.0. 1.0 is neutral and values larger than that penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.
        length_penalty:
          type: number
          format: float
          minimum: 0
          maximum: 2
          description: Number between 0 and 2.0. 1.0 is neutral and values larger than that penalize number of tokens generated.
        min_p:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Minimum probability compared to leading token to be considered
        frequency_penalty:
          type: number
          format: float
          minimum: -2
          maximum: 2
          description: Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.
        presence_penalty:
          type: number
          format: float
          minimum: -2
          maximum: 2
          description: Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.
        temperature:
          type: number
          format: float
          minimum: 0
          maximum: 5
          description: What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.
        top_p:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Defaults to 1 An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.  We generally recommend altering this or temperature but not both.
      allOf:
        - $ref: '#/components/schemas/Chat.ChatInputData'
    Chat.ChatInputData:
      type: object
      required:
        - messages
        - tools
      properties:
        messages:
          type: array
          items:
            type: object
            required:
              - role
              - content
            properties:
              role:
                allOf:
                  - $ref: '#/components/schemas/Entries.ChatMLRole'
                description: The role of the message
              tool_call_id:
                type: string
              content:
                anyOf:
                  - type: string
                  - type: array
                    items:
                      type: string
                  - type: array
                    items:
                      anyOf:
                        - type: object
                          required:
                            - text
                            - type
                          properties:
                            text:
                              type: string
                            type:
                              type: string
                              enum:
                                - text
                              description: The type (fixed to 'text')
                              default: text
                        - type: object
                          required:
                            - image_url
                            - type
                          properties:
                            image_url:
                              type: object
                              required:
                                - url
                                - detail
                              properties:
                                url:
                                  type: string
                                  description: Image URL or base64 data url (e.g. `data:image/jpeg;base64,<the base64 encoded image>`)
                                detail:
                                  allOf:
                                    - $ref: '#/components/schemas/Entries.ImageDetail'
                                  description: The detail level of the image
                                  default: auto
                              description: The image URL
                            type:
                              type: string
                              enum:
                                - image_url
                              description: The type (fixed to 'image_url')
                              default: image_url
                        - type: object
                          required:
                            - tool_use_id
                            - type
                            - content
                          properties:
                            tool_use_id:
                              type: string
                            type:
                              type: string
                              enum:
                                - tool_result
                              default: tool_result
                            content:
                              anyOf:
                                - type: array
                                  items:
                                    type: object
                                    required:
                                      - text
                                      - type
                                    properties:
                                      text:
                                        type: string
                                      type:
                                        type: string
                                        enum:
                                          - text
                                        description: The type (fixed to 'text')
                                        default: text
                                - type: array
                                  items:
                                    type: object
                                    required:
                                      - type
                                      - source
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - image
                                        default: image
                                      source:
                                        type: object
                                        required:
                                          - type
                                          - media_type
                                          - data
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - base64
                                            default: base64
                                          media_type:
                                            type: string
                                          data:
                                            type: string
                          description: Anthropic image content part
                nullable: true
                description: The content parts of the message
              name:
                type: string
                description: Name
              continue:
                type: boolean
                description: Whether to continue this message or return a new one
              tool_calls:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/Tools.ChosenFunctionCall'
                    - $ref: '#/components/schemas/Tools.ChosenSystemCall'
                    - $ref: '#/components/schemas/Tools.ChosenComputer20241022'
                    - $ref: '#/components/schemas/Tools.ChosenTextEditor20241022'
                    - $ref: '#/components/schemas/Tools.ChosenBash20241022'
                nullable: true
                description: Tool calls generated by the model.
                default: []
          minItems: 1
          description: A list of new input messages comprising the conversation so far.
        tools:
          type: array
          items:
            $ref: '#/components/schemas/Tools.CreateToolRequest'
          nullable: true
          description: (Advanced) List of tools that are provided in addition to agent's default set of tools.
          default: null
        tool_choice:
          anyOf:
            - type: string
              enum:
                - auto
                - none
            - $ref: '#/components/schemas/Tools.NamedToolChoice'
          description: Can be one of existing tools given to the agent earlier or the ones provided in this request.
    Chat.ChatOutputChunk:
      type: object
      required:
        - delta
      properties:
        delta:
          type: object
          required:
            - role
            - content
          properties:
            role:
              allOf:
                - $ref: '#/components/schemas/Entries.ChatMLRole'
              description: The role of the message
            tool_call_id:
              type: string
            content:
              anyOf:
                - type: string
                - type: array
                  items:
                    type: string
                - type: array
                  items:
                    anyOf:
                      - type: object
                        required:
                          - text
                          - type
                        properties:
                          text:
                            type: string
                          type:
                            type: string
                            enum:
                              - text
                            description: The type (fixed to 'text')
                            default: text
                      - type: object
                        required:
                          - image_url
                          - type
                        properties:
                          image_url:
                            type: object
                            required:
                              - url
                              - detail
                            properties:
                              url:
                                type: string
                                description: Image URL or base64 data url (e.g. `data:image/jpeg;base64,<the base64 encoded image>`)
                              detail:
                                allOf:
                                  - $ref: '#/components/schemas/Entries.ImageDetail'
                                description: The detail level of the image
                                default: auto
                            description: The image URL
                          type:
                            type: string
                            enum:
                              - image_url
                            description: The type (fixed to 'image_url')
                            default: image_url
                      - type: object
                        required:
                          - tool_use_id
                          - type
                          - content
                        properties:
                          tool_use_id:
                            type: string
                          type:
                            type: string
                            enum:
                              - tool_result
                            default: tool_result
                          content:
                            anyOf:
                              - type: array
                                items:
                                  type: object
                                  required:
                                    - text
                                    - type
                                  properties:
                                    text:
                                      type: string
                                    type:
                                      type: string
                                      enum:
                                        - text
                                      description: The type (fixed to 'text')
                                      default: text
                              - type: array
                                items:
                                  type: object
                                  required:
                                    - type
                                    - source
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - image
                                      default: image
                                    source:
                                      type: object
                                      required:
                                        - type
                                        - media_type
                                        - data
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - base64
                                          default: base64
                                        media_type:
                                          type: string
                                        data:
                                          type: string
                        description: Anthropic image content part
              nullable: true
              description: The content parts of the message
            name:
              type: string
              description: Name
            continue:
              type: boolean
              description: Whether to continue this message or return a new one
            tool_calls:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/Tools.ChosenFunctionCall'
                  - $ref: '#/components/schemas/Tools.ChosenSystemCall'
                  - $ref: '#/components/schemas/Tools.ChosenComputer20241022'
                  - $ref: '#/components/schemas/Tools.ChosenTextEditor20241022'
                  - $ref: '#/components/schemas/Tools.ChosenBash20241022'
              nullable: true
              description: Tool calls generated by the model.
              default: []
          description: The message generated by the model
      allOf:
        - $ref: '#/components/schemas/Chat.BaseChatOutput'
      description: Streaming chat completion output
    Chat.ChunkChatResponse:
      type: object
      required:
        - choices
      properties:
        choices:
          type: array
          items:
            $ref: '#/components/schemas/Chat.ChatOutputChunk'
          description: The deltas generated by the model
      allOf:
        - $ref: '#/components/schemas/Chat.BaseChatResponse'
    Chat.CompletionUsage:
      type: object
      properties:
        completion_tokens:
          type: integer
          format: uint32
          description: Number of tokens in the generated completion
          readOnly: true
        prompt_tokens:
          type: integer
          format: uint32
          description: Number of tokens in the prompt
          readOnly: true
        total_tokens:
          type: integer
          format: uint32
          description: Total number of tokens used in the request (prompt + completion)
          readOnly: true
      description: Usage statistics for the completion request
    Chat.FinishReason:
      type: string
      enum:
        - stop
        - length
        - content_filter
        - tool_calls
      description: |-
        The reason the model stopped generating tokens. This will be `stop`
        if the model hit a natural stop point or a provided stop sequence,
        `length` if the maximum number of tokens specified in the request
        was reached, `content_filter` if content was omitted due to a flag
        from our content filters, `tool_calls` if the model called a tool.
    Chat.LogProbResponse:
      type: object
      required:
        - content
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Chat.TokenLogProb'
          nullable: true
          description: The log probabilities of the tokens
    Chat.MessageChatResponse:
      type: object
      required:
        - choices
      properties:
        choices:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Chat.SingleChatOutput'
              - $ref: '#/components/schemas/Chat.MultipleChatOutput'
          description: The deltas generated by the model
      allOf:
        - $ref: '#/components/schemas/Chat.BaseChatResponse'
    Chat.MultipleChatOutput:
      type: object
      required:
        - messages
      properties:
        messages:
          type: array
          items:
            type: object
            required:
              - role
              - content
            properties:
              role:
                allOf:
                  - $ref: '#/components/schemas/Entries.ChatMLRole'
                description: The role of the message
              tool_call_id:
                type: string
              content:
                anyOf:
                  - type: string
                  - type: array
                    items:
                      type: string
                  - type: array
                    items:
                      anyOf:
                        - type: object
                          required:
                            - text
                            - type
                          properties:
                            text:
                              type: string
                            type:
                              type: string
                              enum:
                                - text
                              description: The type (fixed to 'text')
                              default: text
                        - type: object
                          required:
                            - image_url
                            - type
                          properties:
                            image_url:
                              type: object
                              required:
                                - url
                                - detail
                              properties:
                                url:
                                  type: string
                                  description: Image URL or base64 data url (e.g. `data:image/jpeg;base64,<the base64 encoded image>`)
                                detail:
                                  allOf:
                                    - $ref: '#/components/schemas/Entries.ImageDetail'
                                  description: The detail level of the image
                                  default: auto
                              description: The image URL
                            type:
                              type: string
                              enum:
                                - image_url
                              description: The type (fixed to 'image_url')
                              default: image_url
                        - type: object
                          required:
                            - tool_use_id
                            - type
                            - content
                          properties:
                            tool_use_id:
                              type: string
                            type:
                              type: string
                              enum:
                                - tool_result
                              default: tool_result
                            content:
                              anyOf:
                                - type: array
                                  items:
                                    type: object
                                    required:
                                      - text
                                      - type
                                    properties:
                                      text:
                                        type: string
                                      type:
                                        type: string
                                        enum:
                                          - text
                                        description: The type (fixed to 'text')
                                        default: text
                                - type: array
                                  items:
                                    type: object
                                    required:
                                      - type
                                      - source
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - image
                                        default: image
                                      source:
                                        type: object
                                        required:
                                          - type
                                          - media_type
                                          - data
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - base64
                                            default: base64
                                          media_type:
                                            type: string
                                          data:
                                            type: string
                          description: Anthropic image content part
                nullable: true
                description: The content parts of the message
              name:
                type: string
                description: Name
              tool_calls:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/Tools.ChosenFunctionCall'
                    - $ref: '#/components/schemas/Tools.ChosenSystemCall'
                    - $ref: '#/components/schemas/Tools.ChosenComputer20241022'
                    - $ref: '#/components/schemas/Tools.ChosenTextEditor20241022'
                    - $ref: '#/components/schemas/Tools.ChosenBash20241022'
                nullable: true
                description: Tool calls generated by the model.
                default: []
              created_at:
                type: string
                format: date-time
                description: When this resource was created as UTC date-time
                readOnly: true
              id:
                allOf:
                  - $ref: '#/components/schemas/Common.uuid'
                readOnly: true
          minItems: 1
          readOnly: true
      allOf:
        - $ref: '#/components/schemas/Chat.BaseChatOutput'
      description: The output returned by the model. Note that, depending on the model provider, they might return more than one message.
    Chat.RenderResponse:
      type: object
      required:
        - docs
      properties:
        docs:
          type: array
          items:
            $ref: '#/components/schemas/Docs.DocReference'
          description: Documents referenced for this request (for citation purposes).
          default: []
          readOnly: true
      allOf:
        - $ref: '#/components/schemas/Chat.ChatInputData'
    Chat.SchemaCompletionResponseFormat:
      type: object
      required:
        - type
        - json_schema
      properties:
        type:
          type: string
          enum:
            - json_schema
          description: The format of the response
          default: json_schema
        json_schema:
          type: object
          additionalProperties: {}
          description: The schema of the response
    Chat.SimpleCompletionResponseFormat:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - text
            - json_object
          description: The format of the response
          default: text
    Chat.SingleChatOutput:
      type: object
      required:
        - message
      properties:
        message:
          type: object
          required:
            - role
            - content
          properties:
            role:
              allOf:
                - $ref: '#/components/schemas/Entries.ChatMLRole'
              description: The role of the message
            tool_call_id:
              type: string
            content:
              anyOf:
                - type: string
                - type: array
                  items:
                    type: string
                - type: array
                  items:
                    anyOf:
                      - type: object
                        required:
                          - text
                          - type
                        properties:
                          text:
                            type: string
                          type:
                            type: string
                            enum:
                              - text
                            description: The type (fixed to 'text')
                            default: text
                      - type: object
                        required:
                          - image_url
                          - type
                        properties:
                          image_url:
                            type: object
                            required:
                              - url
                              - detail
                            properties:
                              url:
                                type: string
                                description: Image URL or base64 data url (e.g. `data:image/jpeg;base64,<the base64 encoded image>`)
                              detail:
                                allOf:
                                  - $ref: '#/components/schemas/Entries.ImageDetail'
                                description: The detail level of the image
                                default: auto
                            description: The image URL
                          type:
                            type: string
                            enum:
                              - image_url
                            description: The type (fixed to 'image_url')
                            default: image_url
                      - type: object
                        required:
                          - tool_use_id
                          - type
                          - content
                        properties:
                          tool_use_id:
                            type: string
                          type:
                            type: string
                            enum:
                              - tool_result
                            default: tool_result
                          content:
                            anyOf:
                              - type: array
                                items:
                                  type: object
                                  required:
                                    - text
                                    - type
                                  properties:
                                    text:
                                      type: string
                                    type:
                                      type: string
                                      enum:
                                        - text
                                      description: The type (fixed to 'text')
                                      default: text
                              - type: array
                                items:
                                  type: object
                                  required:
                                    - type
                                    - source
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - image
                                      default: image
                                    source:
                                      type: object
                                      required:
                                        - type
                                        - media_type
                                        - data
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - base64
                                          default: base64
                                        media_type:
                                          type: string
                                        data:
                                          type: string
                        description: Anthropic image content part
              nullable: true
              description: The content parts of the message
            name:
              type: string
              description: Name
            tool_calls:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/Tools.ChosenFunctionCall'
                  - $ref: '#/components/schemas/Tools.ChosenSystemCall'
                  - $ref: '#/components/schemas/Tools.ChosenComputer20241022'
                  - $ref: '#/components/schemas/Tools.ChosenTextEditor20241022'
                  - $ref: '#/components/schemas/Tools.ChosenBash20241022'
              nullable: true
              description: Tool calls generated by the model.
              default: []
            created_at:
              type: string
              format: date-time
              description: When this resource was created as UTC date-time
              readOnly: true
            id:
              allOf:
                - $ref: '#/components/schemas/Common.uuid'
              readOnly: true
      allOf:
        - $ref: '#/components/schemas/Chat.BaseChatOutput'
      description: The output returned by the model. Note that, depending on the model provider, they might return more than one message.
    Chat.TokenLogProb:
      type: object
      required:
        - top_logprobs
      properties:
        top_logprobs:
          type: array
          items:
            $ref: '#/components/schemas/Chat.BaseTokenLogProb'
          minItems: 1
          description: The log probabilities of the tokens
          readOnly: true
      allOf:
        - $ref: '#/components/schemas/Chat.BaseTokenLogProb'
    Common.JinjaTemplate:
      type: string
      description: A valid jinja template.
    Common.PyExpression:
      type: string
      description: A simple python expression compatible with SimpleEval.
    Common.ResourceDeletedResponse:
      type: object
      required:
        - id
        - deleted_at
        - jobs
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: ID of deleted resource
        deleted_at:
          type: string
          format: date-time
          description: When this resource was deleted as UTC date-time
          readOnly: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/Common.uuid'
          description: IDs (if any) of jobs created as part of this request
          default: []
          readOnly: true
    Common.canonicalName:
      type: string
      minLength: 1
      maxLength: 255
      pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
      description: |-
        For canonical names (machine-friendly identifiers)
        Must start with a letter and can only contain letters, numbers, and underscores
    Common.displayName:
      type: string
      minLength: 1
      maxLength: 255
      description: |-
        For display names
        Must be between 1 and 255 characters
    Common.identifierSafeUnicode:
      type: string
      maxLength: 120
      pattern: ^[\p{L}\p{Nl}\p{Pattern_Syntax}\p{Pattern_White_Space}]+[\p{ID_Start}\p{Mn}\p{Mc}\p{Nd}\p{Pc}\p{Pattern_Syntax}\p{Pattern_White_Space}]*$
      description: |-
        For Unicode character safety
        See: https://unicode.org/reports/tr31/
        See: https://www.unicode.org/reports/tr39/#Identifier_Characters
    Common.limit:
      type: integer
      format: uint16
      minimum: 1
      description: Limit the number of results
      maximum: 1000
      exclusiveMaximum: true
    Common.logit_bias:
      type: number
      format: float
      minimum: -100
      maximum: 100
    Common.mimeType:
      type: string
      maxLength: 120
      pattern: ^(application|audio|font|example|image|message|model|multipart|text|video|x-(?:[0-9A-Za-z!#$%&'*+.^_`|~-]+))\/([0-9A-Za-z!#$%&'*+.^_`|~-]+)$
      description: Valid mime types
    Common.offset:
      type: integer
      format: uint32
      minimum: 0
      description: Offset to apply to the results
    Common.stepLabel:
      type: string
      maxLength: 120
      pattern: ^[^0-9]|^[0-9]+[^0-9].*$
      description: A valid step label
    Common.uuid:
      type: string
      format: uuid
    Common.validPythonIdentifier:
      type: string
      maxLength: 40
      pattern: ^[^\W0-9]\w*$
      description: Valid python identifier names
    Docs.BaseDocSearchRequest:
      type: object
      required:
        - limit
        - lang
        - metadata_filter
      properties:
        limit:
          type: integer
          format: uint16
          minimum: 1
          maximum: 50
          description: The limit of documents to return
          default: 10
        lang:
          type: string
          description: The language to be used for text-only search. Support for other languages coming soon.
          default: en-US
        metadata_filter:
          type: object
          additionalProperties: {}
          description: Metadata filter to apply to the search
          default: {}
    Docs.BulkDeleteDocsRequest:
      type: object
      required:
        - metadata_filter
        - delete_all
      properties:
        metadata_filter:
          type: object
          additionalProperties: {}
          description: Metadata filter to apply to the search
          default: {}
        delete_all:
          type: boolean
          description: Delete all docs
          default: false
    Docs.CreateDocRequest:
      type: object
      required:
        - title
        - content
        - embed_instruction
      properties:
        metadata:
          type: object
          additionalProperties: {}
        title:
          type: string
          maxLength: 800
          description: Title describing what this document contains
        content:
          anyOf:
            - type: string
            - type: array
              items:
                type: string
          description: Contents of the document
        embed_instruction:
          type: string
          nullable: true
          description: Instruction for the embedding model.
          default: null
      description: Payload for creating a doc
    Docs.Doc:
      type: object
      required:
        - id
        - created_at
        - title
        - content
        - embeddings
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          readOnly: true
        metadata:
          type: object
          additionalProperties: {}
        created_at:
          type: string
          format: date-time
          description: When this resource was created as UTC date-time
          readOnly: true
        title:
          type: string
          maxLength: 800
          description: Title describing what this document contains
        content:
          anyOf:
            - type: string
            - type: array
              items:
                type: string
          description: Contents of the document
        embeddings:
          anyOf:
            - type: array
              items:
                type: number
                format: float
            - type: array
              items:
                type: array
                items:
                  type: number
                  format: float
          nullable: true
          description: Embeddings for the document
          default: null
          readOnly: true
        modality:
          type: string
          description: Modality of the document
          readOnly: true
        language:
          type: string
          description: Language of the document
          readOnly: true
        embedding_model:
          type: string
          description: Embedding model used for the document
          readOnly: true
        embedding_dimensions:
          type: integer
          format: uint16
          description: Dimensions of the embedding model
          readOnly: true
    Docs.DocOwner:
      type: object
      required:
        - id
        - role
      properties:
        id:
          anyOf:
            - allOf:
                - $ref: '#/components/schemas/Common.uuid'
              readOnly: true
            - allOf:
                - $ref: '#/components/schemas/Common.uuid'
              readOnly: true
        role:
          type: string
          enum:
            - user
            - agent
    Docs.DocReference:
      type: object
      required:
        - owner
        - id
        - snippet
        - distance
      properties:
        metadata:
          type: object
          additionalProperties: {}
        owner:
          allOf:
            - $ref: '#/components/schemas/Docs.DocOwner'
          description: The owner of this document.
        id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          readOnly: true
          description: ID of the document
        title:
          type: string
        snippet:
          $ref: '#/components/schemas/Docs.Snippet'
        distance:
          type: number
          nullable: true
          default: null
    Docs.DocSearchResponse:
      type: object
      required:
        - docs
        - time
      properties:
        docs:
          type: array
          items:
            $ref: '#/components/schemas/Docs.DocReference'
          description: The documents that were found
        time:
          type: number
          description: The time taken to search in seconds
          minimum: 0
          exclusiveMinimum: true
    Docs.EmbedQueryResponse:
      type: object
      required:
        - vectors
      properties:
        vectors:
          type: array
          items:
            type: array
            items:
              type: number
          description: The embedded vectors
    Docs.HybridDocSearchRequest:
      type: object
      required:
        - confidence
        - alpha
        - text
        - vector
        - trigram_similarity_threshold
        - k_multiplier
      properties:
        confidence:
          type: number
          minimum: -1
          maximum: 1
          description: The confidence cutoff level
          default: 0.5
        alpha:
          type: number
          minimum: 0
          maximum: 1
          description: The weight to apply to BM25 vs Vector search results. 0 => pure BM25; 1 => pure vector;
          default: 0.5
        text:
          type: string
          description: Text to use in the search. In `hybrid` search mode, either `text` or both `text` and `vector` fields are required.
        vector:
          type: array
          items:
            type: number
          description: Vector to use in the search. Must be the same dimensions as the embedding model or else an error will be thrown.
        mmr_strength:
          type: number
          minimum: 0
          description: MMR Strength (mmr_strength = 1 - mmr_lambda)
          maximum: 1
          exclusiveMaximum: true
          default: 0.5
        trigram_similarity_threshold:
          type: number
          minimum: 0
          maximum: 1
          description: The trigram_similarity_threshold cutoff level
          default: 0.6
        k_multiplier:
          type: integer
          format: int8
          minimum: 0
          description: The k_multiplier cutoff level to control how many intermediate results to fetch before final scoring
          default: 7
      allOf:
        - $ref: '#/components/schemas/Docs.BaseDocSearchRequest'
    Docs.MultipleEmbedQueryRequest:
      type: object
      required:
        - text
        - embed_instruction
      properties:
        text:
          type: array
          items:
            type: string
          minItems: 1
          maxItems: 100
          description: Texts to embed
        embed_instruction:
          type: string
          description: Instruction for the embedding model.
          default: ''
    Docs.SingleEmbedQueryRequest:
      type: object
      required:
        - text
        - embed_instruction
      properties:
        text:
          type: string
          description: Text to embed
        embed_instruction:
          type: string
          description: Instruction for the embedding model.
          default: ''
    Docs.Snippet:
      type: object
      required:
        - index
        - content
      properties:
        index:
          type: integer
          format: uint16
        content:
          type: string
        embedding:
          type: array
          items:
            type: number
    Docs.TextOnlyDocSearchRequest:
      type: object
      required:
        - text
        - trigram_similarity_threshold
      properties:
        text:
          type: string
          description: Text to use in the search.
        trigram_similarity_threshold:
          type: number
          minimum: 0
          maximum: 1
          description: The trigram_similarity_threshold cutoff level
          default: 0.6
      allOf:
        - $ref: '#/components/schemas/Docs.BaseDocSearchRequest'
    Docs.VectorDocSearchRequest:
      type: object
      required:
        - confidence
        - vector
      properties:
        confidence:
          type: number
          minimum: -1
          maximum: 1
          description: The confidence cutoff level
          default: 0.5
        vector:
          type: array
          items:
            type: number
          description: Vector to use in the search. Must be the same dimensions as the embedding model or else an error will be thrown.
        mmr_strength:
          type: number
          minimum: 0
          description: MMR Strength (mmr_strength = 1 - mmr_lambda)
          maximum: 1
          exclusiveMaximum: true
          default: 0.5
      allOf:
        - $ref: '#/components/schemas/Docs.BaseDocSearchRequest'
    Entries.BaseEntry:
      type: object
      required:
        - role
        - name
        - content
        - source
        - tokenizer
        - token_count
        - model
        - timestamp
      properties:
        role:
          $ref: '#/components/schemas/Entries.ChatMLRole'
        name:
          type: string
          nullable: true
          default: null
        content:
          anyOf:
            - type: array
              items:
                anyOf:
                  - type: object
                    required:
                      - text
                      - type
                    properties:
                      text:
                        type: string
                      type:
                        type: string
                        enum:
                          - text
                        description: The type (fixed to 'text')
                        default: text
                  - type: object
                    required:
                      - image_url
                      - type
                    properties:
                      image_url:
                        type: object
                        required:
                          - url
                          - detail
                        properties:
                          url:
                            type: string
                            description: Image URL or base64 data url (e.g. `data:image/jpeg;base64,<the base64 encoded image>`)
                          detail:
                            allOf:
                              - $ref: '#/components/schemas/Entries.ImageDetail'
                            description: The detail level of the image
                            default: auto
                        description: The image URL
                      type:
                        type: string
                        enum:
                          - image_url
                        description: The type (fixed to 'image_url')
                        default: image_url
                  - type: object
                    required:
                      - tool_use_id
                      - type
                      - content
                    properties:
                      tool_use_id:
                        type: string
                      type:
                        type: string
                        enum:
                          - tool_result
                        default: tool_result
                      content:
                        anyOf:
                          - type: array
                            items:
                              type: object
                              required:
                                - text
                                - type
                              properties:
                                text:
                                  type: string
                                type:
                                  type: string
                                  enum:
                                    - text
                                  description: The type (fixed to 'text')
                                  default: text
                          - type: array
                            items:
                              type: object
                              required:
                                - type
                                - source
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - image
                                  default: image
                                source:
                                  type: object
                                  required:
                                    - type
                                    - media_type
                                    - data
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - base64
                                      default: base64
                                    media_type:
                                      type: string
                                    data:
                                      type: string
                    description: Anthropic image content part
            - $ref: '#/components/schemas/Tools.Tool'
            - $ref: '#/components/schemas/Tools.ChosenFunctionCall'
            - $ref: '#/components/schemas/Tools.ChosenSystemCall'
            - $ref: '#/components/schemas/Tools.ChosenComputer20241022'
            - $ref: '#/components/schemas/Tools.ChosenTextEditor20241022'
            - $ref: '#/components/schemas/Tools.ChosenBash20241022'
            - type: string
            - $ref: '#/components/schemas/Tools.ToolResponse'
            - type: array
              items:
                anyOf:
                  - type: array
                    items:
                      anyOf:
                        - type: object
                          required:
                            - text
                            - type
                          properties:
                            text:
                              type: string
                            type:
                              type: string
                              enum:
                                - text
                              description: The type (fixed to 'text')
                              default: text
                        - type: object
                          required:
                            - image_url
                            - type
                          properties:
                            image_url:
                              type: object
                              required:
                                - url
                                - detail
                              properties:
                                url:
                                  type: string
                                  description: Image URL or base64 data url (e.g. `data:image/jpeg;base64,<the base64 encoded image>`)
                                detail:
                                  allOf:
                                    - $ref: '#/components/schemas/Entries.ImageDetail'
                                  description: The detail level of the image
                                  default: auto
                              description: The image URL
                            type:
                              type: string
                              enum:
                                - image_url
                              description: The type (fixed to 'image_url')
                              default: image_url
                        - type: object
                          required:
                            - tool_use_id
                            - type
                            - content
                          properties:
                            tool_use_id:
                              type: string
                            type:
                              type: string
                              enum:
                                - tool_result
                              default: tool_result
                            content:
                              anyOf:
                                - type: array
                                  items:
                                    type: object
                                    required:
                                      - text
                                      - type
                                    properties:
                                      text:
                                        type: string
                                      type:
                                        type: string
                                        enum:
                                          - text
                                        description: The type (fixed to 'text')
                                        default: text
                                - type: array
                                  items:
                                    type: object
                                    required:
                                      - type
                                      - source
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - image
                                        default: image
                                      source:
                                        type: object
                                        required:
                                          - type
                                          - media_type
                                          - data
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - base64
                                            default: base64
                                          media_type:
                                            type: string
                                          data:
                                            type: string
                          description: Anthropic image content part
                  - $ref: '#/components/schemas/Tools.Tool'
                  - $ref: '#/components/schemas/Tools.ChosenFunctionCall'
                  - $ref: '#/components/schemas/Tools.ChosenSystemCall'
                  - $ref: '#/components/schemas/Tools.ChosenComputer20241022'
                  - $ref: '#/components/schemas/Tools.ChosenTextEditor20241022'
                  - $ref: '#/components/schemas/Tools.ChosenBash20241022'
                  - type: string
                  - $ref: '#/components/schemas/Tools.ToolResponse'
        source:
          type: string
          enum:
            - api_request
            - api_response
            - tool_response
            - internal
            - summarizer
            - meta
        tokenizer:
          type: string
        token_count:
          type: integer
          format: uint16
        model:
          type: string
          default: gpt-4o-mini
        tool_calls:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Tools.ChosenFunctionCall'
              - $ref: '#/components/schemas/Tools.ChosenSystemCall'
              - $ref: '#/components/schemas/Tools.ChosenComputer20241022'
              - $ref: '#/components/schemas/Tools.ChosenTextEditor20241022'
              - $ref: '#/components/schemas/Tools.ChosenBash20241022'
          nullable: true
          description: Tool calls generated by the model.
          default: null
        tool_call_id:
          type: string
          nullable: true
          description: The tool call id of the tool call this message is a response to
          default: null
        timestamp:
          type: string
          format: date-time
          description: This is the time that this event refers to.
    Entries.ChatMLRole:
      type: string
      enum:
        - user
        - assistant
        - system
        - tool
      description: ChatML role (system|assistant|user|tool)
    Entries.Entry:
      type: object
      required:
        - created_at
        - id
      properties:
        created_at:
          type: string
          format: date-time
          description: When this resource was created as UTC date-time
          readOnly: true
        id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          readOnly: true
      allOf:
        - $ref: '#/components/schemas/Entries.BaseEntry'
    Entries.History:
      type: object
      required:
        - entries
        - relations
        - session_id
        - created_at
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Entries.Entry'
        relations:
          type: array
          items:
            $ref: '#/components/schemas/Entries.Relation'
        session_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          readOnly: true
        created_at:
          type: string
          format: date-time
          description: When this resource was created as UTC date-time
          readOnly: true
    Entries.ImageDetail:
      type: string
      enum:
        - low
        - high
        - auto
      description: Image detail level
    Entries.Relation:
      type: object
      required:
        - head
        - relation
        - tail
      properties:
        head:
          $ref: '#/components/schemas/Common.uuid'
        relation:
          type: string
        tail:
          $ref: '#/components/schemas/Common.uuid'
    Executions.CreateExecutionRequest:
      type: object
      required:
        - input
      properties:
        input:
          type: object
          additionalProperties: {}
          description: The input to the execution
        output:
          description: The output of the execution if it succeeded
        error:
          type: string
          description: The error of the execution if it failed
        transition_count:
          type: integer
          format: uint8
          description: The number of transitions in this execution
        metadata:
          type: object
          additionalProperties: {}
      description: Payload for creating an execution
    Executions.Execution:
      type: object
      required:
        - task_id
        - status
        - input
        - created_at
        - updated_at
        - id
      properties:
        task_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          readOnly: true
          description: The ID of the task that the execution is running
        status:
          type: string
          enum:
            - queued
            - starting
            - running
            - awaiting_input
            - succeeded
            - failed
            - cancelled
          description: The status of the execution
          readOnly: true
        input:
          type: object
          additionalProperties: {}
          description: The input to the execution
        output:
          description: The output of the execution if it succeeded
        error:
          type: string
          description: The error of the execution if it failed
        transition_count:
          type: integer
          format: uint8
          description: The number of transitions in this execution
        created_at:
          type: string
          format: date-time
          description: When this resource was created as UTC date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: When this resource was updated as UTC date-time
          readOnly: true
        metadata:
          type: object
          additionalProperties: {}
        id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          readOnly: true
    Executions.ResumeExecutionRequest:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - running
          default: running
        input:
          type: object
          additionalProperties: {}
          description: The input to resume the execution with
      allOf:
        - $ref: '#/components/schemas/Executions.UpdateExecutionRequest'
    Executions.StopExecutionRequest:
      type: object
      required:
        - status
        - reason
      properties:
        status:
          type: string
          enum:
            - cancelled
          default: cancelled
        reason:
          type: string
          nullable: true
          description: The reason for stopping the execution
          default: null
      allOf:
        - $ref: '#/components/schemas/Executions.UpdateExecutionRequest'
    Executions.TaskTokenResumeExecutionRequest:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - running
          default: running
        input:
          type: object
          additionalProperties: {}
          description: The input to resume the execution with
    Executions.Transition:
      type: object
      required:
        - execution_id
        - current
        - next
        - id
      properties:
        execution_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          readOnly: true
        current:
          allOf:
            - $ref: '#/components/schemas/Executions.TransitionTarget'
          readOnly: true
        next:
          type: object
          allOf:
            - $ref: '#/components/schemas/Executions.TransitionTarget'
          nullable: true
          readOnly: true
        step_label:
          allOf:
            - $ref: '#/components/schemas/Common.stepLabel'
          readOnly: true
        id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          readOnly: true
        metadata:
          type: object
          additionalProperties: {}
      allOf:
        - $ref: '#/components/schemas/Executions.TransitionEvent'
    Executions.TransitionEvent:
      type: object
      required:
        - type
        - output
        - created_at
        - updated_at
      properties:
        type:
          type: string
          enum:
            - init
            - init_branch
            - finish
            - finish_branch
            - wait
            - resume
            - error
            - step
            - cancelled
          readOnly: true
        output:
          readOnly: true
        created_at:
          type: string
          format: date-time
          description: When this resource was created as UTC date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: When this resource was updated as UTC date-time
          readOnly: true
    Executions.TransitionTarget:
      type: object
      required:
        - workflow
        - step
        - scope_id
      properties:
        workflow:
          $ref: '#/components/schemas/Common.identifierSafeUnicode'
        step:
          type: integer
          format: uint16
        scope_id:
          $ref: '#/components/schemas/Common.uuid'
    Executions.UpdateExecutionRequest:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - queued
            - starting
            - running
            - awaiting_input
            - succeeded
            - failed
            - cancelled
      discriminator:
        propertyName: status
        mapping:
          cancelled: '#/components/schemas/Executions.StopExecutionRequest'
          running: '#/components/schemas/Executions.ResumeExecutionRequest'
    Files.CreateFileRequest:
      type: object
      required:
        - name
        - description
        - mime_type
        - content
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/Common.identifierSafeUnicode'
          description: Name of the file
        description:
          type: string
          description: Description of the file
          default: ''
        mime_type:
          type: object
          allOf:
            - $ref: '#/components/schemas/Common.mimeType'
          nullable: true
          description: MIME type of the file
          default: null
        content:
          type: string
          description: Base64 encoded content of the file
      description: Payload for creating a file
    Files.File:
      type: object
      required:
        - id
        - created_at
        - name
        - description
        - mime_type
        - content
        - size
        - hash
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          readOnly: true
        created_at:
          type: string
          format: date-time
          description: When this resource was created as UTC date-time
          readOnly: true
        name:
          allOf:
            - $ref: '#/components/schemas/Common.identifierSafeUnicode'
          description: Name of the file
        description:
          type: string
          description: Description of the file
          default: ''
        mime_type:
          type: object
          allOf:
            - $ref: '#/components/schemas/Common.mimeType'
          nullable: true
          description: MIME type of the file
          default: null
        content:
          type: string
          description: Base64 encoded content of the file
        size:
          type: integer
          format: uint64
          minimum: 1
          description: Size of the file in bytes
          readOnly: true
        hash:
          type: string
          description: Hash of the file
          readOnly: true
    InputMessageContentList:
      type: array
      items:
        anyOf:
          - $ref: '#/components/schemas/Responses.InputText'
          - $ref: '#/components/schemas/Responses.InputImage'
          - $ref: '#/components/schemas/Responses.InputFile'
    Jobs.JobState:
      type: string
      enum:
        - pending
        - in_progress
        - retrying
        - succeeded
        - aborted
        - failed
        - unknown
      description: 'Current state (one of: pending, in_progress, retrying, succeeded, aborted, failed)'
    Jobs.JobStatus:
      type: object
      required:
        - id
        - created_at
        - updated_at
        - name
        - reason
        - has_progress
        - progress
        - state
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          readOnly: true
        created_at:
          type: string
          format: date-time
          description: When this resource was created as UTC date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: When this resource was updated as UTC date-time
          readOnly: true
        name:
          allOf:
            - $ref: '#/components/schemas/Common.identifierSafeUnicode'
          description: Name of the job
          default: ''
        reason:
          type: string
          description: Reason for the current state of the job
          default: ''
        has_progress:
          type: boolean
          description: Whether this Job supports progress updates
          default: false
        progress:
          type: number
          format: float
          minimum: 0
          maximum: 100
          description: Progress percentage
          default: 0
        state:
          allOf:
            - $ref: '#/components/schemas/Jobs.JobState'
          description: Current state of the job
          default: pending
    Responses.BaseTool:
      type: object
      required:
        - type
      properties:
        type:
          type: string
    Responses.Click:
      type: object
      required:
        - type
        - button
        - x
        - 'y'
      properties:
        type:
          type: string
          enum:
            - click
          description: Specifies the event type. For a click action, this property is always set to `click`.
          default: click
        button:
          type: string
          enum:
            - left
            - right
            - wheel
            - back
            - forward
          description: Indicates which mouse button was pressed during the click. One of `left`, `right`, `wheel`, `back`, or `forward`.
        x:
          type: integer
          format: int32
          description: The x-coordinate where the click occurred.
        'y':
          type: integer
          format: int32
          description: The y-coordinate where the click occurred.
    Responses.ComputerScreenshotImage:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - computer_screenshot
          description: Specifies the event type. For a computer screenshot, this property is always set to `computer_screenshot`.
        image_url:
          type: string
          description: The URL of the screenshot image.
        file_id:
          type: string
          description: The identifier of an uploaded file that contains the screenshot.
    Responses.ComputerTool:
      type: object
      required:
        - type
        - display_width
        - display_height
        - environment
      properties:
        type:
          type: string
          enum:
            - computer_use_preview
          description: The type of the computer use tool. Always `computer_use_preview`.
        display_width:
          type: number
          format: float
          description: The width of the computer display.
        display_height:
          type: number
          format: float
          description: The height of the computer display.
        environment:
          type: string
          enum:
            - mac
            - windows
            - ubuntu
            - browser
          description: The type of computer environment to control.
      allOf:
        - $ref: '#/components/schemas/Responses.BaseTool'
    Responses.ComputerToolCall:
      type: object
      required:
        - type
        - id
        - call_id
        - action
        - pending_safety_checks
        - status
      properties:
        type:
          type: string
          enum:
            - computer_call
          description: The type of the computer call. Always `computer_call`.
        id:
          type: string
          description: The unique ID of the computer call.
        call_id:
          type: string
          description: An identifier used when responding to the tool call with output.
        action:
          anyOf:
            - $ref: '#/components/schemas/Responses.Click'
            - $ref: '#/components/schemas/Responses.DoubleClick'
            - $ref: '#/components/schemas/Responses.Drag'
            - $ref: '#/components/schemas/Responses.KeyPress'
            - $ref: '#/components/schemas/Responses.Move'
            - $ref: '#/components/schemas/Responses.Screenshot'
            - $ref: '#/components/schemas/Responses.Scroll'
            - $ref: '#/components/schemas/Responses.Type'
            - $ref: '#/components/schemas/Responses.Wait'
          description: The action to perform.
        pending_safety_checks:
          type: array
          items:
            $ref: '#/components/schemas/Responses.ComputerToolCallSafetyCheck'
          description: The pending safety checks for the computer call.
        status:
          type: string
          enum:
            - in_progress
            - completed
            - incomplete
          description: The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API.
    Responses.ComputerToolCallOutput:
      type: object
      required:
        - type
        - call_id
        - output
      properties:
        type:
          type: string
          enum:
            - computer_call_output
          description: The type of the computer tool call output. Always `computer_call_output`.
        id:
          type: string
          description: The ID of the computer tool call output.
        call_id:
          type: string
          description: The ID of the computer tool call that produced the output.
        acknowledged_safety_checks:
          type: array
          items:
            $ref: '#/components/schemas/Responses.ComputerToolCallSafetyCheck'
          description: The safety checks reported by the API that have been acknowledged by the developer.
        output:
          allOf:
            - $ref: '#/components/schemas/Responses.ComputerScreenshotImage'
          description: The output screenshot image.
        status:
          allOf:
            - $ref: '#/components/schemas/Responses.MessageStatus'
          description: The status of the message input. One of `in_progress`, `completed`, or `incomplete`. Populated when input items are returned via API.
    Responses.ComputerToolCallOutputResource:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: The unique ID of the computer call tool output.
      allOf:
        - $ref: '#/components/schemas/Responses.ComputerToolCallOutput'
    Responses.ComputerToolCallSafetyCheck:
      type: object
      required:
        - id
        - code
        - message
      properties:
        id:
          type: string
          description: The ID of the pending safety check.
        code:
          type: string
          description: The type of the pending safety check.
        message:
          type: string
          description: Details about the pending safety check.
    Responses.Coordinate:
      type: object
      required:
        - x
        - 'y'
      properties:
        x:
          type: integer
          format: int32
          description: The x-coordinate.
        'y':
          type: integer
          format: int32
          description: The y-coordinate.
    Responses.CreateResponse:
      type: object
      required:
        - model
        - input
      properties:
        model:
          type: string
        input:
          anyOf:
            - type: string
            - type: array
              items:
                $ref: '#/components/schemas/Responses.InputItem'
        include:
          type: array
          items:
            $ref: '#/components/schemas/Responses.Includable'
        parallel_tool_calls:
          type: boolean
          default: true
        store:
          type: boolean
          default: true
        stream:
          type: boolean
          default: false
        max_tokens:
          type: integer
          format: int32
        temperature:
          type: number
          default: 1
        top_p:
          type: number
          default: 1
        'n':
          type: integer
          format: int32
        stop:
          anyOf:
            - type: string
            - type: array
              items:
                type: string
        presence_penalty:
          type: number
        frequency_penalty:
          type: number
        logit_bias:
          type: object
          additionalProperties: {}
        user:
          type: string
        instructions:
          type: string
        previous_response_id:
          type: string
        reasoning:
          $ref: '#/components/schemas/Responses.Reasoning'
        text:
          type: object
          properties:
            format:
              anyOf:
                - $ref: '#/components/schemas/Responses.ResponseFormatText'
                - $ref: '#/components/schemas/Responses.TextResponseFormatJsonSchema'
                - $ref: '#/components/schemas/Responses.ResponseFormatJsonObject'
          required:
            - format
        tool_choice:
          anyOf:
            - type: string
              enum:
                - auto
                - none
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
                function:
                  type: object
                  properties:
                    name:
                      type: string
                  required:
                    - name
              required:
                - type
                - function
        tools:
          type: array
          items:
            $ref: '#/components/schemas/Responses.Tool'
        truncation:
          type: string
          enum:
            - disabled
            - auto
        metadata:
          type: object
          additionalProperties: {}
    Responses.DoubleClick:
      type: object
      required:
        - type
        - x
        - 'y'
      properties:
        type:
          type: string
          enum:
            - double_click
          description: Specifies the event type. For a double click action, this property is always set to `double_click`.
          default: double_click
        x:
          type: integer
          format: int32
          description: The x-coordinate where the double click occurred.
        'y':
          type: integer
          format: int32
          description: The y-coordinate where the double click occurred.
    Responses.Drag:
      type: object
      required:
        - type
        - path
      properties:
        type:
          type: string
          enum:
            - drag
          description: Specifies the event type. For a drag action, this property is always set to `drag`.
          default: drag
        path:
          type: array
          items:
            $ref: '#/components/schemas/Responses.Coordinate'
          description: An array of coordinates representing the path of the drag action.
    Responses.EasyInputMessage:
      type: object
      required:
        - role
        - content
        - type
      properties:
        role:
          allOf:
            - $ref: '#/components/schemas/Responses.MessageRole'
          description: The role of the message input. One of `user`, `assistant`, `system`, or `developer`.
        content:
          anyOf:
            - type: string
            - $ref: '#/components/schemas/InputMessageContentList'
          description: Text, image, or audio input to the model, used to generate a response. Can also contain previous assistant responses.
        type:
          type: string
          enum:
            - message
          description: The type of the message input. Always `message`.
    Responses.FileCitation:
      type: object
      required:
        - type
        - index
        - file_id
      properties:
        type:
          type: string
          enum:
            - file_citation
          description: The type of the file citation. Always `file_citation`.
        index:
          type: integer
          format: int32
          description: The index of the file in the list of files.
        file_id:
          type: string
          description: The ID of the file.
    Responses.FilePath:
      type: object
      required:
        - type
        - file_id
        - index
      properties:
        type:
          type: string
          enum:
            - file_path
          description: The type of the file path. Always `file_path`.
        file_id:
          type: string
          description: The ID of the file.
        index:
          type: integer
          format: int32
          description: The index of the file in the list of files.
    Responses.FileSearchTool:
      type: object
      required:
        - type
        - vector_store_ids
      properties:
        type:
          type: string
          enum:
            - file_search
        filters: {}
        max_num_results:
          type: integer
          format: int32
        ranking_options:
          type: object
          properties:
            ranker:
              type: string
              enum:
                - auto
            score_threshold:
              type: number
        vector_store_ids:
          type: array
          items:
            type: string
      allOf:
        - $ref: '#/components/schemas/Responses.BaseTool'
    Responses.FileSearchToolCall:
      type: object
      required:
        - id
        - type
        - status
        - queries
      properties:
        id:
          type: string
          description: The unique ID of the file search tool call.
        type:
          type: string
          enum:
            - file_search_call
          description: The type of the file search tool call. Always `file_search_call`.
        status:
          type: string
          enum:
            - in_progress
            - searching
            - completed
            - incomplete
            - failed
          description: The status of the file search tool call. One of `in_progress`, `searching`, `incomplete` or `failed`
        queries:
          type: array
          items:
            type: string
          description: The queries used to search for files.
        results:
          type: array
          items:
            type: object
            properties:
              file_id:
                type: string
                description: The unique ID of the file.
              text:
                type: string
                description: The text that was retrieved from the file.
              filename:
                type: string
                description: The name of the file.
              attributes:
                allOf:
                  - $ref: '#/components/schemas/Responses.VectorStoreFileAttributes'
                description: The attributes of the file.
              score:
                type: number
                format: float
                description: The relevance score of the file - a value between 0 and 1.
            required:
              - file_id
              - text
              - filename
              - attributes
              - score
          description: The results of the file search tool call.
    Responses.FunctionTool:
      type: object
      required:
        - type
        - name
        - parameters
      properties:
        type:
          type: string
          enum:
            - function
        name:
          type: string
        description:
          type: string
        parameters:
          type: object
          additionalProperties: {}
        strict:
          type: boolean
      allOf:
        - $ref: '#/components/schemas/Responses.BaseTool'
    Responses.FunctionToolCall:
      type: object
      required:
        - id
        - type
        - call_id
        - name
        - arguments
      properties:
        id:
          type: string
          description: The unique ID of the function tool call.
        type:
          type: string
          enum:
            - function_call
          description: The type of the function tool call. Always `function_call`.
        call_id:
          type: string
          description: The unique ID of the function tool call generated by the model.
        name:
          type: string
          description: The name of the function to run.
        arguments:
          type: string
          description: A JSON string of the arguments to pass to the function.
        status:
          type: string
          enum:
            - in_progress
            - completed
            - incomplete
          description: The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API.
    Responses.FunctionToolCallOutput:
      type: object
      required:
        - type
        - call_id
        - output
      properties:
        id:
          type: string
          description: The unique ID of the function tool call output. Populated when this item is returned via API.
        type:
          type: string
          enum:
            - function_call_output
          description: The type of the function tool call output. Always `function_call_output`.
        call_id:
          type: string
          description: The unique ID of the function tool call generated by the model.
        output:
          type: string
          description: A JSON string of the output of the function tool call.
        status:
          type: string
          enum:
            - in_progress
            - completed
            - incomplete
          description: The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API.
    Responses.FunctionToolCallOutputResource:
      type: object
      properties:
        id:
          type: string
          description: The unique ID of the function call tool output.
      allOf:
        - $ref: '#/components/schemas/Responses.FunctionToolCallOutput'
    Responses.Includable:
      type: string
      enum:
        - file_search_call.results
        - message.input_image.image_url
        - computer_call_output.output.image_url
    Responses.InputFile:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - input_file
          description: The type of the input item. Always `input_file`.
        file_id:
          type: string
          description: The ID of the file to be sent to the model.
        filename:
          type: string
          description: The name of the file to be sent to the model.
        file_data:
          type: string
          description: The content of the file to be sent to the model.
      description: A file input to the model.
    Responses.InputImage:
      type: object
      required:
        - type
        - detail
      properties:
        type:
          type: string
          enum:
            - input_image
          description: The type of the input item. Always `input_image`.
        image_url:
          type: string
          description: The URL of the image to be sent to the model. A fully qualified URL or base64 encoded image in a data URL.
        file_id:
          type: string
          description: The ID of the file to be sent to the model.
        detail:
          type: string
          enum:
            - high
            - low
            - auto
          description: The detail level of the image to be sent to the model. One of `high`, `low`, or `auto`. Defaults to `auto`.
          default: auto
    Responses.InputItem:
      anyOf:
        - $ref: '#/components/schemas/Responses.EasyInputMessage'
        - $ref: '#/components/schemas/Responses.Item'
        - $ref: '#/components/schemas/Responses.ItemReference'
    Responses.InputMessage:
      type: object
      required:
        - type
        - role
        - status
        - content
      properties:
        type:
          type: string
          enum:
            - message
        role:
          $ref: '#/components/schemas/Responses.MessageRole'
        status:
          $ref: '#/components/schemas/Responses.MessageStatus'
        content:
          $ref: '#/components/schemas/InputMessageContentList'
    Responses.InputMessageResource:
      type: object
      required:
        - id
      properties:
        id:
          type: string
      allOf:
        - $ref: '#/components/schemas/Responses.InputMessage'
    Responses.InputText:
      type: object
      required:
        - type
        - text
      properties:
        type:
          type: string
          enum:
            - input_text
          description: The type of the input item. Always `input_text`.
        text:
          type: string
          description: The text input to the model.
    Responses.Item:
      type: object
      required:
        - type
      properties:
        type:
          type: string
      description: An item representing part of the context for the response to be generated by the model. Can contain text, images, and audio inputs, as well as previous assistant responses and tool call outputs.
    Responses.ItemReference:
      anyOf:
        - $ref: '#/components/schemas/Responses.InputMessageResource'
        - $ref: '#/components/schemas/Responses.OutputMessage'
        - $ref: '#/components/schemas/Responses.FileSearchToolCall'
        - $ref: '#/components/schemas/Responses.ComputerToolCall'
        - $ref: '#/components/schemas/Responses.ComputerToolCallOutputResource'
        - $ref: '#/components/schemas/Responses.WebSearchToolCall'
        - $ref: '#/components/schemas/Responses.FunctionToolCall'
        - $ref: '#/components/schemas/Responses.FunctionToolCallOutputResource'
      description: Content item used to generate a response.
    Responses.KeyPress:
      type: object
      required:
        - type
        - keys
      properties:
        type:
          type: string
          enum:
            - keypress
          description: Specifies the event type. For a keypress action, this property is always set to `keypress`.
          default: keypress
        keys:
          type: array
          items:
            type: string
          description: The combination of keys the model is requesting to be pressed. This is an array of strings, each representing a key.
    Responses.MessageRole:
      type: string
      enum:
        - user
        - assistant
        - system
        - developer
    Responses.MessageStatus:
      type: string
      enum:
        - in_progress
        - completed
        - incomplete
    Responses.Move:
      type: object
      required:
        - type
        - x
        - 'y'
      properties:
        type:
          type: string
          enum:
            - move
          description: Specifies the event type. For a move action, this property is always set to `move`.
          default: move
        x:
          type: integer
          format: int32
          description: The x-coordinate to move to.
        'y':
          type: integer
          format: int32
          description: The y-coordinate to move to.
    Responses.OutputItem:
      anyOf:
        - $ref: '#/components/schemas/Responses.OutputMessage'
        - $ref: '#/components/schemas/Responses.FileSearchToolCall'
        - $ref: '#/components/schemas/Responses.FunctionToolCall'
        - $ref: '#/components/schemas/Responses.WebSearchToolCall'
        - $ref: '#/components/schemas/Responses.ComputerToolCall'
        - $ref: '#/components/schemas/Responses.ReasoningItem'
    Responses.OutputMessage:
      type: object
      required:
        - id
        - type
        - role
        - status
        - content
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - message
        role:
          $ref: '#/components/schemas/Responses.MessageRole'
        status:
          $ref: '#/components/schemas/Responses.MessageStatus'
        content:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Responses.OutputText'
              - $ref: '#/components/schemas/Responses.Refusal'
    Responses.OutputText:
      type: object
      required:
        - type
        - text
        - annotations
      properties:
        type:
          type: string
          enum:
            - output_text
          description: The type of the output text. Always `output_text`.
        text:
          type: string
          description: The text output from the model.
        annotations:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Responses.FileCitation'
              - $ref: '#/components/schemas/Responses.UrlCitation'
              - $ref: '#/components/schemas/Responses.FilePath'
          description: The annotations of the text output.
    Responses.Reasoning:
      type: object
      required:
        - effort
      properties:
        effort:
          $ref: '#/components/schemas/Responses.ReasoningEffort'
        generate_summary:
          type: string
          enum:
            - concise
            - detailed
          description: A summary of the reasoning performed by the model. This can be useful for debugging and understanding the model's reasoning process. One of `concise` or `detailed`.
      description: Reasoning configuration options for o-series models.
    Responses.ReasoningContent:
      type: object
      required:
        - type
        - text
      properties:
        type:
          type: string
          enum:
            - reasoning_summary
          description: The type of the object. Always `text`.
        text:
          type: string
          description: A short summary of the reasoning used by the model when generating the response.
    Responses.ReasoningEffort:
      type: string
      enum:
        - low
        - medium
        - high
      description: Constraint effort on reasoning models.
    Responses.ReasoningItem:
      type: object
      required:
        - type
        - id
        - content
      properties:
        type:
          type: string
          enum:
            - reasoning
          description: The type of the object. Always `reasoning`.
        id:
          type: string
          description: The unique identifier of the reasoning content.
        content:
          type: array
          items:
            $ref: '#/components/schemas/Responses.ReasoningContent'
          description: Reasoning text contents.
        status:
          type: string
          enum:
            - in_progress
            - completed
            - incomplete
          description: The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API.
    Responses.Refusal:
      type: object
      required:
        - type
        - refusal
      properties:
        type:
          type: string
          enum:
            - refusal
          description: The type of the refusal. Always `refusal`.
        refusal:
          type: string
          description: The refusal explanation from the model.
    Responses.Response:
      type: object
      required:
        - id
        - object
        - created_at
        - status
        - model
        - output
        - parallel_tool_calls
        - temperature
        - tool_choice
        - tools
        - top_p
        - truncation
        - usage
        - metadata
      properties:
        id:
          type: string
        object:
          type: string
          enum:
            - response
        created_at:
          type: integer
          format: int32
        status:
          $ref: '#/components/schemas/Responses.ResponseStatus'
        error:
          $ref: '#/components/schemas/Responses.ResponseError'
        incomplete_details:
          type: object
          properties:
            reason:
              type: string
              enum:
                - max_output_tokens
                - content_filter
          required:
            - reason
        instructions:
          type: string
        max_output_tokens:
          type: integer
          format: int32
        model:
          type: string
        output:
          type: array
          items:
            $ref: '#/components/schemas/Responses.OutputItem'
        parallel_tool_calls:
          type: boolean
          default: true
        previous_response_id:
          type: string
        reasoning:
          $ref: '#/components/schemas/Responses.Reasoning'
        store:
          type: boolean
          default: true
        temperature:
          type: number
          default: 1
        text:
          type: object
          properties:
            format:
              anyOf:
                - $ref: '#/components/schemas/Responses.ResponseFormatText'
                - $ref: '#/components/schemas/Responses.TextResponseFormatJsonSchema'
                - $ref: '#/components/schemas/Responses.ResponseFormatJsonObject'
          required:
            - format
        tool_choice:
          anyOf:
            - $ref: '#/components/schemas/Responses.ToolChoiceOptions'
            - $ref: '#/components/schemas/Responses.ToolChoiceTypes'
            - $ref: '#/components/schemas/Responses.ToolChoiceFunction'
        tools:
          type: array
          items:
            $ref: '#/components/schemas/Responses.Tool'
        top_p:
          type: number
          default: 1
        truncation:
          type: string
          enum:
            - disabled
            - auto
        usage:
          $ref: '#/components/schemas/Responses.ResponseUsage'
        user:
          type: string
        metadata:
          type: object
          additionalProperties: {}
    Responses.ResponseError:
      type: object
      required:
        - message
        - type
      properties:
        message:
          type: string
        type:
          type: string
        param:
          type: string
        code:
          type: string
    Responses.ResponseFormatJsonObject:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - json_object
          description: The type of response format being defined. Always `json_object`.
      description: |-
        JSON object response format. An older method of generating JSON responses.

        Using `json_schema` is recommended for models that support it. Note that the
        model will not generate JSON without a system or user message instructing it
        to do so.
    Responses.ResponseFormatText:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - text
          description: The type of response format being defined. Always `text`.
      description: Default response format. Used to generate text responses.
    Responses.ResponseStatus:
      type: string
      enum:
        - completed
        - failed
        - in_progress
        - incomplete
    Responses.ResponseUsage:
      type: object
      required:
        - input_tokens
        - input_tokens_details
        - output_tokens
        - output_tokens_details
        - total_tokens
      properties:
        input_tokens:
          type: integer
          format: int32
        input_tokens_details:
          type: object
          properties:
            cached_tokens:
              type: integer
              format: int32
          required:
            - cached_tokens
        output_tokens:
          type: integer
          format: int32
        output_tokens_details:
          type: object
          properties:
            reasoning_tokens:
              type: integer
              format: int32
          required:
            - reasoning_tokens
        total_tokens:
          type: integer
          format: int32
    Responses.Screenshot:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - screenshot
          description: Specifies the event type. For a screenshot action, this property is always set to `screenshot`.
          default: screenshot
    Responses.Scroll:
      type: object
      required:
        - type
        - x
        - 'y'
        - scroll_x
        - scroll_y
      properties:
        type:
          type: string
          enum:
            - scroll
          description: Specifies the event type. For a scroll action, this property is always set to `scroll`.
          default: scroll
        x:
          type: integer
          format: int32
          description: The x-coordinate where the scroll occurred.
        'y':
          type: integer
          format: int32
          description: The y-coordinate where the scroll occurred.
        scroll_x:
          type: integer
          format: int32
          description: The horizontal scroll distance.
        scroll_y:
          type: integer
          format: int32
          description: The vertical scroll distance.
    Responses.TextResponseFormatJsonSchema:
      type: object
      required:
        - type
        - schema
      properties:
        type:
          type: string
          enum:
            - json_schema
          description: The type of response format being defined. Always `json_schema`.
        description:
          type: string
          description: A description of what the response format is for, used by the model to determine how to respond in the format.
        name:
          type: string
          description: The name of the response format. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.
        schema:
          type: object
          additionalProperties: {}
          description: The JSON schema that defines the structure of the response.
        strict:
          type: boolean
          description: Whether to enable strict schema adherence when generating the output. If set to true, the model will always follow the exact schema defined in the `schema` field. Only a subset of JSON Schema is supported when `strict` is `true`. To learn more, read the [Structured Outputs guide](/docs/guides/structured-outputs).
          default: false
      description: JSON Schema response format. Used to generate structured JSON responses. Learn more about [Structured Outputs](/docs/guides/structured-outputs).
    Responses.Tool:
      anyOf:
        - $ref: '#/components/schemas/Responses.FunctionTool'
        - $ref: '#/components/schemas/Responses.WebSearchTool'
        - $ref: '#/components/schemas/Responses.FileSearchTool'
        - $ref: '#/components/schemas/Responses.ComputerTool'
    Responses.ToolChoiceFunction:
      type: object
      required:
        - type
        - name
      properties:
        type:
          type: string
          enum:
            - function
          description: For function calling, the type is always `function`.
        name:
          type: string
          description: The name of the function to call.
      description: Use this option to force the model to call a specific function.
    Responses.ToolChoiceOptions:
      type: string
      enum:
        - auto
        - none
        - required
    Responses.ToolChoiceTypes:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - file_search
            - web_search_preview
            - computer_use_preview
            - web_search_preview_2025_03_11
          description: |-
            The type of hosted tool the model should to use. Learn more about
            [built-in tools](/docs/guides/tools).

            Allowed values are:
            - `file_search`
            - `web_search_preview` 
            - `computer_use_preview`
      description: |-
        Indicates that the model should use a built-in tool to generate a response.

        [Learn more about built-in tools](/docs/guides/tools).
    Responses.Type:
      type: object
      required:
        - type
        - text
      properties:
        type:
          type: string
          enum:
            - type
          description: Specifies the event type. For a type action, this property is always set to `type`.
          default: type
        text:
          type: string
          description: The text to type.
    Responses.UrlCitation:
      type: object
      required:
        - url
        - title
        - type
        - start_index
        - end_index
      properties:
        url:
          type: string
          description: The URL of the web resource.
        title:
          type: string
          description: The title of the web resource.
        type:
          type: string
          enum:
            - url_citation
          description: The type of the URL citation. Always `url_citation`.
        start_index:
          type: integer
          format: int32
          description: The index of the first character of the URL citation in the message.
        end_index:
          type: integer
          format: int32
          description: The index of the last character of the URL citation in the message.
    Responses.VectorStoreFileAttributes:
      type: object
      required:
        - properties
      properties:
        properties:
          type: object
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/Responses.VectorStoreFileAttributesString'
              - type: boolean
              - type: number
          description: Key-value pairs where keys are strings with max length 64 and values are strings with max length 512, booleans, or numbers.
      description: Set of key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard. Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters, booleans, or numbers.
    Responses.VectorStoreFileAttributesString:
      type: string
      maxLength: 512
    Responses.Wait:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - wait
          description: Specifies the event type. For a wait action, this property is always set to `wait`.
          default: wait
    Responses.WebSearchStatus:
      type: string
      enum:
        - in_progress
        - searching
        - completed
        - failed
    Responses.WebSearchTool:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - web_search_preview
        domains:
          type: array
          items:
            type: string
        search_context_size:
          type: string
          enum:
            - small
            - medium
            - large
        user_location:
          type: object
          properties:
            type:
              type: string
              enum:
                - approximate
            city:
              type: string
            country:
              type: string
            region:
              type: string
            timezone:
              type: string
          required:
            - type
      allOf:
        - $ref: '#/components/schemas/Responses.BaseTool'
    Responses.WebSearchToolCall:
      type: object
      required:
        - id
        - type
        - status
      properties:
        id:
          type: string
          description: The unique ID of the web search tool call.
        type:
          type: string
          enum:
            - web_search_call
          description: The type of the web search tool call. Always `web_search_call`.
        status:
          allOf:
            - $ref: '#/components/schemas/Responses.WebSearchStatus'
          description: The status of the web search tool call.
    Sessions.BaseDocSearch:
      type: object
      required:
        - limit
        - lang
        - metadata_filter
        - num_search_messages
        - max_query_length
      properties:
        limit:
          type: integer
          format: uint16
          minimum: 1
          maximum: 50
          description: The limit of documents to return
          default: 10
        lang:
          type: string
          description: The language to be used for text-only search. Support for other languages coming soon.
          default: en-US
        metadata_filter:
          type: object
          additionalProperties: {}
          description: Metadata filter to apply to the search
          default: {}
        num_search_messages:
          type: integer
          format: uint32
          minimum: 1
          maximum: 50
          description: The number of search messages to use for the search.
          default: 4
        max_query_length:
          type: integer
          format: uint32
          minimum: 100
          maximum: 10000
          description: The maximum query length to use for the search.
          default: 1000
    Sessions.BaseDocSearchUpdate:
      type: object
      properties:
        limit:
          type: integer
          format: uint16
          minimum: 1
          maximum: 50
          description: The limit of documents to return
          default: 10
        lang:
          type: string
          description: The language to be used for text-only search. Support for other languages coming soon.
          default: en-US
        metadata_filter:
          type: object
          additionalProperties: {}
          description: Metadata filter to apply to the search
          default: {}
        num_search_messages:
          type: integer
          format: uint32
          minimum: 1
          maximum: 50
          description: The number of search messages to use for the search.
          default: 4
        max_query_length:
          type: integer
          format: uint32
          minimum: 100
          maximum: 10000
          description: The maximum query length to use for the search.
          default: 1000
    Sessions.ContextOverflowType:
      type: string
      enum:
        - truncate
        - adaptive
    Sessions.CreateOrUpdateSessionRequest:
      type: object
      required:
        - id
        - situation
        - render_templates
        - token_budget
        - context_overflow
        - auto_run_tools
        - forward_tool_calls
      properties:
        id:
          $ref: '#/components/schemas/Common.uuid'
        situation:
          type: string
          nullable: true
          description: Session situation
          default: null
        system_template:
          type: string
          description: A specific system prompt template that sets the background for this session
        render_templates:
          type: boolean
          description: Render system and assistant message content as jinja templates
          default: true
        token_budget:
          type: integer
          format: uint16
          nullable: true
          description: Threshold value for the adaptive context functionality
          default: null
        context_overflow:
          allOf:
            - $ref: '#/components/schemas/Sessions.ContextOverflowType'
          nullable: true
          description: Action to start on context window overflow
          default: null
        auto_run_tools:
          type: boolean
          description: |-
            Whether to auto-run the tool and send the tool results to the model when available.
            (default: false for sessions, true for tasks)

            If a tool call is made, the tool's output will be sent back to the model as the model's input.
            If a tool call is not made, the model's output will be returned as is.
          default: false
        forward_tool_calls:
          type: boolean
          description: Whether to forward tool calls to the model
          default: false
        recall_options:
          anyOf:
            - type: object
              allOf:
                - $ref: '#/components/schemas/Sessions.VectorDocSearch'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Sessions.TextOnlyDocSearch'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Sessions.HybridDocSearch'
              nullable: true
          description: Recall options for the session
          default: null
        metadata:
          type: object
          additionalProperties: {}
      allOf:
        - $ref: '#/components/schemas/Sessions.CreateSessionRequest'
    Sessions.CreateSessionRequest:
      type: object
      required:
        - situation
        - render_templates
        - token_budget
        - context_overflow
        - auto_run_tools
        - forward_tool_calls
      properties:
        user:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: User ID of user associated with this session
        users:
          type: array
          items:
            $ref: '#/components/schemas/Common.uuid'
        agent:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: Agent ID of agent associated with this session
        agents:
          type: array
          items:
            $ref: '#/components/schemas/Common.uuid'
        situation:
          type: string
          nullable: true
          description: Session situation
          default: null
        system_template:
          type: string
          description: A specific system prompt template that sets the background for this session
        render_templates:
          type: boolean
          description: Render system and assistant message content as jinja templates
          default: true
        token_budget:
          type: integer
          format: uint16
          nullable: true
          description: Threshold value for the adaptive context functionality
          default: null
        context_overflow:
          allOf:
            - $ref: '#/components/schemas/Sessions.ContextOverflowType'
          nullable: true
          description: Action to start on context window overflow
          default: null
        auto_run_tools:
          type: boolean
          description: |-
            Whether to auto-run the tool and send the tool results to the model when available.
            (default: false for sessions, true for tasks)

            If a tool call is made, the tool's output will be sent back to the model as the model's input.
            If a tool call is not made, the model's output will be returned as is.
          default: false
        forward_tool_calls:
          type: boolean
          description: Whether to forward tool calls to the model
          default: false
        recall_options:
          anyOf:
            - type: object
              allOf:
                - $ref: '#/components/schemas/Sessions.VectorDocSearch'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Sessions.TextOnlyDocSearch'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Sessions.HybridDocSearch'
              nullable: true
          description: Recall options for the session
          default: null
        metadata:
          type: object
          additionalProperties: {}
      description: Payload for creating a session
    Sessions.HybridDocSearch:
      type: object
      required:
        - mode
        - confidence
        - alpha
        - trigram_similarity_threshold
        - k_multiplier
      properties:
        mode:
          type: string
          enum:
            - hybrid
          description: The mode to use for the search.
          default: hybrid
        confidence:
          type: number
          minimum: -1
          maximum: 1
          description: The confidence cutoff level
          default: 0.5
        alpha:
          type: number
          minimum: 0
          maximum: 1
          description: The weight to apply to BM25 vs Vector search results. 0 => pure BM25; 1 => pure vector;
          default: 0.5
        mmr_strength:
          type: number
          minimum: 0
          description: MMR Strength (mmr_strength = 1 - mmr_lambda)
          maximum: 1
          exclusiveMaximum: true
          default: 0.5
        trigram_similarity_threshold:
          type: number
          minimum: 0
          maximum: 1
          description: The trigram_similarity_threshold cutoff level
          default: 0.6
        k_multiplier:
          type: integer
          format: int8
          minimum: 0
          description: The k_multiplier cutoff level to control how many intermediate results to fetch before final scoring
          default: 7
      allOf:
        - $ref: '#/components/schemas/Sessions.BaseDocSearch'
    Sessions.HybridDocSearchUpdate:
      type: object
      properties:
        mode:
          type: string
          enum:
            - hybrid
          description: The mode to use for the search.
          default: hybrid
        confidence:
          type: number
          minimum: -1
          maximum: 1
          description: The confidence cutoff level
          default: 0.5
        alpha:
          type: number
          minimum: 0
          maximum: 1
          description: The weight to apply to BM25 vs Vector search results. 0 => pure BM25; 1 => pure vector;
          default: 0.5
        mmr_strength:
          type: number
          minimum: 0
          description: MMR Strength (mmr_strength = 1 - mmr_lambda)
          maximum: 1
          exclusiveMaximum: true
          default: 0.5
        trigram_similarity_threshold:
          type: number
          minimum: 0
          maximum: 1
          description: The trigram_similarity_threshold cutoff level
          default: 0.6
        k_multiplier:
          type: integer
          format: int8
          minimum: 0
          description: The k_multiplier cutoff level to control how many intermediate results to fetch before final scoring
          default: 7
      allOf:
        - $ref: '#/components/schemas/Sessions.BaseDocSearchUpdate'
    Sessions.MultiAgentMultiUserSession:
      type: object
      required:
        - agents
        - users
      properties:
        agents:
          type: array
          items:
            $ref: '#/components/schemas/Common.uuid'
          minItems: 2
        users:
          type: array
          items:
            $ref: '#/components/schemas/Common.uuid'
          minItems: 2
      allOf:
        - $ref: '#/components/schemas/Sessions.Session'
    Sessions.MultiAgentNoUserSession:
      type: object
      required:
        - agents
      properties:
        agents:
          type: array
          items:
            $ref: '#/components/schemas/Common.uuid'
          minItems: 2
      allOf:
        - $ref: '#/components/schemas/Sessions.Session'
    Sessions.MultiAgentSingleUserSession:
      type: object
      required:
        - agents
        - user
      properties:
        agents:
          type: array
          items:
            $ref: '#/components/schemas/Common.uuid'
          minItems: 2
        user:
          $ref: '#/components/schemas/Common.uuid'
      allOf:
        - $ref: '#/components/schemas/Sessions.Session'
    Sessions.PatchSessionRequest:
      type: object
      properties:
        situation:
          type: string
          nullable: true
          description: Session situation
          default: null
        system_template:
          type: string
          description: A specific system prompt template that sets the background for this session
        render_templates:
          type: boolean
          description: Render system and assistant message content as jinja templates
          default: true
        token_budget:
          type: integer
          format: uint16
          nullable: true
          description: Threshold value for the adaptive context functionality
          default: null
        context_overflow:
          allOf:
            - $ref: '#/components/schemas/Sessions.ContextOverflowType'
          nullable: true
          description: Action to start on context window overflow
          default: null
        auto_run_tools:
          type: boolean
          description: |-
            Whether to auto-run the tool and send the tool results to the model when available.
            (default: false for sessions, true for tasks)

            If a tool call is made, the tool's output will be sent back to the model as the model's input.
            If a tool call is not made, the model's output will be returned as is.
          default: false
        forward_tool_calls:
          type: boolean
          description: Whether to forward tool calls to the model
          default: false
        recall_options:
          anyOf:
            - type: object
              allOf:
                - $ref: '#/components/schemas/Sessions.VectorDocSearchUpdate'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Sessions.TextOnlyDocSearchUpdate'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Sessions.HybridDocSearchUpdate'
              nullable: true
          description: Recall options for the session
          default: null
        metadata:
          type: object
          additionalProperties: {}
      description: Payload for patching a session
    Sessions.Session:
      type: object
      required:
        - situation
        - summary
        - render_templates
        - token_budget
        - context_overflow
        - auto_run_tools
        - forward_tool_calls
        - id
        - created_at
        - updated_at
        - kind
      properties:
        situation:
          type: string
          nullable: true
          description: Session situation
          default: null
        system_template:
          type: string
          description: A specific system prompt template that sets the background for this session
        summary:
          type: string
          nullable: true
          description: Summary (null at the beginning) - generated automatically after every interaction
          default: null
          readOnly: true
        render_templates:
          type: boolean
          description: Render system and assistant message content as jinja templates
          default: true
        token_budget:
          type: integer
          format: uint16
          nullable: true
          description: Threshold value for the adaptive context functionality
          default: null
        context_overflow:
          allOf:
            - $ref: '#/components/schemas/Sessions.ContextOverflowType'
          nullable: true
          description: Action to start on context window overflow
          default: null
        auto_run_tools:
          type: boolean
          description: |-
            Whether to auto-run the tool and send the tool results to the model when available.
            (default: false for sessions, true for tasks)

            If a tool call is made, the tool's output will be sent back to the model as the model's input.
            If a tool call is not made, the model's output will be returned as is.
          default: false
        forward_tool_calls:
          type: boolean
          description: Whether to forward tool calls to the model
          default: false
        recall_options:
          anyOf:
            - type: object
              allOf:
                - $ref: '#/components/schemas/Sessions.VectorDocSearch'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Sessions.TextOnlyDocSearch'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Sessions.HybridDocSearch'
              nullable: true
          description: Recall options for the session
          default: null
        id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          readOnly: true
        metadata:
          type: object
          additionalProperties: {}
        created_at:
          type: string
          format: date-time
          description: When this resource was created as UTC date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: When this resource was updated as UTC date-time
          readOnly: true
        kind:
          type: string
          description: Discriminator property for Session.
      discriminator:
        propertyName: kind
        mapping:
          single_agent_no_user: '#/components/schemas/Sessions.SingleAgentNoUserSession'
          single_agent_single_user: '#/components/schemas/Sessions.SingleAgentSingleUserSession'
          single_agent_multi_user: '#/components/schemas/Sessions.SingleAgentMultiUserSession'
          multi_agent_no_user: '#/components/schemas/Sessions.MultiAgentNoUserSession'
          multi_agent_single_user: '#/components/schemas/Sessions.MultiAgentSingleUserSession'
          multi_agent_multi_user: '#/components/schemas/Sessions.MultiAgentMultiUserSession'
    Sessions.SingleAgentMultiUserSession:
      type: object
      required:
        - agent
        - users
      properties:
        agent:
          $ref: '#/components/schemas/Common.uuid'
        users:
          type: array
          items:
            $ref: '#/components/schemas/Common.uuid'
          minItems: 2
      allOf:
        - $ref: '#/components/schemas/Sessions.Session'
    Sessions.SingleAgentNoUserSession:
      type: object
      required:
        - agent
      properties:
        agent:
          $ref: '#/components/schemas/Common.uuid'
      allOf:
        - $ref: '#/components/schemas/Sessions.Session'
    Sessions.SingleAgentSingleUserSession:
      type: object
      required:
        - agent
        - user
      properties:
        agent:
          $ref: '#/components/schemas/Common.uuid'
        user:
          $ref: '#/components/schemas/Common.uuid'
      allOf:
        - $ref: '#/components/schemas/Sessions.Session'
    Sessions.TextOnlyDocSearch:
      type: object
      required:
        - mode
        - trigram_similarity_threshold
      properties:
        mode:
          type: string
          enum:
            - text
          description: The mode to use for the search.
          default: text
        trigram_similarity_threshold:
          type: number
          minimum: 0
          maximum: 1
          description: The trigram_similarity_threshold cutoff level
          default: 0.6
      allOf:
        - $ref: '#/components/schemas/Sessions.BaseDocSearch'
    Sessions.TextOnlyDocSearchUpdate:
      type: object
      properties:
        mode:
          type: string
          enum:
            - text
          description: The mode to use for the search.
          default: text
        trigram_similarity_threshold:
          type: number
          minimum: 0
          maximum: 1
          description: The trigram_similarity_threshold cutoff level
          default: 0.6
      allOf:
        - $ref: '#/components/schemas/Sessions.BaseDocSearchUpdate'
    Sessions.UpdateSessionRequest:
      type: object
      required:
        - situation
        - render_templates
        - token_budget
        - context_overflow
        - auto_run_tools
        - forward_tool_calls
      properties:
        situation:
          type: string
          nullable: true
          description: Session situation
          default: null
        system_template:
          type: string
          description: A specific system prompt template that sets the background for this session
        render_templates:
          type: boolean
          description: Render system and assistant message content as jinja templates
          default: true
        token_budget:
          type: integer
          format: uint16
          nullable: true
          description: Threshold value for the adaptive context functionality
          default: null
        context_overflow:
          allOf:
            - $ref: '#/components/schemas/Sessions.ContextOverflowType'
          nullable: true
          description: Action to start on context window overflow
          default: null
        auto_run_tools:
          type: boolean
          description: |-
            Whether to auto-run the tool and send the tool results to the model when available.
            (default: false for sessions, true for tasks)

            If a tool call is made, the tool's output will be sent back to the model as the model's input.
            If a tool call is not made, the model's output will be returned as is.
          default: false
        forward_tool_calls:
          type: boolean
          description: Whether to forward tool calls to the model
          default: false
        recall_options:
          anyOf:
            - type: object
              allOf:
                - $ref: '#/components/schemas/Sessions.VectorDocSearch'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Sessions.TextOnlyDocSearch'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Sessions.HybridDocSearch'
              nullable: true
          description: Recall options for the session
          default: null
        metadata:
          type: object
          additionalProperties: {}
      description: Payload for updating a session
    Sessions.VectorDocSearch:
      type: object
      required:
        - mode
        - confidence
      properties:
        mode:
          type: string
          enum:
            - vector
          description: The mode to use for the search.
          default: vector
        confidence:
          type: number
          minimum: -1
          maximum: 1
          description: The confidence cutoff level
          default: 0.5
        mmr_strength:
          type: number
          minimum: 0
          description: MMR Strength (mmr_strength = 1 - mmr_lambda)
          maximum: 1
          exclusiveMaximum: true
          default: 0.5
      allOf:
        - $ref: '#/components/schemas/Sessions.BaseDocSearch'
    Sessions.VectorDocSearchUpdate:
      type: object
      properties:
        mode:
          type: string
          enum:
            - vector
          description: The mode to use for the search.
          default: vector
        confidence:
          type: number
          minimum: -1
          maximum: 1
          description: The confidence cutoff level
          default: 0.5
        mmr_strength:
          type: number
          minimum: 0
          description: MMR Strength (mmr_strength = 1 - mmr_lambda)
          maximum: 1
          exclusiveMaximum: true
          default: 0.5
      allOf:
        - $ref: '#/components/schemas/Sessions.BaseDocSearchUpdate'
    Tasks.CaseThen:
      type: object
      required:
        - case
        - then
      properties:
        case:
          anyOf:
            - $ref: '#/components/schemas/Common.PyExpression'
            - type: string
              enum:
                - _
          description: The condition to evaluate
        then:
          anyOf:
            - $ref: '#/components/schemas/Tasks.EvaluateStep'
            - $ref: '#/components/schemas/Tasks.ToolCallStep'
            - $ref: '#/components/schemas/Tasks.PromptStep'
            - $ref: '#/components/schemas/Tasks.GetStep'
            - $ref: '#/components/schemas/Tasks.SetStep'
            - $ref: '#/components/schemas/Tasks.LogStep'
            - $ref: '#/components/schemas/Tasks.YieldStep'
            - $ref: '#/components/schemas/Tasks.ReturnStep'
            - $ref: '#/components/schemas/Tasks.SleepStep'
            - $ref: '#/components/schemas/Tasks.ErrorWorkflowStep'
            - $ref: '#/components/schemas/Tasks.WaitForInputStep'
          description: The steps to run if the condition is true
    Tasks.CaseThenUpdateItem:
      type: object
      required:
        - case
        - then
      properties:
        case:
          anyOf:
            - $ref: '#/components/schemas/Common.PyExpression'
            - type: string
              enum:
                - _
          description: The condition to evaluate
        then:
          anyOf:
            - $ref: '#/components/schemas/Tasks.EvaluateStep'
            - $ref: '#/components/schemas/Tasks.ToolCallStep'
            - $ref: '#/components/schemas/Tasks.PromptStepUpdateItem'
            - $ref: '#/components/schemas/Tasks.GetStep'
            - $ref: '#/components/schemas/Tasks.SetStep'
            - $ref: '#/components/schemas/Tasks.LogStep'
            - $ref: '#/components/schemas/Tasks.YieldStep'
            - $ref: '#/components/schemas/Tasks.ReturnStep'
            - $ref: '#/components/schemas/Tasks.SleepStep'
            - $ref: '#/components/schemas/Tasks.ErrorWorkflowStep'
            - $ref: '#/components/schemas/Tasks.WaitForInputStep'
          description: The steps to run if the condition is true
    Tasks.CreateTaskRequest:
      type: object
      required:
        - name
        - description
        - main
        - input_schema
        - tools
        - inherit_tools
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/Common.displayName'
          description: The name of the task.
        canonical_name:
          allOf:
            - $ref: '#/components/schemas/Common.canonicalName'
          description: The canonical name of the task.
        description:
          type: string
          description: The description of the task.
          default: ''
        main:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Tasks.EvaluateStep'
              - $ref: '#/components/schemas/Tasks.ToolCallStep'
              - $ref: '#/components/schemas/Tasks.PromptStep'
              - $ref: '#/components/schemas/Tasks.GetStep'
              - $ref: '#/components/schemas/Tasks.SetStep'
              - $ref: '#/components/schemas/Tasks.LogStep'
              - $ref: '#/components/schemas/Tasks.YieldStep'
              - $ref: '#/components/schemas/Tasks.ReturnStep'
              - $ref: '#/components/schemas/Tasks.SleepStep'
              - $ref: '#/components/schemas/Tasks.ErrorWorkflowStep'
              - $ref: '#/components/schemas/Tasks.WaitForInputStep'
              - $ref: '#/components/schemas/Tasks.IfElseWorkflowStep'
              - $ref: '#/components/schemas/Tasks.SwitchStep'
              - $ref: '#/components/schemas/Tasks.ForeachStep'
              - $ref: '#/components/schemas/Tasks.ParallelStep'
              - type: object
                required:
                  - kind_
                  - over
                  - map
                properties:
                  kind_:
                    type: string
                    enum:
                      - map_reduce
                    default: map_reduce
                    readOnly: true
                  over:
                    allOf:
                      - $ref: '#/components/schemas/Common.PyExpression'
                    description: The variable to iterate over
                  map:
                    anyOf:
                      - $ref: '#/components/schemas/Tasks.EvaluateStep'
                      - $ref: '#/components/schemas/Tasks.ToolCallStep'
                      - $ref: '#/components/schemas/Tasks.PromptStep'
                      - $ref: '#/components/schemas/Tasks.GetStep'
                      - $ref: '#/components/schemas/Tasks.SetStep'
                      - $ref: '#/components/schemas/Tasks.LogStep'
                      - $ref: '#/components/schemas/Tasks.YieldStep'
                    description: The steps to run for each iteration
                  reduce:
                    allOf:
                      - $ref: '#/components/schemas/Common.PyExpression'
                    description: |-
                      The expression to reduce the results.
                      If not provided, the results are collected and returned as a list.
                      A special parameter named `results` is the accumulator and `_` is the current value.
                  initial:
                    description: The initial value of the reduce expression
                    default: []
                  parallelism:
                    type: integer
                    format: uint16
                    minimum: 1
                    maximum: 100
                    description: Whether to run the reduce expression in parallel and how many items to run in each batch
                allOf:
                  - type: object
                    required:
                      - kind_
                    properties:
                      kind_:
                        type: string
                        enum:
                          - map_reduce
                        description: The kind of step
                        readOnly: true
                      label:
                        allOf:
                          - $ref: '#/components/schemas/Common.stepLabel'
                        description: The label of this step for referencing it from other steps
                    discriminator:
                      propertyName: kind_
          minItems: 1
          description: The entrypoint of the task.
        input_schema:
          type: object
          additionalProperties: {}
          nullable: true
          description: The schema for the input to the task. `null` means all inputs are valid.
          default: null
        tools:
          type: array
          items:
            $ref: '#/components/schemas/Tasks.TaskTool'
          description: Tools defined specifically for this task not included in the Agent itself.
          default: []
        inherit_tools:
          type: boolean
          description: Whether to inherit tools from the parent agent or not. Defaults to false.
          default: false
        metadata:
          type: object
          additionalProperties: {}
      additionalProperties:
        type: array
        items:
          anyOf:
            - $ref: '#/components/schemas/Tasks.EvaluateStep'
            - $ref: '#/components/schemas/Tasks.ToolCallStep'
            - $ref: '#/components/schemas/Tasks.PromptStep'
            - $ref: '#/components/schemas/Tasks.GetStep'
            - $ref: '#/components/schemas/Tasks.SetStep'
            - $ref: '#/components/schemas/Tasks.LogStep'
            - $ref: '#/components/schemas/Tasks.YieldStep'
            - $ref: '#/components/schemas/Tasks.ReturnStep'
            - $ref: '#/components/schemas/Tasks.SleepStep'
            - $ref: '#/components/schemas/Tasks.ErrorWorkflowStep'
            - $ref: '#/components/schemas/Tasks.WaitForInputStep'
            - $ref: '#/components/schemas/Tasks.IfElseWorkflowStep'
            - $ref: '#/components/schemas/Tasks.SwitchStep'
            - $ref: '#/components/schemas/Tasks.ForeachStep'
            - $ref: '#/components/schemas/Tasks.ParallelStep'
            - type: object
              required:
                - kind_
                - over
                - map
              properties:
                kind_:
                  type: string
                  enum:
                    - map_reduce
                  default: map_reduce
                  readOnly: true
                over:
                  allOf:
                    - $ref: '#/components/schemas/Common.PyExpression'
                  description: The variable to iterate over
                map:
                  anyOf:
                    - $ref: '#/components/schemas/Tasks.EvaluateStep'
                    - $ref: '#/components/schemas/Tasks.ToolCallStep'
                    - $ref: '#/components/schemas/Tasks.PromptStep'
                    - $ref: '#/components/schemas/Tasks.GetStep'
                    - $ref: '#/components/schemas/Tasks.SetStep'
                    - $ref: '#/components/schemas/Tasks.LogStep'
                    - $ref: '#/components/schemas/Tasks.YieldStep'
                  description: The steps to run for each iteration
                reduce:
                  allOf:
                    - $ref: '#/components/schemas/Common.PyExpression'
                  description: |-
                    The expression to reduce the results.
                    If not provided, the results are collected and returned as a list.
                    A special parameter named `results` is the accumulator and `_` is the current value.
                initial:
                  description: The initial value of the reduce expression
                  default: []
                parallelism:
                  type: integer
                  format: uint16
                  minimum: 1
                  maximum: 100
                  description: Whether to run the reduce expression in parallel and how many items to run in each batch
              allOf:
                - type: object
                  required:
                    - kind_
                  properties:
                    kind_:
                      type: string
                      enum:
                        - map_reduce
                      description: The kind of step
                      readOnly: true
                    label:
                      allOf:
                        - $ref: '#/components/schemas/Common.stepLabel'
                      description: The label of this step for referencing it from other steps
                  discriminator:
                    propertyName: kind_
      description: Payload for creating a task
    Tasks.ErrorWorkflowStep:
      type: object
      required:
        - kind_
        - error
      properties:
        kind_:
          type: string
          enum:
            - error
          default: error
          readOnly: true
        error:
          type: string
          description: The error message
      allOf:
        - type: object
          required:
            - kind_
          properties:
            kind_:
              type: string
              enum:
                - error
              description: The kind of step
              readOnly: true
            label:
              allOf:
                - $ref: '#/components/schemas/Common.stepLabel'
              description: The label of this step for referencing it from other steps
          discriminator:
            propertyName: kind_
            mapping: {}
    Tasks.EvaluateStep:
      type: object
      required:
        - kind_
        - evaluate
      properties:
        kind_:
          type: string
          enum:
            - evaluate
          default: evaluate
          readOnly: true
        evaluate:
          type: object
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/Common.PyExpression'
              - type: object
                additionalProperties: {}
          description: The expression to evaluate
      allOf:
        - type: object
          required:
            - kind_
          properties:
            kind_:
              type: string
              enum:
                - evaluate
              description: The kind of step
              readOnly: true
            label:
              allOf:
                - $ref: '#/components/schemas/Common.stepLabel'
              description: The label of this step for referencing it from other steps
          discriminator:
            propertyName: kind_
            mapping: {}
    Tasks.ForeachDo:
      type: object
      required:
        - in
        - do
      properties:
        in:
          allOf:
            - $ref: '#/components/schemas/Common.PyExpression'
          description: |-
            The variable to iterate over.
            VALIDATION: Should NOT return more than 1000 elements.
        do:
          anyOf:
            - $ref: '#/components/schemas/Tasks.WaitForInputStep'
            - $ref: '#/components/schemas/Tasks.EvaluateStep'
            - $ref: '#/components/schemas/Tasks.ToolCallStep'
            - $ref: '#/components/schemas/Tasks.PromptStep'
            - $ref: '#/components/schemas/Tasks.GetStep'
            - $ref: '#/components/schemas/Tasks.SetStep'
            - $ref: '#/components/schemas/Tasks.LogStep'
            - $ref: '#/components/schemas/Tasks.YieldStep'
          description: The steps to run for each iteration
    Tasks.ForeachDoUpdateItem:
      type: object
      required:
        - in
        - do
      properties:
        in:
          allOf:
            - $ref: '#/components/schemas/Common.PyExpression'
          description: |-
            The variable to iterate over.
            VALIDATION: Should NOT return more than 1000 elements.
        do:
          anyOf:
            - $ref: '#/components/schemas/Tasks.WaitForInputStep'
            - $ref: '#/components/schemas/Tasks.EvaluateStep'
            - $ref: '#/components/schemas/Tasks.ToolCallStep'
            - $ref: '#/components/schemas/Tasks.PromptStepUpdateItem'
            - $ref: '#/components/schemas/Tasks.GetStep'
            - $ref: '#/components/schemas/Tasks.SetStep'
            - $ref: '#/components/schemas/Tasks.LogStep'
            - $ref: '#/components/schemas/Tasks.YieldStep'
          description: The steps to run for each iteration
    Tasks.ForeachStep:
      type: object
      required:
        - kind_
        - foreach
      properties:
        kind_:
          type: string
          enum:
            - foreach
          default: foreach
          readOnly: true
        foreach:
          allOf:
            - $ref: '#/components/schemas/Tasks.ForeachDo'
          description: The steps to run for each iteration
      allOf:
        - type: object
          required:
            - kind_
          properties:
            kind_:
              type: string
              enum:
                - foreach
              description: The kind of step
              readOnly: true
            label:
              allOf:
                - $ref: '#/components/schemas/Common.stepLabel'
              description: The label of this step for referencing it from other steps
          discriminator:
            propertyName: kind_
            mapping: {}
    Tasks.ForeachStepUpdateItem:
      type: object
      required:
        - foreach
      properties:
        foreach:
          allOf:
            - $ref: '#/components/schemas/Tasks.ForeachDoUpdateItem'
          description: The steps to run for each iteration
      allOf:
        - type: object
          required:
            - kind_
          properties:
            label:
              allOf:
                - $ref: '#/components/schemas/Common.stepLabel'
              description: The label of this step for referencing it from other steps
            kind_:
              type: string
              description: Discriminator property for BaseWorkflowStep.
          discriminator:
            propertyName: kind_
            mapping: {}
    Tasks.GetStep:
      type: object
      required:
        - kind_
        - get
      properties:
        kind_:
          type: string
          enum:
            - get
          default: get
          readOnly: true
        get:
          type: string
          description: The key to get
      allOf:
        - type: object
          required:
            - kind_
          properties:
            kind_:
              type: string
              enum:
                - get
              description: The kind of step
              readOnly: true
            label:
              allOf:
                - $ref: '#/components/schemas/Common.stepLabel'
              description: The label of this step for referencing it from other steps
          discriminator:
            propertyName: kind_
            mapping: {}
    Tasks.IfElseWorkflowStep:
      type: object
      required:
        - kind_
        - if
        - then
        - else
      properties:
        kind_:
          type: string
          enum:
            - if_else
          default: if_else
          readOnly: true
        if:
          allOf:
            - $ref: '#/components/schemas/Common.PyExpression'
          description: The condition to evaluate
        then:
          anyOf:
            - $ref: '#/components/schemas/Tasks.WaitForInputStep'
            - $ref: '#/components/schemas/Tasks.EvaluateStep'
            - $ref: '#/components/schemas/Tasks.ToolCallStep'
            - $ref: '#/components/schemas/Tasks.PromptStep'
            - $ref: '#/components/schemas/Tasks.GetStep'
            - $ref: '#/components/schemas/Tasks.SetStep'
            - $ref: '#/components/schemas/Tasks.LogStep'
            - $ref: '#/components/schemas/Tasks.YieldStep'
            - $ref: '#/components/schemas/Tasks.ReturnStep'
            - $ref: '#/components/schemas/Tasks.SleepStep'
            - $ref: '#/components/schemas/Tasks.ErrorWorkflowStep'
            - $ref: '#/components/schemas/Tasks.IfElseWorkflowStep'
            - $ref: '#/components/schemas/Tasks.SwitchStep'
            - $ref: '#/components/schemas/Tasks.ForeachStep'
            - $ref: '#/components/schemas/Tasks.ParallelStep'
            - type: object
              required:
                - kind_
                - over
                - map
              properties:
                kind_:
                  type: string
                  enum:
                    - map_reduce
                  default: map_reduce
                  readOnly: true
                over:
                  allOf:
                    - $ref: '#/components/schemas/Common.PyExpression'
                  description: The variable to iterate over
                map:
                  anyOf:
                    - $ref: '#/components/schemas/Tasks.EvaluateStep'
                    - $ref: '#/components/schemas/Tasks.ToolCallStep'
                    - $ref: '#/components/schemas/Tasks.PromptStep'
                    - $ref: '#/components/schemas/Tasks.GetStep'
                    - $ref: '#/components/schemas/Tasks.SetStep'
                    - $ref: '#/components/schemas/Tasks.LogStep'
                    - $ref: '#/components/schemas/Tasks.YieldStep'
                  description: The steps to run for each iteration
                reduce:
                  allOf:
                    - $ref: '#/components/schemas/Common.PyExpression'
                  description: |-
                    The expression to reduce the results.
                    If not provided, the results are collected and returned as a list.
                    A special parameter named `results` is the accumulator and `_` is the current value.
                initial:
                  description: The initial value of the reduce expression
                  default: []
                parallelism:
                  type: integer
                  format: uint16
                  minimum: 1
                  maximum: 100
                  description: Whether to run the reduce expression in parallel and how many items to run in each batch
              allOf:
                - type: object
                  required:
                    - kind_
                  properties:
                    kind_:
                      type: string
                      enum:
                        - map_reduce
                      description: The kind of step
                      readOnly: true
                    label:
                      allOf:
                        - $ref: '#/components/schemas/Common.stepLabel'
                      description: The label of this step for referencing it from other steps
                  discriminator:
                    propertyName: kind_
          description: The steps to run if the condition is true
        else:
          anyOf:
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.WaitForInputStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.EvaluateStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.ToolCallStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.PromptStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.GetStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.SetStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.LogStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.YieldStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.ReturnStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.SleepStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.ErrorWorkflowStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.IfElseWorkflowStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.SwitchStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.ForeachStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.ParallelStep'
              nullable: true
            - type: object
              required:
                - kind_
                - over
                - map
              properties:
                kind_:
                  type: string
                  enum:
                    - map_reduce
                  default: map_reduce
                  readOnly: true
                over:
                  allOf:
                    - $ref: '#/components/schemas/Common.PyExpression'
                  description: The variable to iterate over
                map:
                  anyOf:
                    - $ref: '#/components/schemas/Tasks.EvaluateStep'
                    - $ref: '#/components/schemas/Tasks.ToolCallStep'
                    - $ref: '#/components/schemas/Tasks.PromptStep'
                    - $ref: '#/components/schemas/Tasks.GetStep'
                    - $ref: '#/components/schemas/Tasks.SetStep'
                    - $ref: '#/components/schemas/Tasks.LogStep'
                    - $ref: '#/components/schemas/Tasks.YieldStep'
                  description: The steps to run for each iteration
                reduce:
                  allOf:
                    - $ref: '#/components/schemas/Common.PyExpression'
                  description: |-
                    The expression to reduce the results.
                    If not provided, the results are collected and returned as a list.
                    A special parameter named `results` is the accumulator and `_` is the current value.
                initial:
                  description: The initial value of the reduce expression
                  default: []
                parallelism:
                  type: integer
                  format: uint16
                  minimum: 1
                  maximum: 100
                  description: Whether to run the reduce expression in parallel and how many items to run in each batch
              allOf:
                - type: object
                  required:
                    - kind_
                  properties:
                    kind_:
                      type: string
                      enum:
                        - map_reduce
                      description: The kind of step
                      readOnly: true
                    label:
                      allOf:
                        - $ref: '#/components/schemas/Common.stepLabel'
                      description: The label of this step for referencing it from other steps
                  discriminator:
                    propertyName: kind_
              nullable: true
          description: The steps to run if the condition is false
          default: null
      allOf:
        - type: object
          required:
            - kind_
          properties:
            kind_:
              type: string
              enum:
                - if_else
              description: The kind of step
              readOnly: true
            label:
              allOf:
                - $ref: '#/components/schemas/Common.stepLabel'
              description: The label of this step for referencing it from other steps
          discriminator:
            propertyName: kind_
            mapping: {}
    Tasks.IfElseWorkflowStepUpdateItem:
      type: object
      required:
        - if
        - then
        - else
      properties:
        if:
          allOf:
            - $ref: '#/components/schemas/Common.PyExpression'
          description: The condition to evaluate
        then:
          anyOf:
            - $ref: '#/components/schemas/Tasks.WaitForInputStep'
            - $ref: '#/components/schemas/Tasks.EvaluateStep'
            - $ref: '#/components/schemas/Tasks.ToolCallStep'
            - $ref: '#/components/schemas/Tasks.PromptStepUpdateItem'
            - $ref: '#/components/schemas/Tasks.GetStep'
            - $ref: '#/components/schemas/Tasks.SetStep'
            - $ref: '#/components/schemas/Tasks.LogStep'
            - $ref: '#/components/schemas/Tasks.YieldStep'
            - $ref: '#/components/schemas/Tasks.ReturnStep'
            - $ref: '#/components/schemas/Tasks.SleepStep'
            - $ref: '#/components/schemas/Tasks.ErrorWorkflowStep'
            - $ref: '#/components/schemas/Tasks.IfElseWorkflowStepUpdateItem'
            - $ref: '#/components/schemas/Tasks.SwitchStepUpdateItem'
            - $ref: '#/components/schemas/Tasks.ForeachStepUpdateItem'
            - $ref: '#/components/schemas/Tasks.ParallelStepUpdateItem'
            - type: object
              required:
                - over
                - map
              properties:
                over:
                  allOf:
                    - $ref: '#/components/schemas/Common.PyExpression'
                  description: The variable to iterate over
                map:
                  anyOf:
                    - $ref: '#/components/schemas/Tasks.EvaluateStep'
                    - $ref: '#/components/schemas/Tasks.ToolCallStep'
                    - $ref: '#/components/schemas/Tasks.PromptStepUpdateItem'
                    - $ref: '#/components/schemas/Tasks.GetStep'
                    - $ref: '#/components/schemas/Tasks.SetStep'
                    - $ref: '#/components/schemas/Tasks.LogStep'
                    - $ref: '#/components/schemas/Tasks.YieldStep'
                  description: The steps to run for each iteration
                reduce:
                  allOf:
                    - $ref: '#/components/schemas/Common.PyExpression'
                  description: |-
                    The expression to reduce the results.
                    If not provided, the results are collected and returned as a list.
                    A special parameter named `results` is the accumulator and `_` is the current value.
                initial:
                  description: The initial value of the reduce expression
                  default: []
                parallelism:
                  type: integer
                  format: uint16
                  minimum: 1
                  maximum: 100
                  description: Whether to run the reduce expression in parallel and how many items to run in each batch
              allOf:
                - type: object
                  required:
                    - kind_
                  properties:
                    label:
                      allOf:
                        - $ref: '#/components/schemas/Common.stepLabel'
                      description: The label of this step for referencing it from other steps
                    kind_:
                      type: string
                      description: Discriminator property for BaseWorkflowStep.
                  discriminator:
                    propertyName: kind_
          description: The steps to run if the condition is true
        else:
          anyOf:
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.WaitForInputStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.EvaluateStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.ToolCallStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.PromptStepUpdateItem'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.GetStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.SetStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.LogStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.YieldStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.ReturnStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.SleepStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.ErrorWorkflowStep'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.IfElseWorkflowStepUpdateItem'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.SwitchStepUpdateItem'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.ForeachStepUpdateItem'
              nullable: true
            - type: object
              allOf:
                - $ref: '#/components/schemas/Tasks.ParallelStepUpdateItem'
              nullable: true
            - type: object
              required:
                - over
                - map
              properties:
                over:
                  allOf:
                    - $ref: '#/components/schemas/Common.PyExpression'
                  description: The variable to iterate over
                map:
                  anyOf:
                    - $ref: '#/components/schemas/Tasks.EvaluateStep'
                    - $ref: '#/components/schemas/Tasks.ToolCallStep'
                    - $ref: '#/components/schemas/Tasks.PromptStepUpdateItem'
                    - $ref: '#/components/schemas/Tasks.GetStep'
                    - $ref: '#/components/schemas/Tasks.SetStep'
                    - $ref: '#/components/schemas/Tasks.LogStep'
                    - $ref: '#/components/schemas/Tasks.YieldStep'
                  description: The steps to run for each iteration
                reduce:
                  allOf:
                    - $ref: '#/components/schemas/Common.PyExpression'
                  description: |-
                    The expression to reduce the results.
                    If not provided, the results are collected and returned as a list.
                    A special parameter named `results` is the accumulator and `_` is the current value.
                initial:
                  description: The initial value of the reduce expression
                  default: []
                parallelism:
                  type: integer
                  format: uint16
                  minimum: 1
                  maximum: 100
                  description: Whether to run the reduce expression in parallel and how many items to run in each batch
              allOf:
                - type: object
                  required:
                    - kind_
                  properties:
                    label:
                      allOf:
                        - $ref: '#/components/schemas/Common.stepLabel'
                      description: The label of this step for referencing it from other steps
                    kind_:
                      type: string
                      description: Discriminator property for BaseWorkflowStep.
                  discriminator:
                    propertyName: kind_
              nullable: true
          description: The steps to run if the condition is false
          default: null
      allOf:
        - type: object
          required:
            - kind_
          properties:
            label:
              allOf:
                - $ref: '#/components/schemas/Common.stepLabel'
              description: The label of this step for referencing it from other steps
            kind_:
              type: string
              description: Discriminator property for BaseWorkflowStep.
          discriminator:
            propertyName: kind_
            mapping: {}
    Tasks.LogStep:
      type: object
      required:
        - kind_
        - log
      properties:
        kind_:
          type: string
          enum:
            - log
          default: log
          readOnly: true
        log:
          allOf:
            - $ref: '#/components/schemas/Common.JinjaTemplate'
          description: The value to log
      allOf:
        - type: object
          required:
            - kind_
          properties:
            kind_:
              type: string
              enum:
                - log
              description: The kind of step
              readOnly: true
            label:
              allOf:
                - $ref: '#/components/schemas/Common.stepLabel'
              description: The label of this step for referencing it from other steps
          discriminator:
            propertyName: kind_
            mapping: {}
    Tasks.ParallelStep:
      type: object
      required:
        - kind_
        - parallel
      properties:
        kind_:
          type: string
          enum:
            - parallel
          default: parallel
          readOnly: true
        parallel:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Tasks.EvaluateStep'
              - $ref: '#/components/schemas/Tasks.ToolCallStep'
              - $ref: '#/components/schemas/Tasks.PromptStep'
              - $ref: '#/components/schemas/Tasks.GetStep'
              - $ref: '#/components/schemas/Tasks.SetStep'
              - $ref: '#/components/schemas/Tasks.LogStep'
              - $ref: '#/components/schemas/Tasks.YieldStep'
          maxItems: 100
          description: The steps to run in parallel. Max concurrency will depend on the platform.
      allOf:
        - type: object
          required:
            - kind_
          properties:
            kind_:
              type: string
              enum:
                - parallel
              description: The kind of step
              readOnly: true
            label:
              allOf:
                - $ref: '#/components/schemas/Common.stepLabel'
              description: The label of this step for referencing it from other steps
          discriminator:
            propertyName: kind_
            mapping: {}
    Tasks.ParallelStepUpdateItem:
      type: object
      required:
        - parallel
      properties:
        parallel:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Tasks.EvaluateStep'
              - $ref: '#/components/schemas/Tasks.ToolCallStep'
              - $ref: '#/components/schemas/Tasks.PromptStepUpdateItem'
              - $ref: '#/components/schemas/Tasks.GetStep'
              - $ref: '#/components/schemas/Tasks.SetStep'
              - $ref: '#/components/schemas/Tasks.LogStep'
              - $ref: '#/components/schemas/Tasks.YieldStep'
          maxItems: 100
          description: The steps to run in parallel. Max concurrency will depend on the platform.
      allOf:
        - type: object
          required:
            - kind_
          properties:
            label:
              allOf:
                - $ref: '#/components/schemas/Common.stepLabel'
              description: The label of this step for referencing it from other steps
            kind_:
              type: string
              description: Discriminator property for BaseWorkflowStep.
          discriminator:
            propertyName: kind_
            mapping: {}
    Tasks.PatchTaskRequest:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/Common.displayName'
          description: The name of the task.
        canonical_name:
          allOf:
            - $ref: '#/components/schemas/Common.canonicalName'
          description: The canonical name of the task.
        description:
          type: string
          description: The description of the task.
          default: ''
        main:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Tasks.EvaluateStep'
              - $ref: '#/components/schemas/Tasks.ToolCallStep'
              - $ref: '#/components/schemas/Tasks.PromptStepUpdateItem'
              - $ref: '#/components/schemas/Tasks.GetStep'
              - $ref: '#/components/schemas/Tasks.SetStep'
              - $ref: '#/components/schemas/Tasks.LogStep'
              - $ref: '#/components/schemas/Tasks.YieldStep'
              - $ref: '#/components/schemas/Tasks.ReturnStep'
              - $ref: '#/components/schemas/Tasks.SleepStep'
              - $ref: '#/components/schemas/Tasks.ErrorWorkflowStep'
              - $ref: '#/components/schemas/Tasks.WaitForInputStep'
              - $ref: '#/components/schemas/Tasks.IfElseWorkflowStepUpdateItem'
              - $ref: '#/components/schemas/Tasks.SwitchStepUpdateItem'
              - $ref: '#/components/schemas/Tasks.ForeachStepUpdateItem'
              - $ref: '#/components/schemas/Tasks.ParallelStepUpdateItem'
              - type: object
                required:
                  - over
                  - map
                properties:
                  over:
                    allOf:
                      - $ref: '#/components/schemas/Common.PyExpression'
                    description: The variable to iterate over
                  map:
                    anyOf:
                      - $ref: '#/components/schemas/Tasks.EvaluateStep'
                      - $ref: '#/components/schemas/Tasks.ToolCallStep'
                      - $ref: '#/components/schemas/Tasks.PromptStepUpdateItem'
                      - $ref: '#/components/schemas/Tasks.GetStep'
                      - $ref: '#/components/schemas/Tasks.SetStep'
                      - $ref: '#/components/schemas/Tasks.LogStep'
                      - $ref: '#/components/schemas/Tasks.YieldStep'
                    description: The steps to run for each iteration
                  reduce:
                    allOf:
                      - $ref: '#/components/schemas/Common.PyExpression'
                    description: |-
                      The expression to reduce the results.
                      If not provided, the results are collected and returned as a list.
                      A special parameter named `results` is the accumulator and `_` is the current value.
                  initial:
                    description: The initial value of the reduce expression
                    default: []
                  parallelism:
                    type: integer
                    format: uint16
                    minimum: 1
                    maximum: 100
                    description: Whether to run the reduce expression in parallel and how many items to run in each batch
                allOf:
                  - type: object
                    required:
                      - kind_
                    properties:
                      label:
                        allOf:
                          - $ref: '#/components/schemas/Common.stepLabel'
                        description: The label of this step for referencing it from other steps
                      kind_:
                        type: string
                        description: Discriminator property for BaseWorkflowStep.
                    discriminator:
                      propertyName: kind_
          minItems: 1
          description: The entrypoint of the task.
        input_schema:
          type: object
          additionalProperties: {}
          nullable: true
          description: The schema for the input to the task. `null` means all inputs are valid.
          default: null
        tools:
          type: array
          items:
            $ref: '#/components/schemas/Tasks.TaskTool'
          description: Tools defined specifically for this task not included in the Agent itself.
          default: []
        inherit_tools:
          type: boolean
          description: Whether to inherit tools from the parent agent or not. Defaults to false.
          default: false
        metadata:
          type: object
          additionalProperties: {}
      additionalProperties:
        type: array
        items:
          anyOf:
            - $ref: '#/components/schemas/Tasks.EvaluateStep'
            - $ref: '#/components/schemas/Tasks.ToolCallStep'
            - $ref: '#/components/schemas/Tasks.PromptStepUpdateItem'
            - $ref: '#/components/schemas/Tasks.GetStep'
            - $ref: '#/components/schemas/Tasks.SetStep'
            - $ref: '#/components/schemas/Tasks.LogStep'
            - $ref: '#/components/schemas/Tasks.YieldStep'
            - $ref: '#/components/schemas/Tasks.ReturnStep'
            - $ref: '#/components/schemas/Tasks.SleepStep'
            - $ref: '#/components/schemas/Tasks.ErrorWorkflowStep'
            - $ref: '#/components/schemas/Tasks.WaitForInputStep'
            - $ref: '#/components/schemas/Tasks.IfElseWorkflowStepUpdateItem'
            - $ref: '#/components/schemas/Tasks.SwitchStepUpdateItem'
            - $ref: '#/components/schemas/Tasks.ForeachStepUpdateItem'
            - $ref: '#/components/schemas/Tasks.ParallelStepUpdateItem'
            - type: object
              required:
                - over
                - map
              properties:
                over:
                  allOf:
                    - $ref: '#/components/schemas/Common.PyExpression'
                  description: The variable to iterate over
                map:
                  anyOf:
                    - $ref: '#/components/schemas/Tasks.EvaluateStep'
                    - $ref: '#/components/schemas/Tasks.ToolCallStep'
                    - $ref: '#/components/schemas/Tasks.PromptStepUpdateItem'
                    - $ref: '#/components/schemas/Tasks.GetStep'
                    - $ref: '#/components/schemas/Tasks.SetStep'
                    - $ref: '#/components/schemas/Tasks.LogStep'
                    - $ref: '#/components/schemas/Tasks.YieldStep'
                  description: The steps to run for each iteration
                reduce:
                  allOf:
                    - $ref: '#/components/schemas/Common.PyExpression'
                  description: |-
                    The expression to reduce the results.
                    If not provided, the results are collected and returned as a list.
                    A special parameter named `results` is the accumulator and `_` is the current value.
                initial:
                  description: The initial value of the reduce expression
                  default: []
                parallelism:
                  type: integer
                  format: uint16
                  minimum: 1
                  maximum: 100
                  description: Whether to run the reduce expression in parallel and how many items to run in each batch
              allOf:
                - type: object
                  required:
                    - kind_
                  properties:
                    label:
                      allOf:
                        - $ref: '#/components/schemas/Common.stepLabel'
                      description: The label of this step for referencing it from other steps
                    kind_:
                      type: string
                      description: Discriminator property for BaseWorkflowStep.
                  discriminator:
                    propertyName: kind_
      description: Payload for patching a task
    Tasks.PromptStep:
      type: object
      required:
        - kind_
        - prompt
        - tools
        - auto_run_tools
        - disable_cache
      properties:
        kind_:
          type: string
          enum:
            - prompt
          default: prompt
          readOnly: true
        prompt:
          anyOf:
            - $ref: '#/components/schemas/Common.JinjaTemplate'
            - type: array
              items:
                type: object
                required:
                  - role
                  - content
                properties:
                  role:
                    allOf:
                      - $ref: '#/components/schemas/Entries.ChatMLRole'
                    description: The role of the message
                  tool_call_id:
                    type: string
                  content:
                    anyOf:
                      - type: object
                        allOf:
                          - $ref: '#/components/schemas/Common.JinjaTemplate'
                        nullable: true
                      - type: array
                        items:
                          $ref: '#/components/schemas/Common.JinjaTemplate'
                        nullable: true
                      - type: array
                        items:
                          anyOf:
                            - type: object
                              required:
                                - text
                                - type
                              properties:
                                text:
                                  $ref: '#/components/schemas/Common.JinjaTemplate'
                                type:
                                  type: string
                                  enum:
                                    - text
                                  description: The type (fixed to 'text')
                                  default: text
                            - type: object
                              required:
                                - image_url
                                - type
                              properties:
                                image_url:
                                  type: object
                                  required:
                                    - url
                                    - detail
                                  properties:
                                    url:
                                      type: string
                                      description: Image URL or base64 data url (e.g. `data:image/jpeg;base64,<the base64 encoded image>`)
                                    detail:
                                      allOf:
                                        - $ref: '#/components/schemas/Entries.ImageDetail'
                                      description: The detail level of the image
                                      default: auto
                                  description: The image URL
                                type:
                                  type: string
                                  enum:
                                    - image_url
                                  description: The type (fixed to 'image_url')
                                  default: image_url
                            - type: object
                              required:
                                - tool_use_id
                                - type
                                - content
                              properties:
                                tool_use_id:
                                  type: string
                                type:
                                  type: string
                                  enum:
                                    - tool_result
                                  default: tool_result
                                content:
                                  anyOf:
                                    - type: array
                                      items:
                                        type: object
                                        required:
                                          - text
                                          - type
                                        properties:
                                          text:
                                            $ref: '#/components/schemas/Common.JinjaTemplate'
                                          type:
                                            type: string
                                            enum:
                                              - text
                                            description: The type (fixed to 'text')
                                            default: text
                                    - type: array
                                      items:
                                        type: object
                                        required:
                                          - type
                                          - source
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - image
                                            default: image
                                          source:
                                            type: object
                                            required:
                                              - type
                                              - media_type
                                              - data
                                            properties:
                                              type:
                                                type: string
                                                enum:
                                                  - base64
                                                default: base64
                                              media_type:
                                                type: string
                                              data:
                                                $ref: '#/components/schemas/Common.JinjaTemplate'
                              description: Anthropic image content part
                        nullable: true
                    description: The content parts of the message
                  name:
                    type: string
                    description: Name
                  continue:
                    type: boolean
                    description: Whether to continue this message or return a new one
                  tool_calls:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/Tools.ChosenFunctionCall'
                        - $ref: '#/components/schemas/Tools.ChosenSystemCall'
                        - $ref: '#/components/schemas/Tools.ChosenComputer20241022'
                        - $ref: '#/components/schemas/Tools.ChosenTextEditor20241022'
                        - $ref: '#/components/schemas/Tools.ChosenBash20241022'
                    nullable: true
                    description: Tool calls generated by the model.
                    default: []
          description: The prompt to run
        tools:
          anyOf:
            - type: string
              enum:
                - all
            - type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/Tasks.ToolRef'
                  - $ref: '#/components/schemas/Tools.CreateToolRequest'
          description: The tools to use for the prompt
          default: all
        tool_choice:
          anyOf:
            - type: string
              enum:
                - auto
                - none
            - $ref: '#/components/schemas/Tools.NamedToolChoice'
          description: The tool choice for the prompt
        settings:
          type: object
          additionalProperties: {}
          description: Settings for the prompt
        unwrap:
          type: boolean
          description: Whether to unwrap the output of the prompt step, equivalent to `response.choices[0].message.content`
          default: false
        auto_run_tools:
          type: boolean
          description: |-
            Whether to auto-run the tool and send the tool results to the model when available.
            (default: true for prompt steps, false for sessions)

            If a tool call is made, the tool's output will be used as the model's input.
            If a tool call is not made, the model's output will be used as the next step's input.
          default: true
        disable_cache:
          type: boolean
          description: Whether to disable caching for the prompt step
          default: false
      allOf:
        - type: object
          required:
            - kind_
          properties:
            kind_:
              type: string
              enum:
                - prompt
              description: The kind of step
              readOnly: true
            label:
              allOf:
                - $ref: '#/components/schemas/Common.stepLabel'
              description: The label of this step for referencing it from other steps
          discriminator:
            propertyName: kind_
            mapping: {}
    Tasks.PromptStepUpdateItem:
      type: object
      required:
        - prompt
        - tools
        - auto_run_tools
        - disable_cache
      properties:
        prompt:
          anyOf:
            - $ref: '#/components/schemas/Common.JinjaTemplate'
            - type: array
              items:
                type: object
                required:
                  - role
                  - content
                properties:
                  role:
                    allOf:
                      - $ref: '#/components/schemas/Entries.ChatMLRole'
                    description: The role of the message
                  tool_call_id:
                    type: string
                  content:
                    anyOf:
                      - type: object
                        allOf:
                          - $ref: '#/components/schemas/Common.JinjaTemplate'
                        nullable: true
                      - type: array
                        items:
                          $ref: '#/components/schemas/Common.JinjaTemplate'
                        nullable: true
                      - type: array
                        items:
                          anyOf:
                            - type: object
                              required:
                                - text
                                - type
                              properties:
                                text:
                                  $ref: '#/components/schemas/Common.JinjaTemplate'
                                type:
                                  type: string
                                  enum:
                                    - text
                                  description: The type (fixed to 'text')
                                  default: text
                            - type: object
                              required:
                                - image_url
                                - type
                              properties:
                                image_url:
                                  type: object
                                  required:
                                    - url
                                    - detail
                                  properties:
                                    url:
                                      type: string
                                      description: Image URL or base64 data url (e.g. `data:image/jpeg;base64,<the base64 encoded image>`)
                                    detail:
                                      allOf:
                                        - $ref: '#/components/schemas/Entries.ImageDetail'
                                      description: The detail level of the image
                                      default: auto
                                  description: The image URL
                                type:
                                  type: string
                                  enum:
                                    - image_url
                                  description: The type (fixed to 'image_url')
                                  default: image_url
                            - type: object
                              required:
                                - tool_use_id
                                - type
                                - content
                              properties:
                                tool_use_id:
                                  type: string
                                type:
                                  type: string
                                  enum:
                                    - tool_result
                                  default: tool_result
                                content:
                                  anyOf:
                                    - type: array
                                      items:
                                        type: object
                                        required:
                                          - text
                                          - type
                                        properties:
                                          text:
                                            $ref: '#/components/schemas/Common.JinjaTemplate'
                                          type:
                                            type: string
                                            enum:
                                              - text
                                            description: The type (fixed to 'text')
                                            default: text
                                    - type: array
                                      items:
                                        type: object
                                        required:
                                          - type
                                          - source
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - image
                                            default: image
                                          source:
                                            type: object
                                            required:
                                              - type
                                              - media_type
                                              - data
                                            properties:
                                              type:
                                                type: string
                                                enum:
                                                  - base64
                                                default: base64
                                              media_type:
                                                type: string
                                              data:
                                                $ref: '#/components/schemas/Common.JinjaTemplate'
                              description: Anthropic image content part
                        nullable: true
                    description: The content parts of the message
                  name:
                    type: string
                    description: Name
                  continue:
                    type: boolean
                    description: Whether to continue this message or return a new one
                  tool_calls:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/Tools.ChosenFunctionCall'
                        - $ref: '#/components/schemas/Tools.ChosenSystemCall'
                        - $ref: '#/components/schemas/Tools.ChosenComputer20241022'
                        - $ref: '#/components/schemas/Tools.ChosenTextEditor20241022'
                        - $ref: '#/components/schemas/Tools.ChosenBash20241022'
                    nullable: true
                    description: Tool calls generated by the model.
                    default: []
          description: The prompt to run
        tools:
          anyOf:
            - type: string
              enum:
                - all
            - type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/Tasks.ToolRefUpdateItem'
                  - $ref: '#/components/schemas/Tools.CreateToolRequest'
          description: The tools to use for the prompt
          default: all
        tool_choice:
          anyOf:
            - type: string
              enum:
                - auto
                - none
            - $ref: '#/components/schemas/Tools.NamedToolChoice'
          description: The tool choice for the prompt
        settings:
          type: object
          additionalProperties: {}
          description: Settings for the prompt
        unwrap:
          type: boolean
          description: Whether to unwrap the output of the prompt step, equivalent to `response.choices[0].message.content`
          default: false
        auto_run_tools:
          type: boolean
          description: |-
            Whether to auto-run the tool and send the tool results to the model when available.
            (default: true for prompt steps, false for sessions)

            If a tool call is made, the tool's output will be used as the model's input.
            If a tool call is not made, the model's output will be used as the next step's input.
          default: true
        disable_cache:
          type: boolean
          description: Whether to disable caching for the prompt step
          default: false
      allOf:
        - type: object
          required:
            - kind_
          properties:
            label:
              allOf:
                - $ref: '#/components/schemas/Common.stepLabel'
              description: The label of this step for referencing it from other steps
            kind_:
              type: string
              description: Discriminator property for BaseWorkflowStep.
          discriminator:
            propertyName: kind_
            mapping: {}
    Tasks.ReturnStep:
      type: object
      required:
        - kind_
        - return
      properties:
        kind_:
          type: string
          enum:
            - return
          default: return
          readOnly: true
        return:
          type: object
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/Common.PyExpression'
              - type: array
                items:
                  $ref: '#/components/schemas/Common.PyExpression'
              - type: object
                additionalProperties:
                  $ref: '#/components/schemas/Common.PyExpression'
              - type: array
                items:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Common.PyExpression'
          description: The value to return
      allOf:
        - type: object
          required:
            - kind_
          properties:
            kind_:
              type: string
              enum:
                - return
              description: The kind of step
              readOnly: true
            label:
              allOf:
                - $ref: '#/components/schemas/Common.stepLabel'
              description: The label of this step for referencing it from other steps
          discriminator:
            propertyName: kind_
            mapping: {}
    Tasks.SetStep:
      type: object
      required:
        - kind_
        - set
      properties:
        kind_:
          type: string
          enum:
            - set
          default: set
          readOnly: true
        set:
          type: object
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/Common.PyExpression'
              - type: object
                additionalProperties: {}
          description: The value to set
      allOf:
        - type: object
          required:
            - kind_
          properties:
            kind_:
              type: string
              enum:
                - set
              description: The kind of step
              readOnly: true
            label:
              allOf:
                - $ref: '#/components/schemas/Common.stepLabel'
              description: The label of this step for referencing it from other steps
          discriminator:
            propertyName: kind_
            mapping: {}
    Tasks.SleepFor:
      type: object
      required:
        - seconds
        - minutes
        - hours
        - days
      properties:
        seconds:
          type: integer
          format: uint16
          minimum: 0
          maximum: 60
          description: The number of seconds to sleep for
          default: 0
        minutes:
          type: integer
          format: uint16
          minimum: 0
          maximum: 60
          description: The number of minutes to sleep for
          default: 0
        hours:
          type: integer
          format: uint16
          minimum: 0
          maximum: 24
          description: The number of hours to sleep for
          default: 0
        days:
          type: integer
          format: uint16
          minimum: 0
          maximum: 30
          description: The number of days to sleep for
          default: 0
    Tasks.SleepStep:
      type: object
      required:
        - kind_
        - sleep
      properties:
        kind_:
          type: string
          enum:
            - sleep
          default: sleep
          readOnly: true
        sleep:
          allOf:
            - $ref: '#/components/schemas/Tasks.SleepFor'
          description: The duration to sleep for (max 31 days)
      allOf:
        - type: object
          required:
            - kind_
          properties:
            kind_:
              type: string
              enum:
                - sleep
              description: The kind of step
              readOnly: true
            label:
              allOf:
                - $ref: '#/components/schemas/Common.stepLabel'
              description: The label of this step for referencing it from other steps
          discriminator:
            propertyName: kind_
            mapping: {}
    Tasks.SwitchStep:
      type: object
      required:
        - kind_
        - switch
      properties:
        kind_:
          type: string
          enum:
            - switch
          default: switch
          readOnly: true
        switch:
          type: array
          items:
            $ref: '#/components/schemas/Tasks.CaseThen'
          minItems: 1
          description: The cond tree
      allOf:
        - type: object
          required:
            - kind_
          properties:
            kind_:
              type: string
              enum:
                - switch
              description: The kind of step
              readOnly: true
            label:
              allOf:
                - $ref: '#/components/schemas/Common.stepLabel'
              description: The label of this step for referencing it from other steps
          discriminator:
            propertyName: kind_
            mapping: {}
    Tasks.SwitchStepUpdateItem:
      type: object
      required:
        - switch
      properties:
        switch:
          type: array
          items:
            $ref: '#/components/schemas/Tasks.CaseThenUpdateItem'
          minItems: 1
          description: The cond tree
      allOf:
        - type: object
          required:
            - kind_
          properties:
            label:
              allOf:
                - $ref: '#/components/schemas/Common.stepLabel'
              description: The label of this step for referencing it from other steps
            kind_:
              type: string
              description: Discriminator property for BaseWorkflowStep.
          discriminator:
            propertyName: kind_
            mapping: {}
    Tasks.Task:
      type: object
      required:
        - name
        - description
        - main
        - input_schema
        - tools
        - inherit_tools
        - id
        - created_at
        - updated_at
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/Common.displayName'
          description: The name of the task.
        canonical_name:
          allOf:
            - $ref: '#/components/schemas/Common.canonicalName'
          description: The canonical name of the task.
        description:
          type: string
          description: The description of the task.
          default: ''
        main:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Tasks.EvaluateStep'
              - $ref: '#/components/schemas/Tasks.ToolCallStep'
              - $ref: '#/components/schemas/Tasks.PromptStep'
              - $ref: '#/components/schemas/Tasks.GetStep'
              - $ref: '#/components/schemas/Tasks.SetStep'
              - $ref: '#/components/schemas/Tasks.LogStep'
              - $ref: '#/components/schemas/Tasks.YieldStep'
              - $ref: '#/components/schemas/Tasks.ReturnStep'
              - $ref: '#/components/schemas/Tasks.SleepStep'
              - $ref: '#/components/schemas/Tasks.ErrorWorkflowStep'
              - $ref: '#/components/schemas/Tasks.WaitForInputStep'
              - $ref: '#/components/schemas/Tasks.IfElseWorkflowStep'
              - $ref: '#/components/schemas/Tasks.SwitchStep'
              - $ref: '#/components/schemas/Tasks.ForeachStep'
              - $ref: '#/components/schemas/Tasks.ParallelStep'
              - type: object
                required:
                  - kind_
                  - over
                  - map
                properties:
                  kind_:
                    type: string
                    enum:
                      - map_reduce
                    default: map_reduce
                    readOnly: true
                  over:
                    allOf:
                      - $ref: '#/components/schemas/Common.PyExpression'
                    description: The variable to iterate over
                  map:
                    anyOf:
                      - $ref: '#/components/schemas/Tasks.EvaluateStep'
                      - $ref: '#/components/schemas/Tasks.ToolCallStep'
                      - $ref: '#/components/schemas/Tasks.PromptStep'
                      - $ref: '#/components/schemas/Tasks.GetStep'
                      - $ref: '#/components/schemas/Tasks.SetStep'
                      - $ref: '#/components/schemas/Tasks.LogStep'
                      - $ref: '#/components/schemas/Tasks.YieldStep'
                    description: The steps to run for each iteration
                  reduce:
                    allOf:
                      - $ref: '#/components/schemas/Common.PyExpression'
                    description: |-
                      The expression to reduce the results.
                      If not provided, the results are collected and returned as a list.
                      A special parameter named `results` is the accumulator and `_` is the current value.
                  initial:
                    description: The initial value of the reduce expression
                    default: []
                  parallelism:
                    type: integer
                    format: uint16
                    minimum: 1
                    maximum: 100
                    description: Whether to run the reduce expression in parallel and how many items to run in each batch
                allOf:
                  - type: object
                    required:
                      - kind_
                    properties:
                      kind_:
                        type: string
                        enum:
                          - map_reduce
                        description: The kind of step
                        readOnly: true
                      label:
                        allOf:
                          - $ref: '#/components/schemas/Common.stepLabel'
                        description: The label of this step for referencing it from other steps
                    discriminator:
                      propertyName: kind_
          minItems: 1
          description: The entrypoint of the task.
        input_schema:
          type: object
          additionalProperties: {}
          nullable: true
          description: The schema for the input to the task. `null` means all inputs are valid.
          default: null
        tools:
          type: array
          items:
            $ref: '#/components/schemas/Tasks.TaskTool'
          description: Tools defined specifically for this task not included in the Agent itself.
          default: []
        inherit_tools:
          type: boolean
          description: Whether to inherit tools from the parent agent or not. Defaults to false.
          default: false
        id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          readOnly: true
        created_at:
          type: string
          format: date-time
          description: When this resource was created as UTC date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: When this resource was updated as UTC date-time
          readOnly: true
        metadata:
          type: object
          additionalProperties: {}
      additionalProperties:
        type: array
        items:
          anyOf:
            - $ref: '#/components/schemas/Tasks.EvaluateStep'
            - $ref: '#/components/schemas/Tasks.ToolCallStep'
            - $ref: '#/components/schemas/Tasks.PromptStep'
            - $ref: '#/components/schemas/Tasks.GetStep'
            - $ref: '#/components/schemas/Tasks.SetStep'
            - $ref: '#/components/schemas/Tasks.LogStep'
            - $ref: '#/components/schemas/Tasks.YieldStep'
            - $ref: '#/components/schemas/Tasks.ReturnStep'
            - $ref: '#/components/schemas/Tasks.SleepStep'
            - $ref: '#/components/schemas/Tasks.ErrorWorkflowStep'
            - $ref: '#/components/schemas/Tasks.WaitForInputStep'
            - $ref: '#/components/schemas/Tasks.IfElseWorkflowStep'
            - $ref: '#/components/schemas/Tasks.SwitchStep'
            - $ref: '#/components/schemas/Tasks.ForeachStep'
            - $ref: '#/components/schemas/Tasks.ParallelStep'
            - type: object
              required:
                - kind_
                - over
                - map
              properties:
                kind_:
                  type: string
                  enum:
                    - map_reduce
                  default: map_reduce
                  readOnly: true
                over:
                  allOf:
                    - $ref: '#/components/schemas/Common.PyExpression'
                  description: The variable to iterate over
                map:
                  anyOf:
                    - $ref: '#/components/schemas/Tasks.EvaluateStep'
                    - $ref: '#/components/schemas/Tasks.ToolCallStep'
                    - $ref: '#/components/schemas/Tasks.PromptStep'
                    - $ref: '#/components/schemas/Tasks.GetStep'
                    - $ref: '#/components/schemas/Tasks.SetStep'
                    - $ref: '#/components/schemas/Tasks.LogStep'
                    - $ref: '#/components/schemas/Tasks.YieldStep'
                  description: The steps to run for each iteration
                reduce:
                  allOf:
                    - $ref: '#/components/schemas/Common.PyExpression'
                  description: |-
                    The expression to reduce the results.
                    If not provided, the results are collected and returned as a list.
                    A special parameter named `results` is the accumulator and `_` is the current value.
                initial:
                  description: The initial value of the reduce expression
                  default: []
                parallelism:
                  type: integer
                  format: uint16
                  minimum: 1
                  maximum: 100
                  description: Whether to run the reduce expression in parallel and how many items to run in each batch
              allOf:
                - type: object
                  required:
                    - kind_
                  properties:
                    kind_:
                      type: string
                      enum:
                        - map_reduce
                      description: The kind of step
                      readOnly: true
                    label:
                      allOf:
                        - $ref: '#/components/schemas/Common.stepLabel'
                      description: The label of this step for referencing it from other steps
                  discriminator:
                    propertyName: kind_
      description: Object describing a Task
    Tasks.TaskTool:
      type: object
      properties:
        inherited:
          type: boolean
          description: 'Read-only: Whether the tool was inherited or not. Only applies within tasks.'
          default: false
          readOnly: true
      allOf:
        - $ref: '#/components/schemas/Tools.CreateToolRequest'
    Tasks.ToolCallStep:
      type: object
      required:
        - kind_
        - tool
        - arguments
      properties:
        kind_:
          type: string
          enum:
            - tool_call
          default: tool_call
          readOnly: true
        tool:
          allOf:
            - $ref: '#/components/schemas/Common.validPythonIdentifier'
          description: The tool to run
        arguments:
          anyOf:
            - type: object
              additionalProperties: {}
            - type: string
              enum:
                - _
          description: The input parameters for the tool (defaults to last step output)
          default: _
      allOf:
        - type: object
          required:
            - kind_
          properties:
            kind_:
              type: string
              enum:
                - tool_call
              description: The kind of step
              readOnly: true
            label:
              allOf:
                - $ref: '#/components/schemas/Common.stepLabel'
              description: The label of this step for referencing it from other steps
          discriminator:
            propertyName: kind_
            mapping: {}
    Tasks.ToolRef:
      type: object
      required:
        - ref
      properties:
        ref:
          anyOf:
            - $ref: '#/components/schemas/Tasks.ToolRefById'
            - $ref: '#/components/schemas/Tasks.ToolRefByName'
      description: Reference to a tool
    Tasks.ToolRefById:
      type: object
      properties:
        id:
          type: string
      description: Reference to a tool by id
    Tasks.ToolRefByName:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Common.validPythonIdentifier'
      description: Reference to a tool by name
    Tasks.ToolRefUpdateItem:
      type: object
      description: Reference to a tool
    Tasks.UpdateTaskRequest:
      type: object
      required:
        - name
        - description
        - main
        - input_schema
        - tools
        - inherit_tools
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/Common.displayName'
          description: The name of the task.
        canonical_name:
          allOf:
            - $ref: '#/components/schemas/Common.canonicalName'
          description: The canonical name of the task.
        description:
          type: string
          description: The description of the task.
          default: ''
        main:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Tasks.EvaluateStep'
              - $ref: '#/components/schemas/Tasks.ToolCallStep'
              - $ref: '#/components/schemas/Tasks.PromptStep'
              - $ref: '#/components/schemas/Tasks.GetStep'
              - $ref: '#/components/schemas/Tasks.SetStep'
              - $ref: '#/components/schemas/Tasks.LogStep'
              - $ref: '#/components/schemas/Tasks.YieldStep'
              - $ref: '#/components/schemas/Tasks.ReturnStep'
              - $ref: '#/components/schemas/Tasks.SleepStep'
              - $ref: '#/components/schemas/Tasks.ErrorWorkflowStep'
              - $ref: '#/components/schemas/Tasks.WaitForInputStep'
              - $ref: '#/components/schemas/Tasks.IfElseWorkflowStep'
              - $ref: '#/components/schemas/Tasks.SwitchStep'
              - $ref: '#/components/schemas/Tasks.ForeachStep'
              - $ref: '#/components/schemas/Tasks.ParallelStep'
              - type: object
                required:
                  - kind_
                  - over
                  - map
                properties:
                  kind_:
                    type: string
                    enum:
                      - map_reduce
                    default: map_reduce
                    readOnly: true
                  over:
                    allOf:
                      - $ref: '#/components/schemas/Common.PyExpression'
                    description: The variable to iterate over
                  map:
                    anyOf:
                      - $ref: '#/components/schemas/Tasks.EvaluateStep'
                      - $ref: '#/components/schemas/Tasks.ToolCallStep'
                      - $ref: '#/components/schemas/Tasks.PromptStep'
                      - $ref: '#/components/schemas/Tasks.GetStep'
                      - $ref: '#/components/schemas/Tasks.SetStep'
                      - $ref: '#/components/schemas/Tasks.LogStep'
                      - $ref: '#/components/schemas/Tasks.YieldStep'
                    description: The steps to run for each iteration
                  reduce:
                    allOf:
                      - $ref: '#/components/schemas/Common.PyExpression'
                    description: |-
                      The expression to reduce the results.
                      If not provided, the results are collected and returned as a list.
                      A special parameter named `results` is the accumulator and `_` is the current value.
                  initial:
                    description: The initial value of the reduce expression
                    default: []
                  parallelism:
                    type: integer
                    format: uint16
                    minimum: 1
                    maximum: 100
                    description: Whether to run the reduce expression in parallel and how many items to run in each batch
                allOf:
                  - type: object
                    required:
                      - kind_
                    properties:
                      kind_:
                        type: string
                        enum:
                          - map_reduce
                        description: The kind of step
                        readOnly: true
                      label:
                        allOf:
                          - $ref: '#/components/schemas/Common.stepLabel'
                        description: The label of this step for referencing it from other steps
                    discriminator:
                      propertyName: kind_
          minItems: 1
          description: The entrypoint of the task.
        input_schema:
          type: object
          additionalProperties: {}
          nullable: true
          description: The schema for the input to the task. `null` means all inputs are valid.
          default: null
        tools:
          type: array
          items:
            $ref: '#/components/schemas/Tasks.TaskTool'
          description: Tools defined specifically for this task not included in the Agent itself.
          default: []
        inherit_tools:
          type: boolean
          description: Whether to inherit tools from the parent agent or not. Defaults to false.
          default: false
        metadata:
          type: object
          additionalProperties: {}
      additionalProperties:
        type: array
        items:
          anyOf:
            - $ref: '#/components/schemas/Tasks.EvaluateStep'
            - $ref: '#/components/schemas/Tasks.ToolCallStep'
            - $ref: '#/components/schemas/Tasks.PromptStep'
            - $ref: '#/components/schemas/Tasks.GetStep'
            - $ref: '#/components/schemas/Tasks.SetStep'
            - $ref: '#/components/schemas/Tasks.LogStep'
            - $ref: '#/components/schemas/Tasks.YieldStep'
            - $ref: '#/components/schemas/Tasks.ReturnStep'
            - $ref: '#/components/schemas/Tasks.SleepStep'
            - $ref: '#/components/schemas/Tasks.ErrorWorkflowStep'
            - $ref: '#/components/schemas/Tasks.WaitForInputStep'
            - $ref: '#/components/schemas/Tasks.IfElseWorkflowStep'
            - $ref: '#/components/schemas/Tasks.SwitchStep'
            - $ref: '#/components/schemas/Tasks.ForeachStep'
            - $ref: '#/components/schemas/Tasks.ParallelStep'
            - type: object
              required:
                - kind_
                - over
                - map
              properties:
                kind_:
                  type: string
                  enum:
                    - map_reduce
                  default: map_reduce
                  readOnly: true
                over:
                  allOf:
                    - $ref: '#/components/schemas/Common.PyExpression'
                  description: The variable to iterate over
                map:
                  anyOf:
                    - $ref: '#/components/schemas/Tasks.EvaluateStep'
                    - $ref: '#/components/schemas/Tasks.ToolCallStep'
                    - $ref: '#/components/schemas/Tasks.PromptStep'
                    - $ref: '#/components/schemas/Tasks.GetStep'
                    - $ref: '#/components/schemas/Tasks.SetStep'
                    - $ref: '#/components/schemas/Tasks.LogStep'
                    - $ref: '#/components/schemas/Tasks.YieldStep'
                  description: The steps to run for each iteration
                reduce:
                  allOf:
                    - $ref: '#/components/schemas/Common.PyExpression'
                  description: |-
                    The expression to reduce the results.
                    If not provided, the results are collected and returned as a list.
                    A special parameter named `results` is the accumulator and `_` is the current value.
                initial:
                  description: The initial value of the reduce expression
                  default: []
                parallelism:
                  type: integer
                  format: uint16
                  minimum: 1
                  maximum: 100
                  description: Whether to run the reduce expression in parallel and how many items to run in each batch
              allOf:
                - type: object
                  required:
                    - kind_
                  properties:
                    kind_:
                      type: string
                      enum:
                        - map_reduce
                      description: The kind of step
                      readOnly: true
                    label:
                      allOf:
                        - $ref: '#/components/schemas/Common.stepLabel'
                      description: The label of this step for referencing it from other steps
                  discriminator:
                    propertyName: kind_
      description: Payload for updating a task
    Tasks.WaitForInputInfo:
      type: object
      required:
        - info
      properties:
        info:
          type: object
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/Common.PyExpression'
              - type: array
                items:
                  $ref: '#/components/schemas/Common.PyExpression'
              - type: object
                additionalProperties:
                  $ref: '#/components/schemas/Common.PyExpression'
              - type: array
                items:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Common.PyExpression'
          description: Any additional info or data
    Tasks.WaitForInputStep:
      type: object
      required:
        - kind_
        - wait_for_input
      properties:
        kind_:
          type: string
          enum:
            - wait_for_input
          default: wait_for_input
          readOnly: true
        wait_for_input:
          allOf:
            - $ref: '#/components/schemas/Tasks.WaitForInputInfo'
          description: Any additional info or data
      allOf:
        - type: object
          required:
            - kind_
          properties:
            kind_:
              type: string
              enum:
                - wait_for_input
              description: The kind of step
              readOnly: true
            label:
              allOf:
                - $ref: '#/components/schemas/Common.stepLabel'
              description: The label of this step for referencing it from other steps
          discriminator:
            propertyName: kind_
            mapping: {}
    Tasks.YieldStep:
      type: object
      required:
        - kind_
        - workflow
        - arguments
      properties:
        kind_:
          type: string
          enum:
            - yield
          default: yield
          readOnly: true
        workflow:
          type: string
          description: |-
            The subworkflow to run.
            VALIDATION: Should resolve to a defined subworkflow.
        arguments:
          anyOf:
            - type: object
              additionalProperties:
                anyOf:
                  - $ref: '#/components/schemas/Common.PyExpression'
                  - type: array
                    items:
                      $ref: '#/components/schemas/Common.PyExpression'
                  - type: object
                    additionalProperties:
                      $ref: '#/components/schemas/Common.PyExpression'
                  - type: array
                    items:
                      type: object
                      additionalProperties:
                        $ref: '#/components/schemas/Common.PyExpression'
            - type: string
              enum:
                - _
          description: The input parameters for the subworkflow (defaults to last step output)
          default: _
      allOf:
        - type: object
          required:
            - kind_
          properties:
            kind_:
              type: string
              enum:
                - yield
              description: The kind of step
              readOnly: true
            label:
              allOf:
                - $ref: '#/components/schemas/Common.stepLabel'
              description: The label of this step for referencing it from other steps
          discriminator:
            propertyName: kind_
            mapping: {}
    Tools.AlgoliaIntegrationDef:
      type: object
      required:
        - provider
      properties:
        provider:
          type: string
          enum:
            - algolia
          description: The provider must be "algolia"
          default: algolia
        method:
          type: string
          description: The specific method of the integration to call
        setup:
          allOf:
            - $ref: '#/components/schemas/Tools.AlgoliaSetup'
          description: The setup parameters for Algolia
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.AlgoliaSearchArguments'
          description: The arguments for Algolia
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDef'
      description: Algolia integration definition
    Tools.AlgoliaIntegrationDefUpdate:
      type: object
      properties:
        provider:
          type: string
          enum:
            - algolia
          description: The provider must be "algolia"
          default: algolia
        method:
          type: string
          description: The specific method of the integration to call
        setup:
          allOf:
            - $ref: '#/components/schemas/Tools.AlgoliaSetupUpdate'
          description: The setup parameters for Algolia
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.AlgoliaSearchArgumentsUpdate'
          description: The arguments for Algolia
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDefUpdate'
      description: Algolia integration definition
    Tools.AlgoliaSearchArguments:
      type: object
      required:
        - index_name
        - query
      properties:
        index_name:
          type: string
          description: The index name to search
        query:
          type: string
          description: The query to search for
        attributes_to_retrieve:
          type: array
          items:
            type: string
          description: Optional attributes to retrieve
        hits_per_page:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          description: Maximum number of hits to return
          default: 10
      description: Arguments for Algolia Search
    Tools.AlgoliaSearchArgumentsUpdate:
      type: object
      properties:
        index_name:
          type: string
          description: The index name to search
        query:
          type: string
          description: The query to search for
        attributes_to_retrieve:
          type: array
          items:
            type: string
          description: Optional attributes to retrieve
        hits_per_page:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          description: Maximum number of hits to return
          default: 10
      description: Arguments for Algolia Search
    Tools.AlgoliaSetup:
      type: object
      required:
        - algolia_application_id
        - algolia_api_key
      properties:
        algolia_application_id:
          type: string
          description: The Algolia Application ID
        algolia_api_key:
          type: string
          description: The Algolia API Key
      description: Integration definition for Algolia
    Tools.AlgoliaSetupUpdate:
      type: object
      properties:
        algolia_application_id:
          type: string
          description: The Algolia Application ID
        algolia_api_key:
          type: string
          description: The Algolia API Key
      description: Integration definition for Algolia
    Tools.ApiCallDef:
      type: object
      required:
        - method
        - url
      properties:
        method:
          type: string
          enum:
            - GET
            - POST
            - PUT
            - DELETE
            - PATCH
            - HEAD
            - OPTIONS
            - CONNECT
            - TRACE
          description: The HTTP method to use
        url:
          type: string
          format: uri
          description: The URL to call
        schema:
          type: object
          additionalProperties: {}
          description: The schema of the response
        headers:
          type: object
          additionalProperties:
            type: string
          description: The headers to send with the request
        content:
          type: string
          description: The content as base64 to send with the request
        data:
          type: object
          additionalProperties: {}
          description: The data to send as form data
        files:
          type: object
          additionalProperties: {}
          description: The data to send as files data
        json:
          type: object
          additionalProperties: {}
          description: JSON body to send with the request
        cookies:
          type: object
          additionalProperties:
            type: string
          description: Cookies
        params:
          anyOf:
            - type: string
            - type: object
              additionalProperties: {}
          description: The parameters to send with the request
        follow_redirects:
          type: boolean
          description: Follow redirects
        timeout:
          type: integer
          format: uint8
          description: The timeout for the request
      description: API call definition
    Tools.ApiCallDefUpdate:
      type: object
      properties:
        method:
          type: string
          enum:
            - GET
            - POST
            - PUT
            - DELETE
            - PATCH
            - HEAD
            - OPTIONS
            - CONNECT
            - TRACE
          description: The HTTP method to use
        url:
          type: string
          format: uri
          description: The URL to call
        schema:
          type: object
          additionalProperties: {}
          description: The schema of the response
        headers:
          type: object
          additionalProperties:
            type: string
          description: The headers to send with the request
        content:
          type: string
          description: The content as base64 to send with the request
        data:
          type: object
          additionalProperties: {}
          description: The data to send as form data
        files:
          type: object
          additionalProperties: {}
          description: The data to send as files data
        json:
          type: object
          additionalProperties: {}
          description: JSON body to send with the request
        cookies:
          type: object
          additionalProperties:
            type: string
          description: Cookies
        params:
          anyOf:
            - type: string
            - type: object
              additionalProperties: {}
          description: The parameters to send with the request
        follow_redirects:
          type: boolean
          description: Follow redirects
        timeout:
          type: integer
          format: uint8
          description: The timeout for the request
      description: API call definition
    Tools.ArxivIntegrationDef:
      type: object
      required:
        - provider
      properties:
        provider:
          type: string
          enum:
            - arxiv
          description: The provider must be "arxiv"
          default: arxiv
        method:
          type: string
          description: The specific method of the integration to call
        setup:
          nullable: true
          description: The setup parameters for Arxiv
          default: null
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.ArxivSearchArguments'
          description: The arguments for Arxiv Search
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDef'
      description: Arxiv integration definition
    Tools.ArxivIntegrationDefUpdate:
      type: object
      properties:
        provider:
          type: string
          enum:
            - arxiv
          description: The provider must be "arxiv"
          default: arxiv
        method:
          type: string
          description: The specific method of the integration to call
        setup:
          nullable: true
          description: The setup parameters for Arxiv
          default: null
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.ArxivSearchArgumentsUpdate'
          description: The arguments for Arxiv Search
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDefUpdate'
      description: Arxiv integration definition
    Tools.ArxivSearchArguments:
      type: object
      required:
        - query
      properties:
        query:
          type: string
          description: The search query for searching with Arxiv
        id_list:
          type: array
          items:
            type: string
          description: The list of Arxiv IDs to search with
        max_results:
          type: integer
          format: int16
          minimum: 1
          maximum: 300000
          description: The maximum number of results to return
          default: 5
        download_pdf:
          type: boolean
          description: The download the pdf of the results
          default: false
        sort_by:
          type: string
          enum:
            - relevance
            - lastUpdatedDate
            - submittedDate
          description: The sort criterion for the results
          default: relevance
        sort_order:
          type: string
          enum:
            - ascending
            - descending
          description: The sort order for the results
          default: descending
      description: Arguments for Arxiv Search
    Tools.ArxivSearchArgumentsUpdate:
      type: object
      properties:
        query:
          type: string
          description: The search query for searching with Arxiv
        id_list:
          type: array
          items:
            type: string
          description: The list of Arxiv IDs to search with
        max_results:
          type: integer
          format: int16
          minimum: 1
          maximum: 300000
          description: The maximum number of results to return
          default: 5
        download_pdf:
          type: boolean
          description: The download the pdf of the results
          default: false
        sort_by:
          type: string
          enum:
            - relevance
            - lastUpdatedDate
            - submittedDate
          description: The sort criterion for the results
          default: relevance
        sort_order:
          type: string
          enum:
            - ascending
            - descending
          description: The sort order for the results
          default: descending
      description: Arguments for Arxiv Search
    Tools.BaseBrowserbaseIntegrationDef:
      type: object
      required:
        - provider
      properties:
        provider:
          type: string
          enum:
            - browserbase
          default: browserbase
        setup:
          $ref: '#/components/schemas/Tools.BrowserbaseSetup'
        method:
          type: string
          enum:
            - get_live_urls
            - list_sessions
            - create_session
            - get_session
            - complete_session
            - get_connect_url
            - install_extension_from_github
            - create_context
            - get_session_downloads
            - get_logs
            - get_recordings
        arguments: {}
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDef'
      description: The base definition for a browserbase integration
    Tools.BaseBrowserbaseIntegrationDefUpdate:
      type: object
      properties:
        provider:
          type: string
          enum:
            - browserbase
          default: browserbase
        setup:
          $ref: '#/components/schemas/Tools.BrowserbaseSetupUpdate'
        method:
          type: string
          enum:
            - get_live_urls
            - list_sessions
            - create_session
            - get_session
            - complete_session
            - get_connect_url
            - install_extension_from_github
            - create_context
            - get_session_downloads
            - get_logs
            - get_recordings
        arguments: {}
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDefUpdate'
      description: The base definition for a browserbase integration
    Tools.BaseChosenToolCall:
      type: object
      required:
        - type
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Tools.ToolType'
          description: Whether this tool is a `function`, `api_call`, `system` etc. (Only `function` tool supported right now)
        function:
          $ref: '#/components/schemas/Tools.FunctionCallOption'
        integration: {}
        system: {}
        api_call: {}
        computer_20241022:
          allOf:
            - $ref: '#/components/schemas/Tools.ChosenComputer20241022'
          description: (Alpha) Anthropic new tools
        text_editor_20241022:
          $ref: '#/components/schemas/Tools.ChosenTextEditor20241022'
        bash_20241022:
          $ref: '#/components/schemas/Tools.ChosenBash20241022'
        id:
          type: string
          readOnly: true
      description: The response tool value generated by the model
    Tools.BaseCloudinaryIntegrationDef:
      type: object
      required:
        - provider
      properties:
        provider:
          type: string
          enum:
            - cloudinary
          default: cloudinary
        setup:
          $ref: '#/components/schemas/Tools.CloudinarySetup'
        method:
          type: string
          enum:
            - media_upload
            - media_edit
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDef'
      description: Base Cloudinary integration definition
    Tools.BaseCloudinaryIntegrationDefUpdate:
      type: object
      properties:
        provider:
          type: string
          enum:
            - cloudinary
          default: cloudinary
        setup:
          $ref: '#/components/schemas/Tools.CloudinarySetupUpdate'
        method:
          type: string
          enum:
            - media_upload
            - media_edit
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDefUpdate'
      description: Base Cloudinary integration definition
    Tools.BaseIntegrationDef:
      type: object
      required:
        - provider
      properties:
        provider:
          type: string
          enum:
            - dummy
            - weather
            - wikipedia
            - spider
            - brave
            - browserbase
            - email
            - remote_browser
            - llama_parse
            - ffmpeg
            - cloudinary
            - arxiv
            - unstructured
            - algolia
          description: The provider of the integration
        method:
          type: string
          description: The specific method of the integration to call
        setup:
          description: The setup parameters the integration accepts
        arguments:
          description: The arguments to pre-apply to the integration call
      discriminator:
        propertyName: provider
        mapping:
          brave: '#/components/schemas/Tools.BraveIntegrationDef'
          email: '#/components/schemas/Tools.EmailIntegrationDef'
          spider: '#/components/schemas/Tools.SpiderIntegrationDef'
          wikipedia: '#/components/schemas/Tools.WikipediaIntegrationDef'
          weather: '#/components/schemas/Tools.WeatherIntegrationDef'
          browserbase: '#/components/schemas/Tools.BaseBrowserbaseIntegrationDef'
          remote_browser: '#/components/schemas/Tools.RemoteBrowserIntegrationDef'
          llama_parse: '#/components/schemas/Tools.LlamaParseIntegrationDef'
          ffmpeg: '#/components/schemas/Tools.FfmpegIntegrationDef'
          cloudinary: '#/components/schemas/Tools.BaseCloudinaryIntegrationDef'
          arxiv: '#/components/schemas/Tools.ArxivIntegrationDef'
          unstructured: '#/components/schemas/Tools.UnstructuredIntegrationDef'
          algolia: '#/components/schemas/Tools.AlgoliaIntegrationDef'
      description: Integration definition
    Tools.BaseIntegrationDefUpdate:
      type: object
      required:
        - provider
      properties:
        provider:
          type: string
          enum:
            - dummy
            - weather
            - wikipedia
            - spider
            - brave
            - browserbase
            - email
            - remote_browser
            - llama_parse
            - ffmpeg
            - cloudinary
            - arxiv
            - unstructured
            - algolia
          description: The provider of the integration
        method:
          type: string
          description: The specific method of the integration to call
        setup:
          description: The setup parameters the integration accepts
        arguments:
          description: The arguments to pre-apply to the integration call
      discriminator:
        propertyName: provider
        mapping:
          brave: '#/components/schemas/Tools.BraveIntegrationDefUpdate'
          email: '#/components/schemas/Tools.EmailIntegrationDefUpdate'
          spider: '#/components/schemas/Tools.SpiderIntegrationDefUpdate'
          wikipedia: '#/components/schemas/Tools.WikipediaIntegrationDefUpdate'
          weather: '#/components/schemas/Tools.WeatherIntegrationDefUpdate'
          browserbase: '#/components/schemas/Tools.BaseBrowserbaseIntegrationDefUpdate'
          remote_browser: '#/components/schemas/Tools.RemoteBrowserIntegrationDefUpdate'
          llama_parse: '#/components/schemas/Tools.LlamaParseIntegrationDefUpdate'
          ffmpeg: '#/components/schemas/Tools.FfmpegIntegrationDefUpdate'
          cloudinary: '#/components/schemas/Tools.BaseCloudinaryIntegrationDefUpdate'
          arxiv: '#/components/schemas/Tools.ArxivIntegrationDefUpdate'
          unstructured: '#/components/schemas/Tools.UnstructuredIntegrationDefUpdate'
          algolia: '#/components/schemas/Tools.AlgoliaIntegrationDefUpdate'
      description: Integration definition
    Tools.Bash20241022Def:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - bash_20241022
          default: bash_20241022
        name:
          type: string
          default: bash
    Tools.Bash20241022DefUpdate:
      type: object
      properties:
        type:
          type: string
          enum:
            - bash_20241022
          default: bash_20241022
        name:
          type: string
          default: bash
    Tools.BraveIntegrationDef:
      type: object
      required:
        - provider
      properties:
        provider:
          type: string
          enum:
            - brave
          description: The provider must be "brave"
          default: brave
        method:
          type: string
          description: The specific method of the integration to call
        setup:
          allOf:
            - $ref: '#/components/schemas/Tools.BraveSearchSetup'
          description: The setup parameters for Brave
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.BraveSearchArguments'
          description: The arguments for Brave Search
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDef'
      description: Brave integration definition
    Tools.BraveIntegrationDefUpdate:
      type: object
      properties:
        provider:
          type: string
          enum:
            - brave
          description: The provider must be "brave"
          default: brave
        method:
          type: string
          description: The specific method of the integration to call
        setup:
          allOf:
            - $ref: '#/components/schemas/Tools.BraveSearchSetupUpdate'
          description: The setup parameters for Brave
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.BraveSearchArgumentsUpdate'
          description: The arguments for Brave Search
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDefUpdate'
      description: Brave integration definition
    Tools.BraveSearchArguments:
      type: object
      required:
        - query
      properties:
        query:
          type: string
          description: The search query for searching with Brave
      description: Arguments for Brave Search
    Tools.BraveSearchArgumentsUpdate:
      type: object
      properties:
        query:
          type: string
          description: The search query for searching with Brave
      description: Arguments for Brave Search
    Tools.BraveSearchSetup:
      type: object
      required:
        - brave_api_key
      properties:
        brave_api_key:
          type: string
          description: The api key for Brave Search
      description: Integration definition for Brave Search
    Tools.BraveSearchSetupUpdate:
      type: object
      properties:
        brave_api_key:
          type: string
          description: The api key for Brave Search
      description: Integration definition for Brave Search
    Tools.BrowserbaseCompleteSessionArguments:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        status:
          type: string
          enum:
            - REQUEST_RELEASE
          default: REQUEST_RELEASE
    Tools.BrowserbaseCompleteSessionArgumentsUpdate:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          enum:
            - REQUEST_RELEASE
          default: REQUEST_RELEASE
    Tools.BrowserbaseCompleteSessionIntegrationDef:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          enum:
            - complete_session
          default: complete_session
        arguments:
          $ref: '#/components/schemas/Tools.BrowserbaseCompleteSessionArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.BaseBrowserbaseIntegrationDef'
      description: browserbase complete session integration definition
    Tools.BrowserbaseCompleteSessionIntegrationDefUpdate:
      type: object
      properties:
        method:
          type: string
          enum:
            - complete_session
          default: complete_session
        arguments:
          $ref: '#/components/schemas/Tools.BrowserbaseCompleteSessionArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.BaseBrowserbaseIntegrationDefUpdate'
      description: browserbase complete session integration definition
    Tools.BrowserbaseContextArguments:
      type: object
      required:
        - projectId
      properties:
        projectId:
          type: string
          description: The Project ID. Can be found in Settings.
    Tools.BrowserbaseContextArgumentsUpdate:
      type: object
      properties:
        projectId:
          type: string
          description: The Project ID. Can be found in Settings.
    Tools.BrowserbaseContextIntegrationDef:
      type: object
      properties:
        method:
          type: string
          enum:
            - create_context
          description: The specific method of the integration to call
          default: create_context
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.BrowserbaseContextArguments'
          description: The arguments for the method
      allOf:
        - $ref: '#/components/schemas/Tools.BaseBrowserbaseIntegrationDef'
      description: browserbase context provider
    Tools.BrowserbaseContextIntegrationDefUpdate:
      type: object
      properties:
        method:
          type: string
          enum:
            - create_context
          description: The specific method of the integration to call
          default: create_context
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.BrowserbaseContextArgumentsUpdate'
          description: The arguments for the method
      allOf:
        - $ref: '#/components/schemas/Tools.BaseBrowserbaseIntegrationDefUpdate'
      description: browserbase context provider
    Tools.BrowserbaseCreateSessionArguments:
      type: object
      properties:
        projectId:
          type: string
          description: The Project ID. Can be found in Settings.
        extensionId:
          type: string
          description: The installed Extension ID. See Install Extension from GitHub.
        browserSettings:
          type: object
          additionalProperties: {}
          description: Browser settings
          default: {}
        timeout:
          type: integer
          format: uint16
          description: Duration in seconds after which the session will automatically end. Defaults to the Project's defaultTimeout.
          default: 3600
        keepAlive:
          type: boolean
          description: Set to true to keep the session alive even after disconnections. This is available on the Startup plan only.
          default: false
        proxies:
          anyOf:
            - type: boolean
            - type: array
              items:
                type: object
                additionalProperties: {}
          description: Proxy configuration. Can be true for default proxy, or an array of proxy configurations.
          default: false
    Tools.BrowserbaseCreateSessionIntegrationDef:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          enum:
            - create_session
          default: create_session
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.BrowserbaseCreateSessionArguments'
          description: The arguments for the method
      allOf:
        - $ref: '#/components/schemas/Tools.BaseBrowserbaseIntegrationDef'
      description: browserbase create session integration definition
    Tools.BrowserbaseCreateSessionIntegrationDefUpdate:
      type: object
      properties:
        method:
          type: string
          enum:
            - create_session
          default: create_session
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.BrowserbaseCreateSessionArguments'
          description: The arguments for the method
      allOf:
        - $ref: '#/components/schemas/Tools.BaseBrowserbaseIntegrationDefUpdate'
      description: browserbase create session integration definition
    Tools.BrowserbaseExtensionArguments:
      type: object
      required:
        - repositoryName
      properties:
        repositoryName:
          type: string
          description: The GitHub repository name.
        ref:
          type: string
          description: Ref to install from a branch or tag.
    Tools.BrowserbaseExtensionArgumentsUpdate:
      type: object
      properties:
        repositoryName:
          type: string
          description: The GitHub repository name.
        ref:
          type: string
          description: Ref to install from a branch or tag.
    Tools.BrowserbaseExtensionIntegrationDef:
      type: object
      properties:
        method:
          type: string
          enum:
            - install_extension_from_github
          description: The specific method of the integration to call
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.BrowserbaseExtensionArguments'
          description: The arguments for the method
      allOf:
        - $ref: '#/components/schemas/Tools.BaseBrowserbaseIntegrationDef'
      description: browserbase extension provider
    Tools.BrowserbaseExtensionIntegrationDefUpdate:
      type: object
      properties:
        method:
          type: string
          enum:
            - install_extension_from_github
          description: The specific method of the integration to call
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.BrowserbaseExtensionArgumentsUpdate'
          description: The arguments for the method
      allOf:
        - $ref: '#/components/schemas/Tools.BaseBrowserbaseIntegrationDefUpdate'
      description: browserbase extension provider
    Tools.BrowserbaseGetSessionArguments:
      type: object
      required:
        - id
      properties:
        id:
          type: string
    Tools.BrowserbaseGetSessionArgumentsUpdate:
      type: object
      properties:
        id:
          type: string
    Tools.BrowserbaseGetSessionIntegrationDef:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          enum:
            - get_session
          default: get_session
        arguments:
          $ref: '#/components/schemas/Tools.BrowserbaseGetSessionArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.BaseBrowserbaseIntegrationDef'
      description: browserbase get session integration definition
    Tools.BrowserbaseGetSessionIntegrationDefUpdate:
      type: object
      properties:
        method:
          type: string
          enum:
            - get_session
          default: get_session
        arguments:
          $ref: '#/components/schemas/Tools.BrowserbaseGetSessionArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.BaseBrowserbaseIntegrationDefUpdate'
      description: browserbase get session integration definition
    Tools.BrowserbaseGetSessionLiveUrlsArguments:
      type: object
      required:
        - id
      properties:
        id:
          type: string
    Tools.BrowserbaseGetSessionLiveUrlsArgumentsUpdate:
      type: object
      properties:
        id:
          type: string
    Tools.BrowserbaseGetSessionLiveUrlsIntegrationDef:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          enum:
            - get_live_urls
          default: get_live_urls
        arguments:
          $ref: '#/components/schemas/Tools.BrowserbaseGetSessionLiveUrlsArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.BaseBrowserbaseIntegrationDef'
      description: browserbase get session live urls integration definition
    Tools.BrowserbaseGetSessionLiveUrlsIntegrationDefUpdate:
      type: object
      properties:
        method:
          type: string
          enum:
            - get_live_urls
          default: get_live_urls
        arguments:
          $ref: '#/components/schemas/Tools.BrowserbaseGetSessionLiveUrlsArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.BaseBrowserbaseIntegrationDefUpdate'
      description: browserbase get session live urls integration definition
    Tools.BrowserbaseListSessionsArguments:
      type: object
      properties:
        status:
          type: string
          enum:
            - RUNNING
            - ERROR
            - TIMED_OUT
            - COMPLETED
          description: 'The status of the sessions to list (Available options: RUNNING, ERROR, TIMED_OUT, COMPLETED)'
    Tools.BrowserbaseListSessionsIntegrationDef:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          enum:
            - list_sessions
          description: The specific method of the integration to call
          default: list_sessions
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.BrowserbaseListSessionsArguments'
          description: The arguments for the method
      allOf:
        - $ref: '#/components/schemas/Tools.BaseBrowserbaseIntegrationDef'
      description: browserbase list sessions integration definition
    Tools.BrowserbaseListSessionsIntegrationDefUpdate:
      type: object
      properties:
        method:
          type: string
          enum:
            - list_sessions
          description: The specific method of the integration to call
          default: list_sessions
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.BrowserbaseListSessionsArguments'
          description: The arguments for the method
      allOf:
        - $ref: '#/components/schemas/Tools.BaseBrowserbaseIntegrationDefUpdate'
      description: browserbase list sessions integration definition
    Tools.BrowserbaseSetup:
      type: object
      required:
        - api_key
        - project_id
      properties:
        api_key:
          type: string
          description: API key for the browserbase integration
        project_id:
          type: string
          description: The project ID. Can be found in Settings.
        api_url:
          type: string
          description: The API URL. Defaults to https://www.browserbase.com
        connect_url:
          type: string
          description: The connect URL. Defaults to wss://connect.browserbase.com
      description: The setup parameters for the browserbase integration
    Tools.BrowserbaseSetupUpdate:
      type: object
      properties:
        api_key:
          type: string
          description: API key for the browserbase integration
        project_id:
          type: string
          description: The project ID. Can be found in Settings.
        api_url:
          type: string
          description: The API URL. Defaults to https://www.browserbase.com
        connect_url:
          type: string
          description: The connect URL. Defaults to wss://connect.browserbase.com
      description: The setup parameters for the browserbase integration
    Tools.ChatSessionSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - ChatSessionSystemDef
          default: ChatSessionSystemDef
        resource:
          type: string
          enum:
            - session
        operation:
          type: string
          enum:
            - chat
        arguments:
          $ref: '#/components/schemas/Tools.ChatSessionSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Chat Session System Definition
    Tools.ChatSessionSystemDefArguments:
      type: object
      required:
        - resource_id
        - message
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The session ID to chat with
        message:
          type: string
          description: The chat message to send
        tool_choice:
          type: string
          description: Optional tool choice specification
        x_custom_api_key:
          type: string
          description: Optional API key for custom model
      description: Chat Session System Definition Arguments
    Tools.ChatSessionSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The session ID to chat with
        message:
          type: string
          description: The chat message to send
        tool_choice:
          type: string
          description: Optional tool choice specification
        x_custom_api_key:
          type: string
          description: Optional API key for custom model
      description: Chat Session System Definition Arguments
    Tools.ChatSessionSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - ChatSessionSystemDef
          default: ChatSessionSystemDef
        resource:
          type: string
          enum:
            - session
        operation:
          type: string
          enum:
            - chat
        arguments:
          $ref: '#/components/schemas/Tools.ChatSessionSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Chat Session System Definition
    Tools.ChosenBash20241022:
      type: object
      properties:
        command:
          type: string
          description: The bash command to run
        restart:
          type: boolean
          description: Whether to restart the tool
          default: false
    Tools.ChosenComputer20241022:
      type: object
      required:
        - action
      properties:
        action:
          allOf:
            - $ref: '#/components/schemas/Tools.Computer20241022Action'
          description: The action to perform
        text:
          type: string
          description: The text to type
        coordinate:
          type: array
          items:
            type: integer
            format: uint16
          description: The (x, y) pixel coordinate to move the cursor to
    Tools.ChosenFunctionCall:
      type: object
      required:
        - type
        - function
      properties:
        type:
          type: string
          enum:
            - function
        function:
          allOf:
            - $ref: '#/components/schemas/Tools.FunctionCallOption'
          description: The function to call
      allOf:
        - $ref: '#/components/schemas/Tools.BaseChosenToolCall'
    Tools.ChosenSystemCall:
      type: object
      required:
        - type
        - system
      properties:
        type:
          type: string
          enum:
            - system
        system:
          allOf:
            - $ref: '#/components/schemas/Tools.ChosenSystemCallOption'
          description: The system call to make
      allOf:
        - $ref: '#/components/schemas/Tools.BaseChosenToolCall'
    Tools.ChosenSystemCallOption:
      type: object
      required:
        - resource
        - operation
      properties:
        resource:
          type: string
          enum:
            - agent
            - user
            - task
            - execution
            - doc
            - session
            - job
          description: The resource type to operate on
        operation:
          type: string
          enum:
            - create
            - update
            - patch
            - create_or_update
            - embed
            - change_status
            - search
            - chat
            - history
            - delete
            - get
            - list
          description: The operation to perform
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The resource id (if applicable)
        subresource:
          type: string
          enum:
            - tool
            - doc
            - execution
            - transition
          description: The subresource type (if applicable)
        arguments:
          type: string
          description: The arguments for the system call
      description: Model for the system call option in a tool call
    Tools.ChosenTextEditor20241022:
      type: object
      required:
        - command
        - path
      properties:
        command:
          type: string
          enum:
            - str_replace
            - insert
            - view
            - undo_edit
          description: The command to run
        path:
          type: string
          description: The path to the file
        file_text:
          type: string
          description: The content of the file to be created
        insert_line:
          type: integer
          format: uint16
          description: The line to insert the new string after
        new_str:
          type: string
          description: The new string to insert
        old_str:
          type: string
          description: The string in the file to replace
        view_range:
          type: array
          items:
            type: integer
            format: uint16
          description: The line range to view
    Tools.CloudinaryEditArguments:
      type: object
      required:
        - public_id
        - transformation
        - return_base64
      properties:
        public_id:
          type: string
          description: The file Public ID in Cloudinary
        transformation:
          type: array
          items:
            type: object
            additionalProperties: {}
          description: The transformation to apply to the file
        return_base64:
          type: boolean
          description: Return base64 encoded file
          default: false
      description: Arguments for Cloudinary media edit
    Tools.CloudinaryEditArgumentsUpdate:
      type: object
      properties:
        public_id:
          type: string
          description: The file Public ID in Cloudinary
        transformation:
          type: array
          items:
            type: object
            additionalProperties: {}
          description: The transformation to apply to the file
        return_base64:
          type: boolean
          description: Return base64 encoded file
          default: false
      description: Arguments for Cloudinary media edit
    Tools.CloudinaryEditIntegrationDef:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          enum:
            - media_edit
          default: media_edit
        arguments:
          $ref: '#/components/schemas/Tools.CloudinaryEditArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.BaseCloudinaryIntegrationDef'
      description: Cloudinary edit integration definition
    Tools.CloudinaryEditIntegrationDefUpdate:
      type: object
      properties:
        method:
          type: string
          enum:
            - media_edit
          default: media_edit
        arguments:
          $ref: '#/components/schemas/Tools.CloudinaryEditArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.BaseCloudinaryIntegrationDefUpdate'
      description: Cloudinary edit integration definition
    Tools.CloudinarySetup:
      type: object
      required:
        - cloudinary_api_key
        - cloudinary_api_secret
        - cloudinary_cloud_name
      properties:
        cloudinary_api_key:
          type: string
          description: The API key for Cloudinary
        cloudinary_api_secret:
          type: string
          description: The API secret for Cloudinary
        cloudinary_cloud_name:
          type: string
          description: The Cloud name for Cloudinary
        params:
          type: object
          additionalProperties: {}
          description: Additional parameters for the Cloudinary API
      description: Setup parameters for Cloudinary integration
    Tools.CloudinarySetupUpdate:
      type: object
      properties:
        cloudinary_api_key:
          type: string
          description: The API key for Cloudinary
        cloudinary_api_secret:
          type: string
          description: The API secret for Cloudinary
        cloudinary_cloud_name:
          type: string
          description: The Cloud name for Cloudinary
        params:
          type: object
          additionalProperties: {}
          description: Additional parameters for the Cloudinary API
      description: Setup parameters for Cloudinary integration
    Tools.CloudinaryUploadArguments:
      type: object
      required:
        - file
        - return_base64
      properties:
        file:
          type: string
          description: The URL of the file upload
        return_base64:
          type: boolean
          description: Return base64 encoded file
          default: false
        public_id:
          type: string
          description: Optional public ID for the uploaded file
        upload_params:
          type: object
          additionalProperties: {}
          description: Optional upload parameters
      description: Arguments for Cloudinary media upload
    Tools.CloudinaryUploadArgumentsUpdate:
      type: object
      properties:
        file:
          type: string
          description: The URL of the file upload
        return_base64:
          type: boolean
          description: Return base64 encoded file
          default: false
        public_id:
          type: string
          description: Optional public ID for the uploaded file
        upload_params:
          type: object
          additionalProperties: {}
          description: Optional upload parameters
      description: Arguments for Cloudinary media upload
    Tools.CloudinaryUploadIntegrationDef:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          enum:
            - media_upload
          default: media_upload
        arguments:
          $ref: '#/components/schemas/Tools.CloudinaryUploadArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.BaseCloudinaryIntegrationDef'
      description: Cloudinary upload integration definition
    Tools.CloudinaryUploadIntegrationDefUpdate:
      type: object
      properties:
        method:
          type: string
          enum:
            - media_upload
          default: media_upload
        arguments:
          $ref: '#/components/schemas/Tools.CloudinaryUploadArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.BaseCloudinaryIntegrationDefUpdate'
      description: Cloudinary upload integration definition
    Tools.Computer20241022Action:
      type: string
      enum:
        - key
        - type
        - cursor_position
        - mouse_move
        - left_click
        - right_click
        - middle_click
        - double_click
        - screenshot
    Tools.Computer20241022Def:
      type: object
      required:
        - type
        - display_width_px
        - display_height_px
      properties:
        type:
          type: string
          enum:
            - computer_20241022
          default: computer_20241022
        name:
          type: string
          default: computer
        display_width_px:
          type: integer
          format: uint16
          minimum: 600
          description: The display width in pixels
          default: 1024
        display_height_px:
          type: integer
          format: uint16
          minimum: 400
          description: The display height in pixels
          default: 768
        display_number:
          type: integer
          format: uint16
          minimum: 1
          maximum: 10
          description: The display number to use
          default: 1
      description: Anthropic new tools
    Tools.Computer20241022DefUpdate:
      type: object
      properties:
        type:
          type: string
          enum:
            - computer_20241022
          default: computer_20241022
        name:
          type: string
          default: computer
        display_width_px:
          type: integer
          format: uint16
          minimum: 600
          description: The display width in pixels
          default: 1024
        display_height_px:
          type: integer
          format: uint16
          minimum: 400
          description: The display height in pixels
          default: 768
        display_number:
          type: integer
          format: uint16
          minimum: 1
          maximum: 10
          description: The display number to use
          default: 1
      description: Anthropic new tools
    Tools.CreateAgentSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - CreateAgentSystemDef
          default: CreateAgentSystemDef
        resource:
          type: string
          enum:
            - agent
        operation:
          type: string
          enum:
            - create
        arguments:
          $ref: '#/components/schemas/Tools.CreateAgentSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Create Agent System Definition
    Tools.CreateAgentSystemDefArguments:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the agent
        description:
          type: string
          description: Optional description for the agent
        instructions:
          type: string
          description: Optional instructions for the agent
        tools:
          type: array
          items: {}
          description: Optional tools for the agent
      description: Create Agent System Definition Arguments
    Tools.CreateAgentSystemDefArgumentsUpdate:
      type: object
      properties:
        name:
          type: string
          description: Name of the agent
        description:
          type: string
          description: Optional description for the agent
        instructions:
          type: string
          description: Optional instructions for the agent
        tools:
          type: array
          items: {}
          description: Optional tools for the agent
      description: Create Agent System Definition Arguments
    Tools.CreateAgentSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - CreateAgentSystemDef
          default: CreateAgentSystemDef
        resource:
          type: string
          enum:
            - agent
        operation:
          type: string
          enum:
            - create
        arguments:
          $ref: '#/components/schemas/Tools.CreateAgentSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Create Agent System Definition
    Tools.CreateAgentToolSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
        - subresource
      properties:
        system_def_type:
          type: string
          enum:
            - CreateAgentToolSystemDef
          default: CreateAgentToolSystemDef
        resource:
          type: string
          enum:
            - agent
        operation:
          type: string
          enum:
            - create
        subresource:
          type: string
          enum:
            - tool
        arguments:
          $ref: '#/components/schemas/Tools.CreateAgentToolSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Create Agent Tool System Definition
    Tools.CreateAgentToolSystemDefArguments:
      type: object
      required:
        - resource_id
        - name
        - type
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The agent ID to add the tool to
        name:
          type: string
          description: Name of the tool
        type:
          type: string
          description: Type of the tool
        description:
          type: string
          description: Optional description for the tool
        function:
          description: Optional function specification
        integration:
          description: Optional integration specification
        system:
          description: Optional system specification
        api_call:
          description: Optional API call specification
      description: Create Agent Tool System Definition Arguments
    Tools.CreateAgentToolSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The agent ID to add the tool to
        name:
          type: string
          description: Name of the tool
        type:
          type: string
          description: Type of the tool
        description:
          type: string
          description: Optional description for the tool
        function:
          description: Optional function specification
        integration:
          description: Optional integration specification
        system:
          description: Optional system specification
        api_call:
          description: Optional API call specification
      description: Create Agent Tool System Definition Arguments
    Tools.CreateAgentToolSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - CreateAgentToolSystemDef
          default: CreateAgentToolSystemDef
        resource:
          type: string
          enum:
            - agent
        operation:
          type: string
          enum:
            - create
        subresource:
          type: string
          enum:
            - tool
        arguments:
          $ref: '#/components/schemas/Tools.CreateAgentToolSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Create Agent Tool System Definition
    Tools.CreateDocSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - CreateDocSystemDef
          default: CreateDocSystemDef
        resource:
          type: string
          enum:
            - doc
        operation:
          type: string
          enum:
            - create
        arguments:
          $ref: '#/components/schemas/Tools.CreateDocSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Create Doc System Definition
    Tools.CreateDocSystemDefArguments:
      type: object
      required:
        - name
        - content
      properties:
        name:
          type: string
          description: The document name
        content:
          type: string
          description: The document content
        metadata:
          type: object
          additionalProperties: {}
          description: Optional metadata for the document
      description: Create Doc System Definition Arguments
    Tools.CreateDocSystemDefArgumentsUpdate:
      type: object
      properties:
        name:
          type: string
          description: The document name
        content:
          type: string
          description: The document content
        metadata:
          type: object
          additionalProperties: {}
          description: Optional metadata for the document
      description: Create Doc System Definition Arguments
    Tools.CreateDocSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - CreateDocSystemDef
          default: CreateDocSystemDef
        resource:
          type: string
          enum:
            - doc
        operation:
          type: string
          enum:
            - create
        arguments:
          $ref: '#/components/schemas/Tools.CreateDocSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Create Doc System Definition
    Tools.CreateOwnerDocSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
        - subresource
      properties:
        system_def_type:
          type: string
          enum:
            - CreateOwnerDocSystemDef
          default: CreateOwnerDocSystemDef
        resource:
          type: string
          enum:
            - agent
            - user
        operation:
          type: string
          enum:
            - create
        subresource:
          type: string
          enum:
            - doc
        arguments:
          $ref: '#/components/schemas/Tools.CreateOwnerDocSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Create Owner Doc System Definition
    Tools.CreateOwnerDocSystemDefArguments:
      type: object
      required:
        - resource_id
        - title
        - content
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The resource ID (if applicable)
        title:
          type: string
          description: The title of the document
        content:
          type: string
          description: The content of the document
        metadata:
          type: object
          additionalProperties: {}
          description: Optional metadata for the document
      description: Create Owner Doc System Definition Arguments
    Tools.CreateOwnerDocSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The resource ID (if applicable)
        title:
          type: string
          description: The title of the document
        content:
          type: string
          description: The content of the document
        metadata:
          type: object
          additionalProperties: {}
          description: Optional metadata for the document
      description: Create Owner Doc System Definition Arguments
    Tools.CreateOwnerDocSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - CreateOwnerDocSystemDef
          default: CreateOwnerDocSystemDef
        resource:
          type: string
          enum:
            - agent
            - user
        operation:
          type: string
          enum:
            - create
        subresource:
          type: string
          enum:
            - doc
        arguments:
          $ref: '#/components/schemas/Tools.CreateOwnerDocSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Create Owner Doc System Definition
    Tools.CreateSessionSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - CreateSessionSystemDef
          default: CreateSessionSystemDef
        resource:
          type: string
          enum:
            - session
        operation:
          type: string
          enum:
            - create
        arguments:
          $ref: '#/components/schemas/Tools.CreateSessionSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Create Session System Definition
    Tools.CreateSessionSystemDefArguments:
      type: object
      properties:
        name:
          type: string
          description: Optional name for the session
        user_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: Optional user ID for the session
        agent_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: Optional agent ID for the session
        metadata:
          type: object
          additionalProperties: {}
          description: Optional metadata for the session
      description: Create Session System Definition Arguments
    Tools.CreateSessionSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - CreateSessionSystemDef
          default: CreateSessionSystemDef
        resource:
          type: string
          enum:
            - session
        operation:
          type: string
          enum:
            - create
        arguments:
          $ref: '#/components/schemas/Tools.CreateSessionSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Create Session System Definition
    Tools.CreateTaskExecutionSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
        - subresource
      properties:
        system_def_type:
          type: string
          enum:
            - CreateTaskExecutionSystemDef
          default: CreateTaskExecutionSystemDef
        resource:
          type: string
          enum:
            - task
        operation:
          type: string
          enum:
            - create
        subresource:
          type: string
          enum:
            - execution
        arguments:
          $ref: '#/components/schemas/Tools.CreateTaskExecutionSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Create Task Execution System Definition
    Tools.CreateTaskExecutionSystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The task ID to execute
        input:
          description: Optional input data for the task execution
        async:
          type: boolean
          description: Whether to execute the task asynchronously
      description: Create Task Execution System Definition Arguments
    Tools.CreateTaskExecutionSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The task ID to execute
        input:
          description: Optional input data for the task execution
        async:
          type: boolean
          description: Whether to execute the task asynchronously
      description: Create Task Execution System Definition Arguments
    Tools.CreateTaskExecutionSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - CreateTaskExecutionSystemDef
          default: CreateTaskExecutionSystemDef
        resource:
          type: string
          enum:
            - task
        operation:
          type: string
          enum:
            - create
        subresource:
          type: string
          enum:
            - execution
        arguments:
          $ref: '#/components/schemas/Tools.CreateTaskExecutionSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Create Task Execution System Definition
    Tools.CreateTaskSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - CreateTaskSystemDef
          default: CreateTaskSystemDef
        resource:
          type: string
          enum:
            - task
        operation:
          type: string
          enum:
            - create
        arguments:
          $ref: '#/components/schemas/Tools.CreateTaskSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Create Task System Definition
    Tools.CreateTaskSystemDefArguments:
      type: object
      required:
        - name
        - steps
      properties:
        name:
          type: string
          description: Name of the task
        description:
          type: string
          description: Optional description for the task
        steps:
          type: array
          items: {}
          description: Steps that define the task workflow
        metadata:
          type: object
          additionalProperties: {}
          description: Optional metadata for the task
      description: Create Task System Definition Arguments
    Tools.CreateTaskSystemDefArgumentsUpdate:
      type: object
      properties:
        name:
          type: string
          description: Name of the task
        description:
          type: string
          description: Optional description for the task
        steps:
          type: array
          items: {}
          description: Steps that define the task workflow
        metadata:
          type: object
          additionalProperties: {}
          description: Optional metadata for the task
      description: Create Task System Definition Arguments
    Tools.CreateTaskSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - CreateTaskSystemDef
          default: CreateTaskSystemDef
        resource:
          type: string
          enum:
            - task
        operation:
          type: string
          enum:
            - create
        arguments:
          $ref: '#/components/schemas/Tools.CreateTaskSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Create Task System Definition
    Tools.CreateToolRequest:
      type: object
      required:
        - name
        - type
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/Common.validPythonIdentifier'
          description: Name of the tool (must be unique for this agent and a valid python identifier string )
        type:
          allOf:
            - $ref: '#/components/schemas/Tools.ToolType'
          description: Type of the tool
        description:
          type: string
          description: Description of the tool
        function:
          allOf:
            - $ref: '#/components/schemas/Tools.FunctionDef'
          description: The function to call
        integration:
          anyOf:
            - $ref: '#/components/schemas/Tools.DummyIntegrationDef'
            - $ref: '#/components/schemas/Tools.BraveIntegrationDef'
            - $ref: '#/components/schemas/Tools.EmailIntegrationDef'
            - $ref: '#/components/schemas/Tools.SpiderIntegrationDef'
            - $ref: '#/components/schemas/Tools.WikipediaIntegrationDef'
            - $ref: '#/components/schemas/Tools.WeatherIntegrationDef'
            - $ref: '#/components/schemas/Tools.BrowserbaseContextIntegrationDef'
            - $ref: '#/components/schemas/Tools.BrowserbaseExtensionIntegrationDef'
            - $ref: '#/components/schemas/Tools.BrowserbaseListSessionsIntegrationDef'
            - $ref: '#/components/schemas/Tools.BrowserbaseCreateSessionIntegrationDef'
            - $ref: '#/components/schemas/Tools.BrowserbaseGetSessionIntegrationDef'
            - $ref: '#/components/schemas/Tools.BrowserbaseCompleteSessionIntegrationDef'
            - $ref: '#/components/schemas/Tools.BrowserbaseGetSessionLiveUrlsIntegrationDef'
            - $ref: '#/components/schemas/Tools.RemoteBrowserIntegrationDef'
            - $ref: '#/components/schemas/Tools.LlamaParseIntegrationDef'
            - $ref: '#/components/schemas/Tools.FfmpegIntegrationDef'
            - $ref: '#/components/schemas/Tools.CloudinaryUploadIntegrationDef'
            - $ref: '#/components/schemas/Tools.CloudinaryEditIntegrationDef'
            - $ref: '#/components/schemas/Tools.ArxivIntegrationDef'
            - $ref: '#/components/schemas/Tools.UnstructuredIntegrationDef'
            - $ref: '#/components/schemas/Tools.AlgoliaIntegrationDef'
          description: The integration to call
        system:
          allOf:
            - $ref: '#/components/schemas/Tools.SystemDef'
          description: The system to call
        api_call:
          allOf:
            - $ref: '#/components/schemas/Tools.ApiCallDef'
          description: The API call to make
        computer_20241022:
          allOf:
            - $ref: '#/components/schemas/Tools.Computer20241022Def'
          description: (Alpha) Anthropic new tools
        text_editor_20241022:
          $ref: '#/components/schemas/Tools.TextEditor20241022Def'
        bash_20241022:
          $ref: '#/components/schemas/Tools.Bash20241022Def'
      description: Payload for creating a tool
    Tools.CreateUserSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - CreateUserSystemDef
          default: CreateUserSystemDef
        resource:
          type: string
          enum:
            - user
        operation:
          type: string
          enum:
            - create
        arguments:
          $ref: '#/components/schemas/Tools.CreateUserSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Create User System Definition
    Tools.CreateUserSystemDefArguments:
      type: object
      required:
        - user_id
      properties:
        user_id:
          type: string
          description: User identifier
        name:
          type: string
          description: Optional name for the user
        metadata:
          type: object
          additionalProperties: {}
          description: Optional metadata for the user
      description: Create User System Definition Arguments
    Tools.CreateUserSystemDefArgumentsUpdate:
      type: object
      properties:
        user_id:
          type: string
          description: User identifier
        name:
          type: string
          description: Optional name for the user
        metadata:
          type: object
          additionalProperties: {}
          description: Optional metadata for the user
      description: Create User System Definition Arguments
    Tools.CreateUserSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - CreateUserSystemDef
          default: CreateUserSystemDef
        resource:
          type: string
          enum:
            - user
        operation:
          type: string
          enum:
            - create
        arguments:
          $ref: '#/components/schemas/Tools.CreateUserSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Create User System Definition
    Tools.DeleteAgentSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - DeleteAgentSystemDef
          default: DeleteAgentSystemDef
        resource:
          type: string
          enum:
            - agent
        operation:
          type: string
          enum:
            - delete
        arguments:
          $ref: '#/components/schemas/Tools.DeleteAgentSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Delete Agent System Definition
    Tools.DeleteAgentSystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The agent ID to delete
      description: Delete Agent System Definition Arguments
    Tools.DeleteAgentSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The agent ID to delete
      description: Delete Agent System Definition Arguments
    Tools.DeleteAgentSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - DeleteAgentSystemDef
          default: DeleteAgentSystemDef
        resource:
          type: string
          enum:
            - agent
        operation:
          type: string
          enum:
            - delete
        arguments:
          $ref: '#/components/schemas/Tools.DeleteAgentSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Delete Agent System Definition
    Tools.DeleteAgentToolSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
        - subresource
      properties:
        system_def_type:
          type: string
          enum:
            - DeleteAgentToolSystemDef
          default: DeleteAgentToolSystemDef
        resource:
          type: string
          enum:
            - agent
        operation:
          type: string
          enum:
            - delete
        subresource:
          type: string
          enum:
            - tool
        arguments:
          $ref: '#/components/schemas/Tools.DeleteAgentToolSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Delete Agent Tool System Definition
    Tools.DeleteAgentToolSystemDefArguments:
      type: object
      required:
        - resource_id
        - name
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The agent ID that owns the tool
        name:
          type: string
          description: Name of the tool to delete
      description: Delete Agent Tool System Definition Arguments
    Tools.DeleteAgentToolSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The agent ID that owns the tool
        name:
          type: string
          description: Name of the tool to delete
      description: Delete Agent Tool System Definition Arguments
    Tools.DeleteAgentToolSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - DeleteAgentToolSystemDef
          default: DeleteAgentToolSystemDef
        resource:
          type: string
          enum:
            - agent
        operation:
          type: string
          enum:
            - delete
        subresource:
          type: string
          enum:
            - tool
        arguments:
          $ref: '#/components/schemas/Tools.DeleteAgentToolSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Delete Agent Tool System Definition
    Tools.DeleteDocSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - DeleteDocSystemDef
          default: DeleteDocSystemDef
        resource:
          type: string
          enum:
            - doc
        operation:
          type: string
          enum:
            - delete
        arguments:
          $ref: '#/components/schemas/Tools.DeleteDocSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Delete Doc System Definition
    Tools.DeleteDocSystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The resource ID to delete
      description: Delete Doc System Definition Arguments
    Tools.DeleteDocSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The resource ID to delete
      description: Delete Doc System Definition Arguments
    Tools.DeleteDocSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - DeleteDocSystemDef
          default: DeleteDocSystemDef
        resource:
          type: string
          enum:
            - doc
        operation:
          type: string
          enum:
            - delete
        arguments:
          $ref: '#/components/schemas/Tools.DeleteDocSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Delete Doc System Definition
    Tools.DeleteSessionSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - DeleteSessionSystemDef
          default: DeleteSessionSystemDef
        resource:
          type: string
          enum:
            - session
        operation:
          type: string
          enum:
            - delete
        arguments:
          $ref: '#/components/schemas/Tools.DeleteSessionSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Delete Session System Definition
    Tools.DeleteSessionSystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The session ID to delete
      description: Delete Session System Definition Arguments
    Tools.DeleteSessionSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The session ID to delete
      description: Delete Session System Definition Arguments
    Tools.DeleteSessionSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - DeleteSessionSystemDef
          default: DeleteSessionSystemDef
        resource:
          type: string
          enum:
            - session
        operation:
          type: string
          enum:
            - delete
        arguments:
          $ref: '#/components/schemas/Tools.DeleteSessionSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Delete Session System Definition
    Tools.DeleteTaskSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - DeleteTaskSystemDef
          default: DeleteTaskSystemDef
        resource:
          type: string
          enum:
            - task
        operation:
          type: string
          enum:
            - delete
        arguments:
          $ref: '#/components/schemas/Tools.DeleteTaskSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Delete Task System Definition
    Tools.DeleteTaskSystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The task ID to delete
      description: Delete Task System Definition Arguments
    Tools.DeleteTaskSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The task ID to delete
      description: Delete Task System Definition Arguments
    Tools.DeleteTaskSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - DeleteTaskSystemDef
          default: DeleteTaskSystemDef
        resource:
          type: string
          enum:
            - task
        operation:
          type: string
          enum:
            - delete
        arguments:
          $ref: '#/components/schemas/Tools.DeleteTaskSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Delete Task System Definition
    Tools.DeleteUserSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - DeleteUserSystemDef
          default: DeleteUserSystemDef
        resource:
          type: string
          enum:
            - user
        operation:
          type: string
          enum:
            - delete
        arguments:
          $ref: '#/components/schemas/Tools.DeleteUserSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Delete User System Definition
    Tools.DeleteUserSystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The user ID to delete
      description: Delete User System Definition Arguments
    Tools.DeleteUserSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The user ID to delete
      description: Delete User System Definition Arguments
    Tools.DeleteUserSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - DeleteUserSystemDef
          default: DeleteUserSystemDef
        resource:
          type: string
          enum:
            - user
        operation:
          type: string
          enum:
            - delete
        arguments:
          $ref: '#/components/schemas/Tools.DeleteUserSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Delete User System Definition
    Tools.DummyIntegrationDef:
      type: object
      required:
        - provider
      properties:
        provider:
          type: string
          enum:
            - dummy
          default: dummy
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDef'
    Tools.DummyIntegrationDefUpdate:
      type: object
      properties:
        provider:
          type: string
          enum:
            - dummy
          default: dummy
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDefUpdate'
    Tools.EmailArguments:
      type: object
      required:
        - to
        - from
        - subject
        - body
      properties:
        to:
          type: string
          description: The email address to send the email to
        from:
          type: string
          description: The email address to send the email from
        subject:
          type: string
          description: The subject of the email
        body:
          type: string
          description: The body of the email
      description: Arguments for Email sending
    Tools.EmailArgumentsUpdate:
      type: object
      properties:
        to:
          type: string
          description: The email address to send the email to
        from:
          type: string
          description: The email address to send the email from
        subject:
          type: string
          description: The subject of the email
        body:
          type: string
          description: The body of the email
      description: Arguments for Email sending
    Tools.EmailIntegrationDef:
      type: object
      required:
        - provider
      properties:
        provider:
          type: string
          enum:
            - email
          description: The provider must be "email"
          default: email
        method:
          type: string
          description: The specific method of the integration to call
        setup:
          allOf:
            - $ref: '#/components/schemas/Tools.EmailSetup'
          description: The setup parameters for Email
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.EmailArguments'
          description: The arguments for Email sending
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDef'
      description: Email integration definition
    Tools.EmailIntegrationDefUpdate:
      type: object
      properties:
        provider:
          type: string
          enum:
            - email
          description: The provider must be "email"
          default: email
        method:
          type: string
          description: The specific method of the integration to call
        setup:
          allOf:
            - $ref: '#/components/schemas/Tools.EmailSetupUpdate'
          description: The setup parameters for Email
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.EmailArgumentsUpdate'
          description: The arguments for Email sending
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDefUpdate'
      description: Email integration definition
    Tools.EmailSetup:
      type: object
      required:
        - host
        - port
        - user
        - password
      properties:
        host:
          type: string
          description: The host of the email server
        port:
          type: integer
          format: int32
          description: The port of the email server
        user:
          type: string
          description: The username of the email server
        password:
          type: string
          description: The password of the email server
      description: Setup parameters for Email integration
    Tools.EmailSetupUpdate:
      type: object
      properties:
        host:
          type: string
          description: The host of the email server
        port:
          type: integer
          format: int32
          description: The port of the email server
        user:
          type: string
          description: The username of the email server
        password:
          type: string
          description: The password of the email server
      description: Setup parameters for Email integration
    Tools.EmbedDocSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - EmbedDocSystemDef
          default: EmbedDocSystemDef
        resource:
          type: string
          enum:
            - doc
        operation:
          type: string
          enum:
            - embed
        arguments:
          $ref: '#/components/schemas/Tools.EmbedDocSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Embed Doc System Definition
    Tools.EmbedDocSystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The resource ID to embed
      description: Embed Doc System Definition Arguments
    Tools.EmbedDocSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The resource ID to embed
      description: Embed Doc System Definition Arguments
    Tools.EmbedDocSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - EmbedDocSystemDef
          default: EmbedDocSystemDef
        resource:
          type: string
          enum:
            - doc
        operation:
          type: string
          enum:
            - embed
        arguments:
          $ref: '#/components/schemas/Tools.EmbedDocSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Embed Doc System Definition
    Tools.FfmpegIntegrationDef:
      type: object
      required:
        - provider
      properties:
        provider:
          type: string
          enum:
            - ffmpeg
          description: The provider must be "ffmpeg"
          default: ffmpeg
        method:
          type: string
          description: The specific method of the integration to call
        setup:
          nullable: true
          description: The setup parameters for Ffmpeg
          default: null
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.FfmpegSearchArguments'
          description: The arguments for Ffmpeg Search
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDef'
      description: Ffmpeg integration definition
    Tools.FfmpegIntegrationDefUpdate:
      type: object
      properties:
        provider:
          type: string
          enum:
            - ffmpeg
          description: The provider must be "ffmpeg"
          default: ffmpeg
        method:
          type: string
          description: The specific method of the integration to call
        setup:
          nullable: true
          description: The setup parameters for Ffmpeg
          default: null
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.FfmpegSearchArgumentsUpdate'
          description: The arguments for Ffmpeg Search
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDefUpdate'
      description: Ffmpeg integration definition
    Tools.FfmpegSearchArguments:
      type: object
      required:
        - cmd
      properties:
        cmd:
          type: string
          description: The bash command string
        file:
          anyOf:
            - type: string
            - type: array
              items:
                type: string
          description: The base64 string of the file
      description: Arguments for Ffmpeg CMD
    Tools.FfmpegSearchArgumentsUpdate:
      type: object
      properties:
        cmd:
          type: string
          description: The bash command string
        file:
          anyOf:
            - type: string
            - type: array
              items:
                type: string
          description: The base64 string of the file
      description: Arguments for Ffmpeg CMD
    Tools.FunctionCallOption:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: The name of the function
        arguments:
          type: string
          description: The parameters to pass to the function
    Tools.FunctionDef:
      type: object
      properties:
        name:
          nullable: true
          description: 'DO NOT USE: This will be overriden by the tool name. Here only for compatibility reasons.'
          default: null
        description:
          nullable: true
          description: 'DO NOT USE: This will be overriden by the tool description. Here only for compatibility reasons.'
          default: null
        parameters:
          type: object
          additionalProperties: {}
          description: The parameters the function accepts
      description: Function definition
    Tools.GetAgentSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - GetAgentSystemDef
          default: GetAgentSystemDef
        resource:
          type: string
          enum:
            - agent
        operation:
          type: string
          enum:
            - get
        arguments:
          $ref: '#/components/schemas/Tools.GetAgentSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Get Agent System Definition
    Tools.GetAgentSystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The agent ID to get
      description: Get Agent System Definition Arguments
    Tools.GetAgentSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The agent ID to get
      description: Get Agent System Definition Arguments
    Tools.GetAgentSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - GetAgentSystemDef
          default: GetAgentSystemDef
        resource:
          type: string
          enum:
            - agent
        operation:
          type: string
          enum:
            - get
        arguments:
          $ref: '#/components/schemas/Tools.GetAgentSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Get Agent System Definition
    Tools.GetDocSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - GetDocSystemDef
          default: GetDocSystemDef
        resource:
          type: string
          enum:
            - doc
        operation:
          type: string
          enum:
            - get
        arguments:
          $ref: '#/components/schemas/Tools.GetDocSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Get Doc System Definition
    Tools.GetDocSystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The resource ID to get
      description: Get Doc System Definition Arguments
    Tools.GetDocSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The resource ID to get
      description: Get Doc System Definition Arguments
    Tools.GetDocSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - GetDocSystemDef
          default: GetDocSystemDef
        resource:
          type: string
          enum:
            - doc
        operation:
          type: string
          enum:
            - get
        arguments:
          $ref: '#/components/schemas/Tools.GetDocSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Get Doc System Definition
    Tools.GetSessionHistorySystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - GetSessionHistorySystemDef
          default: GetSessionHistorySystemDef
        resource:
          type: string
          enum:
            - session
        operation:
          type: string
          enum:
            - history
        arguments:
          $ref: '#/components/schemas/Tools.GetSessionHistorySystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Get Session History System Definition
    Tools.GetSessionHistorySystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The session ID to get history for
        limit:
          type: integer
          format: int32
          description: Maximum number of results
        before:
          type: string
          description: Get entries before this cursor
      description: Get Session History System Definition Arguments
    Tools.GetSessionHistorySystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The session ID to get history for
        limit:
          type: integer
          format: int32
          description: Maximum number of results
        before:
          type: string
          description: Get entries before this cursor
      description: Get Session History System Definition Arguments
    Tools.GetSessionHistorySystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - GetSessionHistorySystemDef
          default: GetSessionHistorySystemDef
        resource:
          type: string
          enum:
            - session
        operation:
          type: string
          enum:
            - history
        arguments:
          $ref: '#/components/schemas/Tools.GetSessionHistorySystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Get Session History System Definition
    Tools.GetSessionSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - GetSessionSystemDef
          default: GetSessionSystemDef
        resource:
          type: string
          enum:
            - session
        operation:
          type: string
          enum:
            - get
        arguments:
          $ref: '#/components/schemas/Tools.GetSessionSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Get Session System Definition
    Tools.GetSessionSystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The session ID to get
      description: Get Session System Definition Arguments
    Tools.GetSessionSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The session ID to get
      description: Get Session System Definition Arguments
    Tools.GetSessionSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - GetSessionSystemDef
          default: GetSessionSystemDef
        resource:
          type: string
          enum:
            - session
        operation:
          type: string
          enum:
            - get
        arguments:
          $ref: '#/components/schemas/Tools.GetSessionSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Get Session System Definition
    Tools.GetTaskExecutionSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - GetTaskExecutionSystemDef
          default: GetTaskExecutionSystemDef
        resource:
          type: string
          enum:
            - execution
        operation:
          type: string
          enum:
            - get
        arguments:
          $ref: '#/components/schemas/Tools.GetTaskExecutionSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Get Task Execution System Definition
    Tools.GetTaskExecutionSystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The execution ID to get
      description: Get Task Execution System Definition Arguments
    Tools.GetTaskExecutionSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The execution ID to get
      description: Get Task Execution System Definition Arguments
    Tools.GetTaskExecutionSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - GetTaskExecutionSystemDef
          default: GetTaskExecutionSystemDef
        resource:
          type: string
          enum:
            - execution
        operation:
          type: string
          enum:
            - get
        arguments:
          $ref: '#/components/schemas/Tools.GetTaskExecutionSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Get Task Execution System Definition
    Tools.GetTaskSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - GetTaskSystemDef
          default: GetTaskSystemDef
        resource:
          type: string
          enum:
            - task
        operation:
          type: string
          enum:
            - get
        arguments:
          $ref: '#/components/schemas/Tools.GetTaskSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Get Task System Definition
    Tools.GetTaskSystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The task ID to get
      description: Get Task System Definition Arguments
    Tools.GetTaskSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The task ID to get
      description: Get Task System Definition Arguments
    Tools.GetTaskSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - GetTaskSystemDef
          default: GetTaskSystemDef
        resource:
          type: string
          enum:
            - task
        operation:
          type: string
          enum:
            - get
        arguments:
          $ref: '#/components/schemas/Tools.GetTaskSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Get Task System Definition
    Tools.GetUserSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - GetUserSystemDef
          default: GetUserSystemDef
        resource:
          type: string
          enum:
            - user
        operation:
          type: string
          enum:
            - get
        arguments:
          $ref: '#/components/schemas/Tools.GetUserSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Get User System Definition
    Tools.GetUserSystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The user ID to get
      description: Get User System Definition Arguments
    Tools.GetUserSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The user ID to get
      description: Get User System Definition Arguments
    Tools.GetUserSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - GetUserSystemDef
          default: GetUserSystemDef
        resource:
          type: string
          enum:
            - user
        operation:
          type: string
          enum:
            - get
        arguments:
          $ref: '#/components/schemas/Tools.GetUserSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Get User System Definition
    Tools.HybridSearchOwnerDocsSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
        - subresource
      properties:
        system_def_type:
          type: string
          enum:
            - HybridSearchOwnerDocsSystemDef
          default: HybridSearchOwnerDocsSystemDef
        resource:
          type: string
          enum:
            - agent
            - user
        operation:
          type: string
          enum:
            - search
        subresource:
          type: string
          enum:
            - doc
        arguments:
          $ref: '#/components/schemas/Tools.HybridSearchOwnerDocsSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Hybrid Search Documents System Definition - For owner resources
    Tools.HybridSearchOwnerDocsSystemDefArguments:
      type: object
      required:
        - resource_id
        - text
        - vector
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The resource ID to search within
        text:
          type: string
          description: Text to search for
        vector:
          type: array
          items:
            type: number
            format: float
          description: Vector to search for similarity - should be 1024-dimensional vector
        alpha:
          type: number
          format: float
          description: Alpha parameter controlling blend of text vs vector search (0-1)
        confidence:
          type: number
          format: float
          description: Confidence threshold (0-1)
        mmr_strength:
          type: number
          format: float
          description: Maximal Marginal Relevance strength (0-1)
        limit:
          type: integer
          format: int32
          description: Maximum number of results to return
      description: Hybrid Search Owner Docs System Definition Arguments
    Tools.HybridSearchOwnerDocsSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The resource ID to search within
        text:
          type: string
          description: Text to search for
        vector:
          type: array
          items:
            type: number
            format: float
          description: Vector to search for similarity - should be 1024-dimensional vector
        alpha:
          type: number
          format: float
          description: Alpha parameter controlling blend of text vs vector search (0-1)
        confidence:
          type: number
          format: float
          description: Confidence threshold (0-1)
        mmr_strength:
          type: number
          format: float
          description: Maximal Marginal Relevance strength (0-1)
        limit:
          type: integer
          format: int32
          description: Maximum number of results to return
      description: Hybrid Search Owner Docs System Definition Arguments
    Tools.HybridSearchOwnerDocsSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - HybridSearchOwnerDocsSystemDef
          default: HybridSearchOwnerDocsSystemDef
        resource:
          type: string
          enum:
            - agent
            - user
        operation:
          type: string
          enum:
            - search
        subresource:
          type: string
          enum:
            - doc
        arguments:
          $ref: '#/components/schemas/Tools.HybridSearchOwnerDocsSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Hybrid Search Documents System Definition - For owner resources
    Tools.ListAgentsSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - ListAgentsSystemDef
          default: ListAgentsSystemDef
        resource:
          type: string
          enum:
            - agent
        operation:
          type: string
          enum:
            - list
        arguments:
          $ref: '#/components/schemas/Tools.ListAgentsSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: List Agents System Definition
    Tools.ListAgentsSystemDefArguments:
      type: object
      properties:
        filter:
          type: string
          description: Filter string
        limit:
          type: integer
          format: int32
          description: Maximum number of results
        offset:
          type: integer
          format: int32
          description: Offset for pagination
      description: List Agents System Definition Arguments
    Tools.ListAgentsSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - ListAgentsSystemDef
          default: ListAgentsSystemDef
        resource:
          type: string
          enum:
            - agent
        operation:
          type: string
          enum:
            - list
        arguments:
          $ref: '#/components/schemas/Tools.ListAgentsSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: List Agents System Definition
    Tools.ListDocsSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - ListDocsSystemDef
          default: ListDocsSystemDef
        resource:
          type: string
          enum:
            - doc
        operation:
          type: string
          enum:
            - list
        arguments:
          $ref: '#/components/schemas/Tools.ListDocsSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: List Docs System Definition
    Tools.ListDocsSystemDefArguments:
      type: object
      properties:
        filter:
          type: string
          description: Filter string
        limit:
          type: integer
          format: int32
          description: Maximum number of results
        offset:
          type: integer
          format: int32
          description: Offset for pagination
      description: List Docs System Definition Arguments
    Tools.ListDocsSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - ListDocsSystemDef
          default: ListDocsSystemDef
        resource:
          type: string
          enum:
            - doc
        operation:
          type: string
          enum:
            - list
        arguments:
          $ref: '#/components/schemas/Tools.ListDocsSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: List Docs System Definition
    Tools.ListSessionsSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - ListSessionsSystemDef
          default: ListSessionsSystemDef
        resource:
          type: string
          enum:
            - session
        operation:
          type: string
          enum:
            - list
        arguments:
          $ref: '#/components/schemas/Tools.ListSessionsSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: List Sessions System Definition
    Tools.ListSessionsSystemDefArguments:
      type: object
      properties:
        filter:
          type: string
          description: Filter string
        limit:
          type: integer
          format: int32
          description: Maximum number of results
        offset:
          type: integer
          format: int32
          description: Offset for pagination
      description: List Sessions System Definition Arguments
    Tools.ListSessionsSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - ListSessionsSystemDef
          default: ListSessionsSystemDef
        resource:
          type: string
          enum:
            - session
        operation:
          type: string
          enum:
            - list
        arguments:
          $ref: '#/components/schemas/Tools.ListSessionsSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: List Sessions System Definition
    Tools.ListTasksSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - ListTasksSystemDef
          default: ListTasksSystemDef
        resource:
          type: string
          enum:
            - task
        operation:
          type: string
          enum:
            - list
        arguments:
          $ref: '#/components/schemas/Tools.ListTasksSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: List Tasks System Definition
    Tools.ListTasksSystemDefArguments:
      type: object
      properties:
        filter:
          type: string
          description: Filter string
        limit:
          type: integer
          format: int32
          description: Maximum number of results
        offset:
          type: integer
          format: int32
          description: Offset for pagination
      description: List Tasks System Definition Arguments
    Tools.ListTasksSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - ListTasksSystemDef
          default: ListTasksSystemDef
        resource:
          type: string
          enum:
            - task
        operation:
          type: string
          enum:
            - list
        arguments:
          $ref: '#/components/schemas/Tools.ListTasksSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: List Tasks System Definition
    Tools.ListUsersSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - ListUsersSystemDef
          default: ListUsersSystemDef
        resource:
          type: string
          enum:
            - user
        operation:
          type: string
          enum:
            - list
        arguments:
          $ref: '#/components/schemas/Tools.ListUsersSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: List Users System Definition
    Tools.ListUsersSystemDefArguments:
      type: object
      properties:
        filter:
          type: string
          description: Filter string
        limit:
          type: integer
          format: int32
          description: Maximum number of results
        offset:
          type: integer
          format: int32
          description: Offset for pagination
      description: List Users System Definition Arguments
    Tools.ListUsersSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - ListUsersSystemDef
          default: ListUsersSystemDef
        resource:
          type: string
          enum:
            - user
        operation:
          type: string
          enum:
            - list
        arguments:
          $ref: '#/components/schemas/Tools.ListUsersSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: List Users System Definition
    Tools.LlamaParseFetchArguments:
      type: object
      required:
        - file
      properties:
        filename:
          type: string
          description: File Name. If not provided, a random name will be generated.
        file:
          anyOf:
            - type: string
            - type: array
              items:
                type: string
          description: The base64 string of the file, which can be a single string or a list of strings
        params:
          type: object
          additionalProperties: {}
          description: Optional upload parameters
        base64:
          type: boolean
          description: The input file is base64
          default: false
      description: Arguments for LlamaParse integration
    Tools.LlamaParseFetchArgumentsUpdate:
      type: object
      properties:
        filename:
          type: string
          description: File Name. If not provided, a random name will be generated.
        file:
          anyOf:
            - type: string
            - type: array
              items:
                type: string
          description: The base64 string of the file, which can be a single string or a list of strings
        params:
          type: object
          additionalProperties: {}
          description: Optional upload parameters
        base64:
          type: boolean
          description: The input file is base64
          default: false
      description: Arguments for LlamaParse integration
    Tools.LlamaParseIntegrationDef:
      type: object
      required:
        - provider
      properties:
        provider:
          type: string
          enum:
            - llama_parse
          description: The provider must be "LlamaParseSetup"
          default: llama_parse
        method:
          type: string
          description: The specific method of the integration to call
        setup:
          allOf:
            - $ref: '#/components/schemas/Tools.LlamaParseSetup'
          description: The setup parameters for LlamaParse
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.LlamaParseFetchArguments'
          description: The arguments for LlamaParse
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDef'
      description: LlamaParse integration definition
    Tools.LlamaParseIntegrationDefUpdate:
      type: object
      properties:
        provider:
          type: string
          enum:
            - llama_parse
          description: The provider must be "LlamaParseSetup"
          default: llama_parse
        method:
          type: string
          description: The specific method of the integration to call
        setup:
          allOf:
            - $ref: '#/components/schemas/Tools.LlamaParseSetupUpdate'
          description: The setup parameters for LlamaParse
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.LlamaParseFetchArgumentsUpdate'
          description: The arguments for LlamaParse
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDefUpdate'
      description: LlamaParse integration definition
    Tools.LlamaParseSetup:
      type: object
      required:
        - llamaparse_api_key
      properties:
        llamaparse_api_key:
          type: string
          description: The API key for LlamaParse
        params:
          type: object
          additionalProperties: {}
          description: Optional upload parameters
      description: Setup parameters for LlamaParse integration
    Tools.LlamaParseSetupUpdate:
      type: object
      properties:
        llamaparse_api_key:
          type: string
          description: The API key for LlamaParse
        params:
          type: object
          additionalProperties: {}
          description: Optional upload parameters
      description: Setup parameters for LlamaParse integration
    Tools.NamedToolChoice:
      type: object
      properties:
        function:
          $ref: '#/components/schemas/Tools.FunctionCallOption'
    Tools.PatchAgentSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - PatchAgentSystemDef
          default: PatchAgentSystemDef
        resource:
          type: string
          enum:
            - agent
        operation:
          type: string
          enum:
            - patch
        arguments:
          $ref: '#/components/schemas/Tools.PatchAgentSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Patch Agent System Definition
    Tools.PatchAgentSystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The agent ID to patch
        name:
          type: string
          description: Optional name for the agent
        description:
          type: string
          description: Optional description for the agent
        instructions:
          type: string
          description: Optional instructions for the agent
      description: Patch Agent System Definition Arguments
    Tools.PatchAgentSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The agent ID to patch
        name:
          type: string
          description: Optional name for the agent
        description:
          type: string
          description: Optional description for the agent
        instructions:
          type: string
          description: Optional instructions for the agent
      description: Patch Agent System Definition Arguments
    Tools.PatchAgentSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - PatchAgentSystemDef
          default: PatchAgentSystemDef
        resource:
          type: string
          enum:
            - agent
        operation:
          type: string
          enum:
            - patch
        arguments:
          $ref: '#/components/schemas/Tools.PatchAgentSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Patch Agent System Definition
    Tools.PatchSessionSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - PatchSessionSystemDef
          default: PatchSessionSystemDef
        resource:
          type: string
          enum:
            - session
        operation:
          type: string
          enum:
            - patch
        arguments:
          $ref: '#/components/schemas/Tools.PatchSessionSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Patch Session System Definition
    Tools.PatchSessionSystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The session ID to patch
        name:
          type: string
          description: Optional name for the session
        metadata:
          type: object
          additionalProperties: {}
          description: Optional metadata for the session
      description: Patch Session System Definition Arguments
    Tools.PatchSessionSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The session ID to patch
        name:
          type: string
          description: Optional name for the session
        metadata:
          type: object
          additionalProperties: {}
          description: Optional metadata for the session
      description: Patch Session System Definition Arguments
    Tools.PatchSessionSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - PatchSessionSystemDef
          default: PatchSessionSystemDef
        resource:
          type: string
          enum:
            - session
        operation:
          type: string
          enum:
            - patch
        arguments:
          $ref: '#/components/schemas/Tools.PatchSessionSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Patch Session System Definition
    Tools.PatchTaskSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - PatchTaskSystemDef
          default: PatchTaskSystemDef
        resource:
          type: string
          enum:
            - task
        operation:
          type: string
          enum:
            - patch
        arguments:
          $ref: '#/components/schemas/Tools.PatchTaskSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Patch Task System Definition
    Tools.PatchTaskSystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The task ID to patch
        name:
          type: string
          description: Optional name for the task
        description:
          type: string
          description: Optional description for the task
        metadata:
          type: object
          additionalProperties: {}
          description: Optional metadata for the task
      description: Patch Task System Definition Arguments
    Tools.PatchTaskSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The task ID to patch
        name:
          type: string
          description: Optional name for the task
        description:
          type: string
          description: Optional description for the task
        metadata:
          type: object
          additionalProperties: {}
          description: Optional metadata for the task
      description: Patch Task System Definition Arguments
    Tools.PatchTaskSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - PatchTaskSystemDef
          default: PatchTaskSystemDef
        resource:
          type: string
          enum:
            - task
        operation:
          type: string
          enum:
            - patch
        arguments:
          $ref: '#/components/schemas/Tools.PatchTaskSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Patch Task System Definition
    Tools.PatchToolRequest:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/Common.validPythonIdentifier'
          description: Name of the tool (must be unique for this agent and a valid python identifier string )
        type:
          allOf:
            - $ref: '#/components/schemas/Tools.ToolType'
          description: Type of the tool
        description:
          type: string
          description: Description of the tool
        function:
          allOf:
            - $ref: '#/components/schemas/Tools.FunctionDef'
          description: The function to call
        integration:
          anyOf:
            - $ref: '#/components/schemas/Tools.DummyIntegrationDefUpdate'
            - $ref: '#/components/schemas/Tools.BraveIntegrationDefUpdate'
            - $ref: '#/components/schemas/Tools.EmailIntegrationDefUpdate'
            - $ref: '#/components/schemas/Tools.SpiderIntegrationDefUpdate'
            - $ref: '#/components/schemas/Tools.WikipediaIntegrationDefUpdate'
            - $ref: '#/components/schemas/Tools.WeatherIntegrationDefUpdate'
            - $ref: '#/components/schemas/Tools.BrowserbaseContextIntegrationDefUpdate'
            - $ref: '#/components/schemas/Tools.BrowserbaseExtensionIntegrationDefUpdate'
            - $ref: '#/components/schemas/Tools.BrowserbaseListSessionsIntegrationDefUpdate'
            - $ref: '#/components/schemas/Tools.BrowserbaseCreateSessionIntegrationDefUpdate'
            - $ref: '#/components/schemas/Tools.BrowserbaseGetSessionIntegrationDefUpdate'
            - $ref: '#/components/schemas/Tools.BrowserbaseCompleteSessionIntegrationDefUpdate'
            - $ref: '#/components/schemas/Tools.BrowserbaseGetSessionLiveUrlsIntegrationDefUpdate'
            - $ref: '#/components/schemas/Tools.RemoteBrowserIntegrationDefUpdate'
            - $ref: '#/components/schemas/Tools.LlamaParseIntegrationDefUpdate'
            - $ref: '#/components/schemas/Tools.FfmpegIntegrationDefUpdate'
            - $ref: '#/components/schemas/Tools.CloudinaryUploadIntegrationDefUpdate'
            - $ref: '#/components/schemas/Tools.CloudinaryEditIntegrationDefUpdate'
            - $ref: '#/components/schemas/Tools.ArxivIntegrationDefUpdate'
            - $ref: '#/components/schemas/Tools.UnstructuredIntegrationDefUpdate'
            - $ref: '#/components/schemas/Tools.AlgoliaIntegrationDefUpdate'
          description: The integration to call
        system:
          allOf:
            - $ref: '#/components/schemas/Tools.SystemDefUpdate'
          description: The system to call
        api_call:
          allOf:
            - $ref: '#/components/schemas/Tools.ApiCallDefUpdate'
          description: The API call to make
        computer_20241022:
          allOf:
            - $ref: '#/components/schemas/Tools.Computer20241022DefUpdate'
          description: (Alpha) Anthropic new tools
        text_editor_20241022:
          $ref: '#/components/schemas/Tools.TextEditor20241022DefUpdate'
        bash_20241022:
          $ref: '#/components/schemas/Tools.Bash20241022DefUpdate'
      description: Payload for patching a tool
    Tools.PatchUserSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - PatchUserSystemDef
          default: PatchUserSystemDef
        resource:
          type: string
          enum:
            - user
        operation:
          type: string
          enum:
            - patch
        arguments:
          $ref: '#/components/schemas/Tools.PatchUserSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Patch User System Definition
    Tools.PatchUserSystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The user ID to patch
        name:
          type: string
          description: Optional name for the user
        metadata:
          type: object
          additionalProperties: {}
          description: Optional metadata for the user
      description: Patch User System Definition Arguments
    Tools.PatchUserSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The user ID to patch
        name:
          type: string
          description: Optional name for the user
        metadata:
          type: object
          additionalProperties: {}
          description: Optional metadata for the user
      description: Patch User System Definition Arguments
    Tools.PatchUserSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - PatchUserSystemDef
          default: PatchUserSystemDef
        resource:
          type: string
          enum:
            - user
        operation:
          type: string
          enum:
            - patch
        arguments:
          $ref: '#/components/schemas/Tools.PatchUserSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Patch User System Definition
    Tools.RemoteBrowserArguments:
      type: object
      required:
        - action
      properties:
        connect_url:
          type: string
          description: The connection URL for the remote browser
        action:
          type: string
          enum:
            - key
            - type
            - mouse_move
            - left_click
            - left_click_drag
            - right_click
            - middle_click
            - double_click
            - screenshot
            - cursor_position
            - navigate
            - refresh
          description: The action to perform
        text:
          type: string
          description: The text
        coordinate:
          type: array
          items: {}
          description: The coordinate to move the mouse to
      description: The arguments for the remote browser
    Tools.RemoteBrowserArgumentsUpdate:
      type: object
      properties:
        connect_url:
          type: string
          description: The connection URL for the remote browser
        action:
          type: string
          enum:
            - key
            - type
            - mouse_move
            - left_click
            - left_click_drag
            - right_click
            - middle_click
            - double_click
            - screenshot
            - cursor_position
            - navigate
            - refresh
          description: The action to perform
        text:
          type: string
          description: The text
        coordinate:
          type: array
          items: {}
          description: The coordinate to move the mouse to
      description: The arguments for the remote browser
    Tools.RemoteBrowserIntegrationDef:
      type: object
      required:
        - provider
        - setup
        - method
      properties:
        provider:
          type: string
          enum:
            - remote_browser
          default: remote_browser
        setup:
          $ref: '#/components/schemas/Tools.RemoteBrowserSetup'
        method:
          type: string
          enum:
            - perform_action
          default: perform_action
        arguments:
          $ref: '#/components/schemas/Tools.RemoteBrowserArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDef'
      description: The integration definition for the remote browser
    Tools.RemoteBrowserIntegrationDefUpdate:
      type: object
      properties:
        provider:
          type: string
          enum:
            - remote_browser
          default: remote_browser
        setup:
          $ref: '#/components/schemas/Tools.RemoteBrowserSetup'
        method:
          type: string
          enum:
            - perform_action
          default: perform_action
        arguments:
          $ref: '#/components/schemas/Tools.RemoteBrowserArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDefUpdate'
      description: The integration definition for the remote browser
    Tools.RemoteBrowserSetup:
      type: object
      properties:
        connect_url:
          type: string
          description: The connection URL for the remote browser
        width:
          type: integer
          format: uint16
          description: The width of the browser
        height:
          type: integer
          format: uint16
          description: The height of the browser
      description: The setup parameters for the remote browser
    Tools.SimpleSearchDocsSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - SimpleSearchDocsSystemDef
          default: SimpleSearchDocsSystemDef
        resource:
          type: string
          enum:
            - doc
        operation:
          type: string
          enum:
            - search
        arguments:
          $ref: '#/components/schemas/Tools.SimpleSearchDocsSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Search Docs System Definition - Simple query
    Tools.SimpleSearchDocsSystemDefArguments:
      type: object
      required:
        - query
      properties:
        query:
          type: string
          description: The search query
        limit:
          type: integer
          format: int32
          description: Maximum number of results
        search_type:
          type: string
          enum:
            - text
            - embedding
            - hybrid
          description: Type of search to perform
      description: Simple Search Docs System Definition Arguments
    Tools.SimpleSearchDocsSystemDefArgumentsUpdate:
      type: object
      properties:
        query:
          type: string
          description: The search query
        limit:
          type: integer
          format: int32
          description: Maximum number of results
        search_type:
          type: string
          enum:
            - text
            - embedding
            - hybrid
          description: Type of search to perform
      description: Simple Search Docs System Definition Arguments
    Tools.SimpleSearchDocsSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - SimpleSearchDocsSystemDef
          default: SimpleSearchDocsSystemDef
        resource:
          type: string
          enum:
            - doc
        operation:
          type: string
          enum:
            - search
        arguments:
          $ref: '#/components/schemas/Tools.SimpleSearchDocsSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Search Docs System Definition - Simple query
    Tools.SpiderFetchArguments:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          format: uri
          description: The URL to fetch data from
        content_type:
          type: string
          enum:
            - application/json
            - text/csv
            - application/xml
            - application/jsonl
          description: The content type to return
          default: application/json
        params:
          type: object
          additionalProperties: {}
          description: Additional parameters for the Spider API
      description: Arguments for Spider integration
    Tools.SpiderFetchArgumentsUpdate:
      type: object
      properties:
        url:
          type: string
          format: uri
          description: The URL to fetch data from
        content_type:
          type: string
          enum:
            - application/json
            - text/csv
            - application/xml
            - application/jsonl
          description: The content type to return
          default: application/json
        params:
          type: object
          additionalProperties: {}
          description: Additional parameters for the Spider API
      description: Arguments for Spider integration
    Tools.SpiderIntegrationDef:
      type: object
      required:
        - provider
      properties:
        provider:
          type: string
          enum:
            - spider
          description: The provider must be "spider"
          default: spider
        method:
          type: string
          enum:
            - crawl
            - links
            - screenshot
            - search
          description: The specific method of the integration to call
        setup:
          allOf:
            - $ref: '#/components/schemas/Tools.SpiderSetup'
          description: The setup parameters for Spider
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.SpiderFetchArguments'
          description: The arguments for Spider
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDef'
      description: Spider integration definition
    Tools.SpiderIntegrationDefUpdate:
      type: object
      properties:
        provider:
          type: string
          enum:
            - spider
          description: The provider must be "spider"
          default: spider
        method:
          type: string
          enum:
            - crawl
            - links
            - screenshot
            - search
          description: The specific method of the integration to call
        setup:
          allOf:
            - $ref: '#/components/schemas/Tools.SpiderSetupUpdate'
          description: The setup parameters for Spider
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.SpiderFetchArgumentsUpdate'
          description: The arguments for Spider
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDefUpdate'
      description: Spider integration definition
    Tools.SpiderSetup:
      type: object
      required:
        - spider_api_key
      properties:
        spider_api_key:
          type: string
          description: The API key for Spider
      description: Setup parameters for Spider integration
    Tools.SpiderSetupUpdate:
      type: object
      properties:
        spider_api_key:
          type: string
          description: The API key for Spider
      description: Setup parameters for Spider integration
    Tools.SystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          description: The discriminator that tells the system which type this is
        resource:
          type: string
          enum:
            - agent
            - user
            - task
            - execution
            - doc
            - session
            - job
          description: Resource is the name of the resource to use
        operation:
          type: string
          enum:
            - create
            - update
            - patch
            - create_or_update
            - embed
            - change_status
            - search
            - chat
            - history
            - delete
            - get
            - list
          description: Operation is the name of the operation to perform
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: Resource id (if applicable)
        subresource:
          type: string
          enum:
            - tool
            - doc
            - execution
            - transition
          description: Sub-resource type (if applicable)
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.SystemDefArguments'
          description: The arguments to pre-apply to the system call
      discriminator:
        propertyName: system_def_type
        mapping:
          CreateAgentSystemDef: '#/components/schemas/Tools.CreateAgentSystemDef'
          UpdateAgentSystemDef: '#/components/schemas/Tools.UpdateAgentSystemDef'
          PatchAgentSystemDef: '#/components/schemas/Tools.PatchAgentSystemDef'
          GetAgentSystemDef: '#/components/schemas/Tools.GetAgentSystemDef'
          ListAgentsSystemDef: '#/components/schemas/Tools.ListAgentsSystemDef'
          DeleteAgentSystemDef: '#/components/schemas/Tools.DeleteAgentSystemDef'
          CreateAgentToolSystemDef: '#/components/schemas/Tools.CreateAgentToolSystemDef'
          UpdateAgentToolSystemDef: '#/components/schemas/Tools.UpdateAgentToolSystemDef'
          DeleteAgentToolSystemDef: '#/components/schemas/Tools.DeleteAgentToolSystemDef'
          CreateDocSystemDef: '#/components/schemas/Tools.CreateDocSystemDef'
          CreateOwnerDocSystemDef: '#/components/schemas/Tools.CreateOwnerDocSystemDef'
          EmbedDocSystemDef: '#/components/schemas/Tools.EmbedDocSystemDef'
          GetDocSystemDef: '#/components/schemas/Tools.GetDocSystemDef'
          ListDocsSystemDef: '#/components/schemas/Tools.ListDocsSystemDef'
          DeleteDocSystemDef: '#/components/schemas/Tools.DeleteDocSystemDef'
          SimpleSearchDocsSystemDef: '#/components/schemas/Tools.SimpleSearchDocsSystemDef'
          TextSearchOwnerDocsSystemDef: '#/components/schemas/Tools.TextSearchOwnerDocsSystemDef'
          VectorSearchOwnerDocsSystemDef: '#/components/schemas/Tools.VectorSearchOwnerDocsSystemDef'
          HybridSearchOwnerDocsSystemDef: '#/components/schemas/Tools.HybridSearchOwnerDocsSystemDef'
          CreateSessionSystemDef: '#/components/schemas/Tools.CreateSessionSystemDef'
          UpdateSessionSystemDef: '#/components/schemas/Tools.UpdateSessionSystemDef'
          PatchSessionSystemDef: '#/components/schemas/Tools.PatchSessionSystemDef'
          GetSessionSystemDef: '#/components/schemas/Tools.GetSessionSystemDef'
          ListSessionsSystemDef: '#/components/schemas/Tools.ListSessionsSystemDef'
          DeleteSessionSystemDef: '#/components/schemas/Tools.DeleteSessionSystemDef'
          ChatSessionSystemDef: '#/components/schemas/Tools.ChatSessionSystemDef'
          GetSessionHistorySystemDef: '#/components/schemas/Tools.GetSessionHistorySystemDef'
          CreateTaskSystemDef: '#/components/schemas/Tools.CreateTaskSystemDef'
          UpdateTaskSystemDef: '#/components/schemas/Tools.UpdateTaskSystemDef'
          PatchTaskSystemDef: '#/components/schemas/Tools.PatchTaskSystemDef'
          GetTaskSystemDef: '#/components/schemas/Tools.GetTaskSystemDef'
          ListTasksSystemDef: '#/components/schemas/Tools.ListTasksSystemDef'
          DeleteTaskSystemDef: '#/components/schemas/Tools.DeleteTaskSystemDef'
          CreateTaskExecutionSystemDef: '#/components/schemas/Tools.CreateTaskExecutionSystemDef'
          GetTaskExecutionSystemDef: '#/components/schemas/Tools.GetTaskExecutionSystemDef'
          CreateUserSystemDef: '#/components/schemas/Tools.CreateUserSystemDef'
          UpdateUserSystemDef: '#/components/schemas/Tools.UpdateUserSystemDef'
          PatchUserSystemDef: '#/components/schemas/Tools.PatchUserSystemDef'
          GetUserSystemDef: '#/components/schemas/Tools.GetUserSystemDef'
          ListUsersSystemDef: '#/components/schemas/Tools.ListUsersSystemDef'
          DeleteUserSystemDef: '#/components/schemas/Tools.DeleteUserSystemDef'
      description: Base System definition
    Tools.SystemDefArguments:
      type: object
      allOf:
        - type: object
          additionalProperties: {}
    Tools.SystemDefUpdate:
      type: object
      required:
        - system_def_type
      properties:
        system_def_type:
          type: string
          description: The discriminator that tells the system which type this is
        resource:
          type: string
          enum:
            - agent
            - user
            - task
            - execution
            - doc
            - session
            - job
          description: Resource is the name of the resource to use
        operation:
          type: string
          enum:
            - create
            - update
            - patch
            - create_or_update
            - embed
            - change_status
            - search
            - chat
            - history
            - delete
            - get
            - list
          description: Operation is the name of the operation to perform
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: Resource id (if applicable)
        subresource:
          type: string
          enum:
            - tool
            - doc
            - execution
            - transition
          description: Sub-resource type (if applicable)
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.SystemDefArguments'
          description: The arguments to pre-apply to the system call
      discriminator:
        propertyName: system_def_type
        mapping:
          CreateAgentSystemDef: '#/components/schemas/Tools.CreateAgentSystemDefUpdate'
          UpdateAgentSystemDef: '#/components/schemas/Tools.UpdateAgentSystemDefUpdate'
          PatchAgentSystemDef: '#/components/schemas/Tools.PatchAgentSystemDefUpdate'
          GetAgentSystemDef: '#/components/schemas/Tools.GetAgentSystemDefUpdate'
          ListAgentsSystemDef: '#/components/schemas/Tools.ListAgentsSystemDefUpdate'
          DeleteAgentSystemDef: '#/components/schemas/Tools.DeleteAgentSystemDefUpdate'
          CreateAgentToolSystemDef: '#/components/schemas/Tools.CreateAgentToolSystemDefUpdate'
          UpdateAgentToolSystemDef: '#/components/schemas/Tools.UpdateAgentToolSystemDefUpdate'
          DeleteAgentToolSystemDef: '#/components/schemas/Tools.DeleteAgentToolSystemDefUpdate'
          CreateDocSystemDef: '#/components/schemas/Tools.CreateDocSystemDefUpdate'
          CreateOwnerDocSystemDef: '#/components/schemas/Tools.CreateOwnerDocSystemDefUpdate'
          EmbedDocSystemDef: '#/components/schemas/Tools.EmbedDocSystemDefUpdate'
          GetDocSystemDef: '#/components/schemas/Tools.GetDocSystemDefUpdate'
          ListDocsSystemDef: '#/components/schemas/Tools.ListDocsSystemDefUpdate'
          DeleteDocSystemDef: '#/components/schemas/Tools.DeleteDocSystemDefUpdate'
          SimpleSearchDocsSystemDef: '#/components/schemas/Tools.SimpleSearchDocsSystemDefUpdate'
          TextSearchOwnerDocsSystemDef: '#/components/schemas/Tools.TextSearchOwnerDocsSystemDefUpdate'
          VectorSearchOwnerDocsSystemDef: '#/components/schemas/Tools.VectorSearchOwnerDocsSystemDefUpdate'
          HybridSearchOwnerDocsSystemDef: '#/components/schemas/Tools.HybridSearchOwnerDocsSystemDefUpdate'
          CreateSessionSystemDef: '#/components/schemas/Tools.CreateSessionSystemDefUpdate'
          UpdateSessionSystemDef: '#/components/schemas/Tools.UpdateSessionSystemDefUpdate'
          PatchSessionSystemDef: '#/components/schemas/Tools.PatchSessionSystemDefUpdate'
          GetSessionSystemDef: '#/components/schemas/Tools.GetSessionSystemDefUpdate'
          ListSessionsSystemDef: '#/components/schemas/Tools.ListSessionsSystemDefUpdate'
          DeleteSessionSystemDef: '#/components/schemas/Tools.DeleteSessionSystemDefUpdate'
          ChatSessionSystemDef: '#/components/schemas/Tools.ChatSessionSystemDefUpdate'
          GetSessionHistorySystemDef: '#/components/schemas/Tools.GetSessionHistorySystemDefUpdate'
          CreateTaskSystemDef: '#/components/schemas/Tools.CreateTaskSystemDefUpdate'
          UpdateTaskSystemDef: '#/components/schemas/Tools.UpdateTaskSystemDefUpdate'
          PatchTaskSystemDef: '#/components/schemas/Tools.PatchTaskSystemDefUpdate'
          GetTaskSystemDef: '#/components/schemas/Tools.GetTaskSystemDefUpdate'
          ListTasksSystemDef: '#/components/schemas/Tools.ListTasksSystemDefUpdate'
          DeleteTaskSystemDef: '#/components/schemas/Tools.DeleteTaskSystemDefUpdate'
          CreateTaskExecutionSystemDef: '#/components/schemas/Tools.CreateTaskExecutionSystemDefUpdate'
          GetTaskExecutionSystemDef: '#/components/schemas/Tools.GetTaskExecutionSystemDefUpdate'
          CreateUserSystemDef: '#/components/schemas/Tools.CreateUserSystemDefUpdate'
          UpdateUserSystemDef: '#/components/schemas/Tools.UpdateUserSystemDefUpdate'
          PatchUserSystemDef: '#/components/schemas/Tools.PatchUserSystemDefUpdate'
          GetUserSystemDef: '#/components/schemas/Tools.GetUserSystemDefUpdate'
          ListUsersSystemDef: '#/components/schemas/Tools.ListUsersSystemDefUpdate'
          DeleteUserSystemDef: '#/components/schemas/Tools.DeleteUserSystemDefUpdate'
      description: Base System definition
    Tools.TextEditor20241022Def:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - text_editor_20241022
          default: text_editor_20241022
        name:
          type: string
          default: str_replace_editor
    Tools.TextEditor20241022DefUpdate:
      type: object
      properties:
        type:
          type: string
          enum:
            - text_editor_20241022
          default: text_editor_20241022
        name:
          type: string
          default: str_replace_editor
    Tools.TextSearchOwnerDocsSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
        - subresource
      properties:
        system_def_type:
          type: string
          enum:
            - TextSearchOwnerDocsSystemDef
          default: TextSearchOwnerDocsSystemDef
        resource:
          type: string
          enum:
            - agent
            - user
        operation:
          type: string
          enum:
            - search
        subresource:
          type: string
          enum:
            - doc
        arguments:
          $ref: '#/components/schemas/Tools.TextSearchOwnerDocsSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Text Search Documents System Definition - For owner resources
    Tools.TextSearchOwnerDocsSystemDefArguments:
      type: object
      required:
        - resource_id
        - text
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The resource ID to search within
        text:
          type: string
          description: Text to search for
        mmr_strength:
          type: number
          format: float
          description: Maximal Marginal Relevance strength (0-1)
        limit:
          type: integer
          format: int32
          description: Maximum number of results to return
      description: Text Search Owner Docs System Definition Arguments
    Tools.TextSearchOwnerDocsSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The resource ID to search within
        text:
          type: string
          description: Text to search for
        mmr_strength:
          type: number
          format: float
          description: Maximal Marginal Relevance strength (0-1)
        limit:
          type: integer
          format: int32
          description: Maximum number of results to return
      description: Text Search Owner Docs System Definition Arguments
    Tools.TextSearchOwnerDocsSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - TextSearchOwnerDocsSystemDef
          default: TextSearchOwnerDocsSystemDef
        resource:
          type: string
          enum:
            - agent
            - user
        operation:
          type: string
          enum:
            - search
        subresource:
          type: string
          enum:
            - doc
        arguments:
          $ref: '#/components/schemas/Tools.TextSearchOwnerDocsSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Text Search Documents System Definition - For owner resources
    Tools.Tool:
      type: object
      required:
        - name
        - type
        - created_at
        - updated_at
        - id
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/Common.validPythonIdentifier'
          description: Name of the tool (must be unique for this agent and a valid python identifier string )
        type:
          allOf:
            - $ref: '#/components/schemas/Tools.ToolType'
          description: Type of the tool
        description:
          type: string
          description: Description of the tool
        function:
          allOf:
            - $ref: '#/components/schemas/Tools.FunctionDef'
          description: The function to call
        integration:
          anyOf:
            - $ref: '#/components/schemas/Tools.DummyIntegrationDef'
            - $ref: '#/components/schemas/Tools.BraveIntegrationDef'
            - $ref: '#/components/schemas/Tools.EmailIntegrationDef'
            - $ref: '#/components/schemas/Tools.SpiderIntegrationDef'
            - $ref: '#/components/schemas/Tools.WikipediaIntegrationDef'
            - $ref: '#/components/schemas/Tools.WeatherIntegrationDef'
            - $ref: '#/components/schemas/Tools.BrowserbaseContextIntegrationDef'
            - $ref: '#/components/schemas/Tools.BrowserbaseExtensionIntegrationDef'
            - $ref: '#/components/schemas/Tools.BrowserbaseListSessionsIntegrationDef'
            - $ref: '#/components/schemas/Tools.BrowserbaseCreateSessionIntegrationDef'
            - $ref: '#/components/schemas/Tools.BrowserbaseGetSessionIntegrationDef'
            - $ref: '#/components/schemas/Tools.BrowserbaseCompleteSessionIntegrationDef'
            - $ref: '#/components/schemas/Tools.BrowserbaseGetSessionLiveUrlsIntegrationDef'
            - $ref: '#/components/schemas/Tools.RemoteBrowserIntegrationDef'
            - $ref: '#/components/schemas/Tools.LlamaParseIntegrationDef'
            - $ref: '#/components/schemas/Tools.FfmpegIntegrationDef'
            - $ref: '#/components/schemas/Tools.CloudinaryUploadIntegrationDef'
            - $ref: '#/components/schemas/Tools.CloudinaryEditIntegrationDef'
            - $ref: '#/components/schemas/Tools.ArxivIntegrationDef'
            - $ref: '#/components/schemas/Tools.UnstructuredIntegrationDef'
            - $ref: '#/components/schemas/Tools.AlgoliaIntegrationDef'
          description: The integration to call
        system:
          allOf:
            - $ref: '#/components/schemas/Tools.SystemDef'
          description: The system to call
        api_call:
          allOf:
            - $ref: '#/components/schemas/Tools.ApiCallDef'
          description: The API call to make
        computer_20241022:
          allOf:
            - $ref: '#/components/schemas/Tools.Computer20241022Def'
          description: (Alpha) Anthropic new tools
        text_editor_20241022:
          $ref: '#/components/schemas/Tools.TextEditor20241022Def'
        bash_20241022:
          $ref: '#/components/schemas/Tools.Bash20241022Def'
        created_at:
          type: string
          format: date-time
          description: When this resource was created as UTC date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: When this resource was updated as UTC date-time
          readOnly: true
        id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          readOnly: true
    Tools.ToolResponse:
      type: object
      required:
        - id
        - output
      properties:
        id:
          type: string
        output:
          type: object
          additionalProperties: {}
          description: The output of the tool
    Tools.ToolType:
      type: string
      enum:
        - function
        - integration
        - system
        - api_call
        - computer_20241022
        - text_editor_20241022
        - bash_20241022
    Tools.UnstructuredIntegrationDef:
      type: object
      required:
        - provider
      properties:
        provider:
          type: string
          enum:
            - unstructured
          description: The provider must be "unstructured"
          default: unstructured
        method:
          type: string
          description: The specific method of the integration to call
        setup:
          allOf:
            - $ref: '#/components/schemas/Tools.UnstructuredSetup'
          description: The setup parameters for Unstructured
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.UnstructuredPartitionArguments'
          description: The arguments for Unstructured
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDef'
      description: Unstructured integration definition
    Tools.UnstructuredIntegrationDefUpdate:
      type: object
      properties:
        provider:
          type: string
          enum:
            - unstructured
          description: The provider must be "unstructured"
          default: unstructured
        method:
          type: string
          description: The specific method of the integration to call
        setup:
          allOf:
            - $ref: '#/components/schemas/Tools.UnstructuredSetupUpdate'
          description: The setup parameters for Unstructured
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.UnstructuredPartitionArgumentsUpdate'
          description: The arguments for Unstructured
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDefUpdate'
      description: Unstructured integration definition
    Tools.UnstructuredPartitionArguments:
      type: object
      required:
        - file
      properties:
        filename:
          type: string
          description: File Name. If not provided, a random name will be generated.
        file:
          type: string
          description: The base64 string of the file, which can be a single string or a list of strings
        partition_params:
          type: object
          additionalProperties: {}
          description: Additional partition parameters
      description: Arguments for Unstructured partition integration
    Tools.UnstructuredPartitionArgumentsUpdate:
      type: object
      properties:
        filename:
          type: string
          description: File Name. If not provided, a random name will be generated.
        file:
          type: string
          description: The base64 string of the file, which can be a single string or a list of strings
        partition_params:
          type: object
          additionalProperties: {}
          description: Additional partition parameters
      description: Arguments for Unstructured partition integration
    Tools.UnstructuredSetup:
      type: object
      required:
        - unstructured_api_key
      properties:
        unstructured_api_key:
          type: string
          description: The API key for Unstructured.io
        server_url:
          type: string
          description: Optional server endpoint URL
        server:
          type: string
          description: The server by name to use for all methods
        url_params:
          type: object
          additionalProperties: {}
          description: Parameters to optionally template the server URL with
        retry_config:
          type: object
          additionalProperties: {}
          description: The retry configuration to use for all supported methods
        timeout_ms:
          type: integer
          format: int16
          description: Optional request timeout applied to each operation in milliseconds
      description: Setup parameters for Unstructured integration
    Tools.UnstructuredSetupUpdate:
      type: object
      properties:
        unstructured_api_key:
          type: string
          description: The API key for Unstructured.io
        server_url:
          type: string
          description: Optional server endpoint URL
        server:
          type: string
          description: The server by name to use for all methods
        url_params:
          type: object
          additionalProperties: {}
          description: Parameters to optionally template the server URL with
        retry_config:
          type: object
          additionalProperties: {}
          description: The retry configuration to use for all supported methods
        timeout_ms:
          type: integer
          format: int16
          description: Optional request timeout applied to each operation in milliseconds
      description: Setup parameters for Unstructured integration
    Tools.UpdateAgentSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - UpdateAgentSystemDef
          default: UpdateAgentSystemDef
        resource:
          type: string
          enum:
            - agent
        operation:
          type: string
          enum:
            - update
        arguments:
          $ref: '#/components/schemas/Tools.UpdateAgentSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Update Agent System Definition
    Tools.UpdateAgentSystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The agent ID to update
        name:
          type: string
          description: Optional name for the agent
        description:
          type: string
          description: Optional description for the agent
        instructions:
          type: string
          description: Optional instructions for the agent
        tools:
          type: array
          items: {}
          description: Optional tools for the agent
      description: Update Agent System Definition Arguments
    Tools.UpdateAgentSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The agent ID to update
        name:
          type: string
          description: Optional name for the agent
        description:
          type: string
          description: Optional description for the agent
        instructions:
          type: string
          description: Optional instructions for the agent
        tools:
          type: array
          items: {}
          description: Optional tools for the agent
      description: Update Agent System Definition Arguments
    Tools.UpdateAgentSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - UpdateAgentSystemDef
          default: UpdateAgentSystemDef
        resource:
          type: string
          enum:
            - agent
        operation:
          type: string
          enum:
            - update
        arguments:
          $ref: '#/components/schemas/Tools.UpdateAgentSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Update Agent System Definition
    Tools.UpdateAgentToolSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
        - subresource
      properties:
        system_def_type:
          type: string
          enum:
            - UpdateAgentToolSystemDef
          default: UpdateAgentToolSystemDef
        resource:
          type: string
          enum:
            - agent
        operation:
          type: string
          enum:
            - update
        subresource:
          type: string
          enum:
            - tool
        arguments:
          $ref: '#/components/schemas/Tools.UpdateAgentToolSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Update Agent Tool System Definition
    Tools.UpdateAgentToolSystemDefArguments:
      type: object
      required:
        - resource_id
        - name
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The agent ID that owns the tool
        name:
          type: string
          description: Name of the tool to update
        type:
          type: string
          description: Optional type of the tool
        description:
          type: string
          description: Optional description for the tool
        function:
          description: Optional function specification
        integration:
          description: Optional integration specification
        system:
          description: Optional system specification
        api_call:
          description: Optional API call specification
      description: Update Agent Tool System Definition Arguments
    Tools.UpdateAgentToolSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The agent ID that owns the tool
        name:
          type: string
          description: Name of the tool to update
        type:
          type: string
          description: Optional type of the tool
        description:
          type: string
          description: Optional description for the tool
        function:
          description: Optional function specification
        integration:
          description: Optional integration specification
        system:
          description: Optional system specification
        api_call:
          description: Optional API call specification
      description: Update Agent Tool System Definition Arguments
    Tools.UpdateAgentToolSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - UpdateAgentToolSystemDef
          default: UpdateAgentToolSystemDef
        resource:
          type: string
          enum:
            - agent
        operation:
          type: string
          enum:
            - update
        subresource:
          type: string
          enum:
            - tool
        arguments:
          $ref: '#/components/schemas/Tools.UpdateAgentToolSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Update Agent Tool System Definition
    Tools.UpdateSessionSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - UpdateSessionSystemDef
          default: UpdateSessionSystemDef
        resource:
          type: string
          enum:
            - session
        operation:
          type: string
          enum:
            - update
        arguments:
          $ref: '#/components/schemas/Tools.UpdateSessionSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Update Session System Definition
    Tools.UpdateSessionSystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The session ID to update
        name:
          type: string
          description: Optional name for the session
        metadata:
          type: object
          additionalProperties: {}
          description: Optional metadata for the session
      description: Update Session System Definition Arguments
    Tools.UpdateSessionSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The session ID to update
        name:
          type: string
          description: Optional name for the session
        metadata:
          type: object
          additionalProperties: {}
          description: Optional metadata for the session
      description: Update Session System Definition Arguments
    Tools.UpdateSessionSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - UpdateSessionSystemDef
          default: UpdateSessionSystemDef
        resource:
          type: string
          enum:
            - session
        operation:
          type: string
          enum:
            - update
        arguments:
          $ref: '#/components/schemas/Tools.UpdateSessionSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Update Session System Definition
    Tools.UpdateTaskSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - UpdateTaskSystemDef
          default: UpdateTaskSystemDef
        resource:
          type: string
          enum:
            - task
        operation:
          type: string
          enum:
            - update
        arguments:
          $ref: '#/components/schemas/Tools.UpdateTaskSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Update Task System Definition
    Tools.UpdateTaskSystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The task ID to update
        name:
          type: string
          description: Optional name for the task
        description:
          type: string
          description: Optional description for the task
        steps:
          type: array
          items: {}
          description: Optional steps that define the task workflow
        metadata:
          type: object
          additionalProperties: {}
          description: Optional metadata for the task
      description: Update Task System Definition Arguments
    Tools.UpdateTaskSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The task ID to update
        name:
          type: string
          description: Optional name for the task
        description:
          type: string
          description: Optional description for the task
        steps:
          type: array
          items: {}
          description: Optional steps that define the task workflow
        metadata:
          type: object
          additionalProperties: {}
          description: Optional metadata for the task
      description: Update Task System Definition Arguments
    Tools.UpdateTaskSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - UpdateTaskSystemDef
          default: UpdateTaskSystemDef
        resource:
          type: string
          enum:
            - task
        operation:
          type: string
          enum:
            - update
        arguments:
          $ref: '#/components/schemas/Tools.UpdateTaskSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Update Task System Definition
    Tools.UpdateToolRequest:
      type: object
      required:
        - name
        - type
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/Common.validPythonIdentifier'
          description: Name of the tool (must be unique for this agent and a valid python identifier string )
        type:
          allOf:
            - $ref: '#/components/schemas/Tools.ToolType'
          description: Type of the tool
        description:
          type: string
          description: Description of the tool
        function:
          allOf:
            - $ref: '#/components/schemas/Tools.FunctionDef'
          description: The function to call
        integration:
          anyOf:
            - $ref: '#/components/schemas/Tools.DummyIntegrationDef'
            - $ref: '#/components/schemas/Tools.BraveIntegrationDef'
            - $ref: '#/components/schemas/Tools.EmailIntegrationDef'
            - $ref: '#/components/schemas/Tools.SpiderIntegrationDef'
            - $ref: '#/components/schemas/Tools.WikipediaIntegrationDef'
            - $ref: '#/components/schemas/Tools.WeatherIntegrationDef'
            - $ref: '#/components/schemas/Tools.BrowserbaseContextIntegrationDef'
            - $ref: '#/components/schemas/Tools.BrowserbaseExtensionIntegrationDef'
            - $ref: '#/components/schemas/Tools.BrowserbaseListSessionsIntegrationDef'
            - $ref: '#/components/schemas/Tools.BrowserbaseCreateSessionIntegrationDef'
            - $ref: '#/components/schemas/Tools.BrowserbaseGetSessionIntegrationDef'
            - $ref: '#/components/schemas/Tools.BrowserbaseCompleteSessionIntegrationDef'
            - $ref: '#/components/schemas/Tools.BrowserbaseGetSessionLiveUrlsIntegrationDef'
            - $ref: '#/components/schemas/Tools.RemoteBrowserIntegrationDef'
            - $ref: '#/components/schemas/Tools.LlamaParseIntegrationDef'
            - $ref: '#/components/schemas/Tools.FfmpegIntegrationDef'
            - $ref: '#/components/schemas/Tools.CloudinaryUploadIntegrationDef'
            - $ref: '#/components/schemas/Tools.CloudinaryEditIntegrationDef'
            - $ref: '#/components/schemas/Tools.ArxivIntegrationDef'
            - $ref: '#/components/schemas/Tools.UnstructuredIntegrationDef'
            - $ref: '#/components/schemas/Tools.AlgoliaIntegrationDef'
          description: The integration to call
        system:
          allOf:
            - $ref: '#/components/schemas/Tools.SystemDef'
          description: The system to call
        api_call:
          allOf:
            - $ref: '#/components/schemas/Tools.ApiCallDef'
          description: The API call to make
        computer_20241022:
          allOf:
            - $ref: '#/components/schemas/Tools.Computer20241022Def'
          description: (Alpha) Anthropic new tools
        text_editor_20241022:
          $ref: '#/components/schemas/Tools.TextEditor20241022Def'
        bash_20241022:
          $ref: '#/components/schemas/Tools.Bash20241022Def'
      description: Payload for updating a tool
    Tools.UpdateUserSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
      properties:
        system_def_type:
          type: string
          enum:
            - UpdateUserSystemDef
          default: UpdateUserSystemDef
        resource:
          type: string
          enum:
            - user
        operation:
          type: string
          enum:
            - update
        arguments:
          $ref: '#/components/schemas/Tools.UpdateUserSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Update User System Definition
    Tools.UpdateUserSystemDefArguments:
      type: object
      required:
        - resource_id
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The user ID to update
        user_id:
          type: string
          description: Optional user identifier
        name:
          type: string
          description: Optional name for the user
        metadata:
          type: object
          additionalProperties: {}
          description: Optional metadata for the user
      description: Update User System Definition Arguments
    Tools.UpdateUserSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The user ID to update
        user_id:
          type: string
          description: Optional user identifier
        name:
          type: string
          description: Optional name for the user
        metadata:
          type: object
          additionalProperties: {}
          description: Optional metadata for the user
      description: Update User System Definition Arguments
    Tools.UpdateUserSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - UpdateUserSystemDef
          default: UpdateUserSystemDef
        resource:
          type: string
          enum:
            - user
        operation:
          type: string
          enum:
            - update
        arguments:
          $ref: '#/components/schemas/Tools.UpdateUserSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Update User System Definition
    Tools.VectorSearchOwnerDocsSystemDef:
      type: object
      required:
        - system_def_type
        - resource
        - operation
        - subresource
      properties:
        system_def_type:
          type: string
          enum:
            - VectorSearchOwnerDocsSystemDef
          default: VectorSearchOwnerDocsSystemDef
        resource:
          type: string
          enum:
            - agent
            - user
        operation:
          type: string
          enum:
            - search
        subresource:
          type: string
          enum:
            - doc
        arguments:
          $ref: '#/components/schemas/Tools.VectorSearchOwnerDocsSystemDefArguments'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDef'
      description: Vector Search Documents System Definition - For owner resources
    Tools.VectorSearchOwnerDocsSystemDefArguments:
      type: object
      required:
        - resource_id
        - vector
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The resource ID to search within
        vector:
          type: array
          items:
            type: number
            format: float
          description: Vector to search for similarity - should be 1024-dimensional vector
        mmr_strength:
          type: number
          format: float
          description: Maximal Marginal Relevance strength (0-1)
        confidence:
          type: number
          format: float
          description: Confidence threshold (0-1)
        limit:
          type: integer
          format: int32
          description: Maximum number of results to return
      description: Vector Search Owner Docs System Definition Arguments
    Tools.VectorSearchOwnerDocsSystemDefArgumentsUpdate:
      type: object
      properties:
        resource_id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          description: The resource ID to search within
        vector:
          type: array
          items:
            type: number
            format: float
          description: Vector to search for similarity - should be 1024-dimensional vector
        mmr_strength:
          type: number
          format: float
          description: Maximal Marginal Relevance strength (0-1)
        confidence:
          type: number
          format: float
          description: Confidence threshold (0-1)
        limit:
          type: integer
          format: int32
          description: Maximum number of results to return
      description: Vector Search Owner Docs System Definition Arguments
    Tools.VectorSearchOwnerDocsSystemDefUpdate:
      type: object
      properties:
        system_def_type:
          type: string
          enum:
            - VectorSearchOwnerDocsSystemDef
          default: VectorSearchOwnerDocsSystemDef
        resource:
          type: string
          enum:
            - agent
            - user
        operation:
          type: string
          enum:
            - search
        subresource:
          type: string
          enum:
            - doc
        arguments:
          $ref: '#/components/schemas/Tools.VectorSearchOwnerDocsSystemDefArgumentsUpdate'
      allOf:
        - $ref: '#/components/schemas/Tools.SystemDefUpdate'
      description: Vector Search Documents System Definition - For owner resources
    Tools.WeatherGetArguments:
      type: object
      required:
        - location
      properties:
        location:
          type: string
          description: The location for which to fetch weather data
      description: Arguments for Weather
    Tools.WeatherGetArgumentsUpdate:
      type: object
      properties:
        location:
          type: string
          description: The location for which to fetch weather data
      description: Arguments for Weather
    Tools.WeatherIntegrationDef:
      type: object
      required:
        - provider
      properties:
        provider:
          type: string
          enum:
            - weather
          description: The provider must be "weather"
          default: weather
        method:
          type: string
          description: The specific method of the integration to call
        setup:
          allOf:
            - $ref: '#/components/schemas/Tools.WeatherSetup'
          description: The setup parameters for Weather
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.WeatherGetArguments'
          description: The arguments for Weather
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDef'
      description: Weather integration definition
    Tools.WeatherIntegrationDefUpdate:
      type: object
      properties:
        provider:
          type: string
          enum:
            - weather
          description: The provider must be "weather"
          default: weather
        method:
          type: string
          description: The specific method of the integration to call
        setup:
          allOf:
            - $ref: '#/components/schemas/Tools.WeatherSetupUpdate'
          description: The setup parameters for Weather
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.WeatherGetArgumentsUpdate'
          description: The arguments for Weather
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDefUpdate'
      description: Weather integration definition
    Tools.WeatherSetup:
      type: object
      required:
        - openweathermap_api_key
      properties:
        openweathermap_api_key:
          type: string
          description: The api key for OpenWeatherMap
      description: Integration definition for Weather
    Tools.WeatherSetupUpdate:
      type: object
      properties:
        openweathermap_api_key:
          type: string
          description: The api key for OpenWeatherMap
      description: Integration definition for Weather
    Tools.WikipediaIntegrationDef:
      type: object
      required:
        - provider
      properties:
        provider:
          type: string
          enum:
            - wikipedia
          description: The provider must be "wikipedia"
          default: wikipedia
        method:
          type: string
          description: The specific method of the integration to call
        setup:
          nullable: true
          description: The setup parameters for Wikipedia
          default: null
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.WikipediaSearchArguments'
          description: The arguments for Wikipedia Search
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDef'
      description: Wikipedia integration definition
    Tools.WikipediaIntegrationDefUpdate:
      type: object
      properties:
        provider:
          type: string
          enum:
            - wikipedia
          description: The provider must be "wikipedia"
          default: wikipedia
        method:
          type: string
          description: The specific method of the integration to call
        setup:
          nullable: true
          description: The setup parameters for Wikipedia
          default: null
        arguments:
          allOf:
            - $ref: '#/components/schemas/Tools.WikipediaSearchArgumentsUpdate'
          description: The arguments for Wikipedia Search
      allOf:
        - $ref: '#/components/schemas/Tools.BaseIntegrationDefUpdate'
      description: Wikipedia integration definition
    Tools.WikipediaSearchArguments:
      type: object
      required:
        - query
        - load_max_docs
      properties:
        query:
          type: string
          description: The search query string
        load_max_docs:
          type: integer
          format: uint8
          minimum: 1
          maximum: 10
          description: Maximum number of documents to load
          default: 2
      description: Arguments for Wikipedia Search
    Tools.WikipediaSearchArgumentsUpdate:
      type: object
      properties:
        query:
          type: string
          description: The search query string
        load_max_docs:
          type: integer
          format: uint8
          minimum: 1
          maximum: 10
          description: Maximum number of documents to load
          default: 2
      description: Arguments for Wikipedia Search
    Users.CreateOrUpdateUserRequest:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/Common.uuid'
      allOf:
        - $ref: '#/components/schemas/Users.CreateUserRequest'
    Users.CreateUserRequest:
      type: object
      required:
        - name
        - about
      properties:
        metadata:
          type: object
          additionalProperties: {}
        name:
          allOf:
            - $ref: '#/components/schemas/Common.identifierSafeUnicode'
          description: Name of the user
          default: ''
        about:
          type: string
          description: About the user
          default: ''
      description: Payload for creating a user (and associated documents)
    Users.PatchUserRequest:
      type: object
      properties:
        metadata:
          type: object
          additionalProperties: {}
        name:
          allOf:
            - $ref: '#/components/schemas/Common.identifierSafeUnicode'
          description: Name of the user
          default: ''
        about:
          type: string
          description: About the user
          default: ''
      description: Payload for patching a user
    Users.UpdateUserRequest:
      type: object
      required:
        - name
        - about
      properties:
        metadata:
          type: object
          additionalProperties: {}
        name:
          allOf:
            - $ref: '#/components/schemas/Common.identifierSafeUnicode'
          description: Name of the user
          default: ''
        about:
          type: string
          description: About the user
          default: ''
      description: Payload for updating a user
    Users.User:
      type: object
      required:
        - id
        - created_at
        - updated_at
        - name
        - about
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Common.uuid'
          readOnly: true
        metadata:
          type: object
          additionalProperties: {}
        created_at:
          type: string
          format: date-time
          description: When this resource was created as UTC date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: When this resource was updated as UTC date-time
          readOnly: true
        name:
          allOf:
            - $ref: '#/components/schemas/Common.identifierSafeUnicode'
          description: Name of the user
          default: ''
        about:
          type: string
          description: About the user
          default: ''
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
    ApiKeyAuth_:
      type: apiKey
      in: header
      name: X-Auth-Key
servers:
  - url: https://{serverEnv}.julep.ai/api
    description: The julep cloud service endpoint
    variables:
      serverEnv:
        default: api
        description: The environment to use
        enum:
          - api
          - dev
